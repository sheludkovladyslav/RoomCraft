let e,t,n,i,r,a,s,o;var l="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};function h(e){return e&&e.__esModule?e.default:e}function u(e){return new URL(c+(e=f.i?.[e]||e),import.meta.url).toString()}var c="./",d={},p={},f=l.parcelRequire4fae;null==f&&((f=function(e){if(e in d)return d[e].exports;if(e in p){var t=p[e];delete p[e];var n={id:e,exports:{}};return d[e]=n,t.call(n.exports,n,n.exports),n.exports}var i=Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(e,t){p[e]=t},l.parcelRequire4fae=f);var m=f.register;m("kEUo3",function(e,t){(function(){var n,i="Expected a function",r="__lodash_hash_undefined__",a="__lodash_placeholder__",s=1/0,o=0/0,h=[["ary",128],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",32],["partialRight",64],["rearg",256]],u="[object Arguments]",c="[object Array]",d="[object Boolean]",p="[object Date]",f="[object Error]",m="[object Function]",g="[object GeneratorFunction]",v="[object Map]",_="[object Number]",y="[object Object]",x="[object Promise]",b="[object RegExp]",M="[object Set]",S="[object String]",E="[object Symbol]",T="[object WeakMap]",w="[object ArrayBuffer]",A="[object DataView]",R="[object Float32Array]",C="[object Float64Array]",P="[object Int8Array]",L="[object Int16Array]",I="[object Int32Array]",N="[object Uint8Array]",D="[object Uint8ClampedArray]",U="[object Uint16Array]",O="[object Uint32Array]",F=/\b__p \+= '';/g,B=/\b(__p \+=) '' \+/g,z=/(__e\(.*?\)|\b__t\)) \+\n'';/g,k=/&(?:amp|lt|gt|quot|#39);/g,H=/[&<>"']/g,V=RegExp(k.source),G=RegExp(H.source),W=/<%-([\s\S]+?)%>/g,j=/<%([\s\S]+?)%>/g,X=/<%=([\s\S]+?)%>/g,q=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Y=/^\w*$/,K=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Z=/[\\^$.*+?()[\]{}|]/g,J=RegExp(Z.source),$=/^\s+/,Q=/\s/,ee=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,et=/\{\n\/\* \[wrapped with (.+)\] \*/,en=/,? & /,ei=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,er=/[()=,{}\[\]\/\s]/,ea=/\\(\\)?/g,es=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,eo=/\w*$/,el=/^[-+]0x[0-9a-f]+$/i,eh=/^0b[01]+$/i,eu=/^\[object .+?Constructor\]$/,ec=/^0o[0-7]+$/i,ed=/^(?:0|[1-9]\d*)$/,ep=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,ef=/($^)/,em=/['\n\r\u2028\u2029\\]/g,eg="\ud800-\udfff",ev="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",e_="\\u2700-\\u27bf",ey="a-z\\xdf-\\xf6\\xf8-\\xff",ex="A-Z\\xc0-\\xd6\\xd8-\\xde",eb="\\ufe0e\\ufe0f",eM="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",eS="['’]",eE="["+eM+"]",eT="["+ev+"]",ew="["+ey+"]",eA="[^"+eg+eM+"\\d+"+e_+ey+ex+"]",eR="\ud83c[\udffb-\udfff]",eC="[^"+eg+"]",eP="(?:\ud83c[\udde6-\uddff]){2}",eL="[\ud800-\udbff][\udc00-\udfff]",eI="["+ex+"]",eN="\\u200d",eD="(?:"+ew+"|"+eA+")",eU="(?:"+eI+"|"+eA+")",eO="(?:"+eS+"(?:d|ll|m|re|s|t|ve))?",eF="(?:"+eS+"(?:D|LL|M|RE|S|T|VE))?",eB="(?:"+eT+"|"+eR+")?",ez="["+eb+"]?",ek="(?:"+eN+"(?:"+[eC,eP,eL].join("|")+")"+ez+eB+")*",eH=ez+eB+ek,eV="(?:"+["["+e_+"]",eP,eL].join("|")+")"+eH,eG="(?:"+[eC+eT+"?",eT,eP,eL,"["+eg+"]"].join("|")+")",eW=RegExp(eS,"g"),ej=RegExp(eT,"g"),eX=RegExp(eR+"(?="+eR+")|"+eG+eH,"g"),eq=RegExp([eI+"?"+ew+"+"+eO+"(?="+[eE,eI,"$"].join("|")+")",eU+"+"+eF+"(?="+[eE,eI+eD,"$"].join("|")+")",eI+"?"+eD+"+"+eO,eI+"+"+eF,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])|\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])|\\d+",eV].join("|"),"g"),eY=RegExp("["+eN+eg+ev+eb+"]"),eK=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,eZ=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],eJ=-1,e$={};e$[R]=e$[C]=e$[P]=e$[L]=e$[I]=e$[N]=e$[D]=e$[U]=e$[O]=!0,e$[u]=e$[c]=e$[w]=e$[d]=e$[A]=e$[p]=e$[f]=e$[m]=e$[v]=e$[_]=e$[y]=e$[b]=e$[M]=e$[S]=e$[T]=!1;var eQ={};eQ[u]=eQ[c]=eQ[w]=eQ[A]=eQ[d]=eQ[p]=eQ[R]=eQ[C]=eQ[P]=eQ[L]=eQ[I]=eQ[v]=eQ[_]=eQ[y]=eQ[b]=eQ[M]=eQ[S]=eQ[E]=eQ[N]=eQ[D]=eQ[U]=eQ[O]=!0,eQ[f]=eQ[m]=eQ[T]=!1;var e0={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},e1=parseFloat,e2=parseInt,e3="object"==typeof l&&l&&l.Object===Object&&l,e4="object"==typeof self&&self&&self.Object===Object&&self,e5=e3||e4||Function("return this")(),e6=t&&!t.nodeType&&t,e8=e6&&e&&!e.nodeType&&e,e9=e8&&e8.exports===e6,e7=e9&&e3.process,te=function(){try{var e=e8&&e8.require&&e8.require("util").types;if(e)return e;return e7&&e7.binding&&e7.binding("util")}catch(e){}}(),tt=te&&te.isArrayBuffer,tn=te&&te.isDate,ti=te&&te.isMap,tr=te&&te.isRegExp,ta=te&&te.isSet,ts=te&&te.isTypedArray;function to(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function tl(e,t,n,i){for(var r=-1,a=null==e?0:e.length;++r<a;){var s=e[r];t(i,s,n(s),e)}return i}function th(e,t){for(var n=-1,i=null==e?0:e.length;++n<i&&!1!==t(e[n],n,e););return e}function tu(e,t){for(var n=-1,i=null==e?0:e.length;++n<i;)if(!t(e[n],n,e))return!1;return!0}function tc(e,t){for(var n=-1,i=null==e?0:e.length,r=0,a=[];++n<i;){var s=e[n];t(s,n,e)&&(a[r++]=s)}return a}function td(e,t){return!!(null==e?0:e.length)&&tM(e,t,0)>-1}function tp(e,t,n){for(var i=-1,r=null==e?0:e.length;++i<r;)if(n(t,e[i]))return!0;return!1}function tf(e,t){for(var n=-1,i=null==e?0:e.length,r=Array(i);++n<i;)r[n]=t(e[n],n,e);return r}function tm(e,t){for(var n=-1,i=t.length,r=e.length;++n<i;)e[r+n]=t[n];return e}function tg(e,t,n,i){var r=-1,a=null==e?0:e.length;for(i&&a&&(n=e[++r]);++r<a;)n=t(n,e[r],r,e);return n}function tv(e,t,n,i){var r=null==e?0:e.length;for(i&&r&&(n=e[--r]);r--;)n=t(n,e[r],r,e);return n}function t_(e,t){for(var n=-1,i=null==e?0:e.length;++n<i;)if(t(e[n],n,e))return!0;return!1}var ty=tw("length");function tx(e,t,n){var i;return n(e,function(e,n,r){if(t(e,n,r))return i=n,!1}),i}function tb(e,t,n,i){for(var r=e.length,a=n+(i?1:-1);i?a--:++a<r;)if(t(e[a],a,e))return a;return -1}function tM(e,t,n){return t==t?function(e,t,n){for(var i=n-1,r=e.length;++i<r;)if(e[i]===t)return i;return -1}(e,t,n):tb(e,tE,n)}function tS(e,t,n,i){for(var r=n-1,a=e.length;++r<a;)if(i(e[r],t))return r;return -1}function tE(e){return e!=e}function tT(e,t){var n=null==e?0:e.length;return n?tC(e,t)/n:o}function tw(e){return function(t){return null==t?n:t[e]}}function tA(e){return function(t){return null==e?n:e[t]}}function tR(e,t,n,i,r){return r(e,function(e,r,a){n=i?(i=!1,e):t(n,e,r,a)}),n}function tC(e,t){for(var i,r=-1,a=e.length;++r<a;){var s=t(e[r]);s!==n&&(i=i===n?s:i+s)}return i}function tP(e,t){for(var n=-1,i=Array(e);++n<e;)i[n]=t(n);return i}function tL(e){return e?e.slice(0,tq(e)+1).replace($,""):e}function tI(e){return function(t){return e(t)}}function tN(e,t){return tf(t,function(t){return e[t]})}function tD(e,t){return e.has(t)}function tU(e,t){for(var n=-1,i=e.length;++n<i&&tM(t,e[n],0)>-1;);return n}function tO(e,t){for(var n=e.length;n--&&tM(t,e[n],0)>-1;);return n}var tF=tA({À:"A",Á:"A",Â:"A",Ã:"A",Ä:"A",Å:"A",à:"a",á:"a",â:"a",ã:"a",ä:"a",å:"a",Ç:"C",ç:"c",Ð:"D",ð:"d",È:"E",É:"E",Ê:"E",Ë:"E",è:"e",é:"e",ê:"e",ë:"e",Ì:"I",Í:"I",Î:"I",Ï:"I",ì:"i",í:"i",î:"i",ï:"i",Ñ:"N",ñ:"n",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"O",Ø:"O",ò:"o",ó:"o",ô:"o",õ:"o",ö:"o",ø:"o",Ù:"U",Ú:"U",Û:"U",Ü:"U",ù:"u",ú:"u",û:"u",ü:"u",Ý:"Y",ý:"y",ÿ:"y",Æ:"Ae",æ:"ae",Þ:"Th",þ:"th",ß:"ss",Ā:"A",Ă:"A",Ą:"A",ā:"a",ă:"a",ą:"a",Ć:"C",Ĉ:"C",Ċ:"C",Č:"C",ć:"c",ĉ:"c",ċ:"c",č:"c",Ď:"D",Đ:"D",ď:"d",đ:"d",Ē:"E",Ĕ:"E",Ė:"E",Ę:"E",Ě:"E",ē:"e",ĕ:"e",ė:"e",ę:"e",ě:"e",Ĝ:"G",Ğ:"G",Ġ:"G",Ģ:"G",ĝ:"g",ğ:"g",ġ:"g",ģ:"g",Ĥ:"H",Ħ:"H",ĥ:"h",ħ:"h",Ĩ:"I",Ī:"I",Ĭ:"I",Į:"I",İ:"I",ĩ:"i",ī:"i",ĭ:"i",į:"i",ı:"i",Ĵ:"J",ĵ:"j",Ķ:"K",ķ:"k",ĸ:"k",Ĺ:"L",Ļ:"L",Ľ:"L",Ŀ:"L",Ł:"L",ĺ:"l",ļ:"l",ľ:"l",ŀ:"l",ł:"l",Ń:"N",Ņ:"N",Ň:"N",Ŋ:"N",ń:"n",ņ:"n",ň:"n",ŋ:"n",Ō:"O",Ŏ:"O",Ő:"O",ō:"o",ŏ:"o",ő:"o",Ŕ:"R",Ŗ:"R",Ř:"R",ŕ:"r",ŗ:"r",ř:"r",Ś:"S",Ŝ:"S",Ş:"S",Š:"S",ś:"s",ŝ:"s",ş:"s",š:"s",Ţ:"T",Ť:"T",Ŧ:"T",ţ:"t",ť:"t",ŧ:"t",Ũ:"U",Ū:"U",Ŭ:"U",Ů:"U",Ű:"U",Ų:"U",ũ:"u",ū:"u",ŭ:"u",ů:"u",ű:"u",ų:"u",Ŵ:"W",ŵ:"w",Ŷ:"Y",ŷ:"y",Ÿ:"Y",Ź:"Z",Ż:"Z",Ž:"Z",ź:"z",ż:"z",ž:"z",Ĳ:"IJ",ĳ:"ij",Œ:"Oe",œ:"oe",ŉ:"'n",ſ:"s"}),tB=tA({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function tz(e){return"\\"+e0[e]}function tk(e){return eY.test(e)}function tH(e){var t=-1,n=Array(e.size);return e.forEach(function(e,i){n[++t]=[i,e]}),n}function tV(e,t){return function(n){return e(t(n))}}function tG(e,t){for(var n=-1,i=e.length,r=0,s=[];++n<i;){var o=e[n];(o===t||o===a)&&(e[n]=a,s[r++]=n)}return s}function tW(e){var t=-1,n=Array(e.size);return e.forEach(function(e){n[++t]=e}),n}function tj(e){return tk(e)?function(e){for(var t=eX.lastIndex=0;eX.test(e);)++t;return t}(e):ty(e)}function tX(e){return tk(e)?e.match(eX)||[]:e.split("")}function tq(e){for(var t=e.length;t--&&Q.test(e.charAt(t)););return t}var tY=tA({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"}),tK=function e(t){var l,Q,eg,ev,e_=(t=null==t?e5:tK.defaults(e5.Object(),t,tK.pick(e5,eZ))).Array,ey=t.Date,ex=t.Error,eb=t.Function,eM=t.Math,eS=t.Object,eE=t.RegExp,eT=t.String,ew=t.TypeError,eA=e_.prototype,eR=eb.prototype,eC=eS.prototype,eP=t["__core-js_shared__"],eL=eR.toString,eI=eC.hasOwnProperty,eN=0,eD=(l=/[^.]+$/.exec(eP&&eP.keys&&eP.keys.IE_PROTO||""))?"Symbol(src)_1."+l:"",eU=eC.toString,eO=eL.call(eS),eF=e5._,eB=eE("^"+eL.call(eI).replace(Z,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ez=e9?t.Buffer:n,ek=t.Symbol,eH=t.Uint8Array,eV=ez?ez.allocUnsafe:n,eG=tV(eS.getPrototypeOf,eS),eX=eS.create,eY=eC.propertyIsEnumerable,e0=eA.splice,e3=ek?ek.isConcatSpreadable:n,e4=ek?ek.iterator:n,e6=ek?ek.toStringTag:n,e8=function(){try{var e=rf(eS,"defineProperty");return e({},"",{}),e}catch(e){}}(),e7=t.clearTimeout!==e5.clearTimeout&&t.clearTimeout,te=ey&&ey.now!==e5.Date.now&&ey.now,ty=t.setTimeout!==e5.setTimeout&&t.setTimeout,tA=eM.ceil,tZ=eM.floor,tJ=eS.getOwnPropertySymbols,t$=ez?ez.isBuffer:n,tQ=t.isFinite,t0=eA.join,t1=tV(eS.keys,eS),t2=eM.max,t3=eM.min,t4=ey.now,t5=t.parseInt,t6=eM.random,t8=eA.reverse,t9=rf(t,"DataView"),t7=rf(t,"Map"),ne=rf(t,"Promise"),nt=rf(t,"Set"),nn=rf(t,"WeakMap"),ni=rf(eS,"create"),nr=nn&&new nn,na={},ns=rz(t9),no=rz(t7),nl=rz(ne),nh=rz(nt),nu=rz(nn),nc=ek?ek.prototype:n,nd=nc?nc.valueOf:n,np=nc?nc.toString:n;function nf(e){if(aY(e)&&!aF(e)&&!(e instanceof n_)){if(e instanceof nv)return e;if(eI.call(e,"__wrapped__"))return rk(e)}return new nv(e)}var nm=function(){function e(){}return function(t){if(!aq(t))return{};if(eX)return eX(t);e.prototype=t;var i=new e;return e.prototype=n,i}}();function ng(){}function nv(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=n}function n_(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=0xffffffff,this.__views__=[]}function ny(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function nx(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function nb(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function nM(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new nb;++t<n;)this.add(e[t])}function nS(e){var t=this.__data__=new nx(e);this.size=t.size}function nE(e,t){var n=aF(e),i=!n&&aO(e),r=!n&&!i&&aH(e),a=!n&&!i&&!r&&a2(e),s=n||i||r||a,o=s?tP(e.length,eT):[],l=o.length;for(var h in e)(t||eI.call(e,h))&&!(s&&("length"==h||r&&("offset"==h||"parent"==h)||a&&("buffer"==h||"byteLength"==h||"byteOffset"==h)||rb(h,l)))&&o.push(h);return o}function nT(e){var t=e.length;return t?e[iu(0,t-1)]:n}nf.templateSettings={escape:W,evaluate:j,interpolate:X,variable:"",imports:{_:nf}},nf.prototype=ng.prototype,nf.prototype.constructor=nf,nv.prototype=nm(ng.prototype),nv.prototype.constructor=nv,n_.prototype=nm(ng.prototype),n_.prototype.constructor=n_,ny.prototype.clear=function(){this.__data__=ni?ni(null):{},this.size=0},ny.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=!!t,t},ny.prototype.get=function(e){var t=this.__data__;if(ni){var i=t[e];return i===r?n:i}return eI.call(t,e)?t[e]:n},ny.prototype.has=function(e){var t=this.__data__;return ni?t[e]!==n:eI.call(t,e)},ny.prototype.set=function(e,t){var i=this.__data__;return this.size+=+!this.has(e),i[e]=ni&&t===n?r:t,this},nx.prototype.clear=function(){this.__data__=[],this.size=0},nx.prototype.delete=function(e){var t=this.__data__,n=nR(t,e);return!(n<0)&&(n==t.length-1?t.pop():e0.call(t,n,1),--this.size,!0)},nx.prototype.get=function(e){var t=this.__data__,i=nR(t,e);return i<0?n:t[i][1]},nx.prototype.has=function(e){return nR(this.__data__,e)>-1},nx.prototype.set=function(e,t){var n=this.__data__,i=nR(n,e);return i<0?(++this.size,n.push([e,t])):n[i][1]=t,this},nb.prototype.clear=function(){this.size=0,this.__data__={hash:new ny,map:new(t7||nx),string:new ny}},nb.prototype.delete=function(e){var t=rd(this,e).delete(e);return this.size-=!!t,t},nb.prototype.get=function(e){return rd(this,e).get(e)},nb.prototype.has=function(e){return rd(this,e).has(e)},nb.prototype.set=function(e,t){var n=rd(this,e),i=n.size;return n.set(e,t),this.size+=+(n.size!=i),this},nM.prototype.add=nM.prototype.push=function(e){return this.__data__.set(e,r),this},nM.prototype.has=function(e){return this.__data__.has(e)};function nw(e,t,i){(i===n||aN(e[t],i))&&(i!==n||t in e)||nL(e,t,i)}function nA(e,t,i){var r=e[t];eI.call(e,t)&&aN(r,i)&&(i!==n||t in e)||nL(e,t,i)}function nR(e,t){for(var n=e.length;n--;)if(aN(e[n][0],t))return n;return -1}function nC(e,t,n,i){return nB(e,function(e,r,a){t(i,e,n(e),a)}),i}function nP(e,t){return e&&iG(t,sf(t),e)}function nL(e,t,n){"__proto__"==t&&e8?e8(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}function nI(e,t){for(var i=-1,r=t.length,a=e_(r),s=null==e;++i<r;)a[i]=s?n:sh(e,t[i]);return a}function nN(e,t,i){return e==e&&(i!==n&&(e=e<=i?e:i),t!==n&&(e=e>=t?e:t)),e}function nD(e,t,i,r,a,s){var o,l=1&t,h=2&t,c=4&t;if(i&&(o=a?i(e,r,a,s):i(e)),o!==n)return o;if(!aq(e))return e;var f=aF(e);if(f){if(T=(x=e).length,F=new x.constructor(T),T&&"string"==typeof x[0]&&eI.call(x,"index")&&(F.index=x.index,F.input=x.input),o=F,!l)return iV(e,o)}else{var x,T,F,B,z,k,H,V,G=rv(e),W=G==m||G==g;if(aH(e))return iO(e,l);if(G==y||G==u||W&&!a){if(o=h||W?{}:ry(e),!l){return h?(B=e,z=(V=o)&&iG(e,sm(e),V),iG(B,rg(B),z)):(k=e,H=nP(o,e),iG(k,rm(k),H))}}else{if(!eQ[G])return a?e:{};o=function(e,t,n){var i,r,a=e.constructor;switch(t){case w:return iF(e);case d:case p:return new a(+e);case A:return i=n?iF(e.buffer):e.buffer,new e.constructor(i,e.byteOffset,e.byteLength);case R:case C:case P:case L:case I:case N:case D:case U:case O:return iB(e,n);case v:return new a;case _:case S:return new a(e);case b:return(r=new e.constructor(e.source,eo.exec(e))).lastIndex=e.lastIndex,r;case M:return new a;case E:return nd?eS(nd.call(e)):{}}}(e,G,l)}}s||(s=new nS);var j=s.get(e);if(j)return j;s.set(e,o),aQ(e)?e.forEach(function(n){o.add(nD(n,t,i,n,e,s))}):aK(e)&&e.forEach(function(n,r){o.set(r,nD(n,t,i,r,e,s))});var X=c?h?ro:rs:h?sm:sf,q=f?n:X(e);return th(q||e,function(n,r){q&&(n=e[r=n]),nA(o,r,nD(n,t,i,r,e,s))}),o}function nU(e,t,i){var r=i.length;if(null==e)return!r;for(e=eS(e);r--;){var a=i[r],s=t[a],o=e[a];if(o===n&&!(a in e)||!s(o))return!1}return!0}function nO(e,t,r){if("function"!=typeof e)throw new ew(i);return rI(function(){e.apply(n,r)},t)}function nF(e,t,n,i){var r=-1,a=td,s=!0,o=e.length,l=[],h=t.length;if(!o)return l;n&&(t=tf(t,tI(n))),i?(a=tp,s=!1):t.length>=200&&(a=tD,s=!1,t=new nM(t));e:for(;++r<o;){var u=e[r],c=null==n?u:n(u);if(u=i||0!==u?u:0,s&&c==c){for(var d=h;d--;)if(t[d]===c)continue e;l.push(u)}else a(t,c,i)||l.push(u)}return l}nS.prototype.clear=function(){this.__data__=new nx,this.size=0},nS.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},nS.prototype.get=function(e){return this.__data__.get(e)},nS.prototype.has=function(e){return this.__data__.has(e)},nS.prototype.set=function(e,t){var n=this.__data__;if(n instanceof nx){var i=n.__data__;if(!t7||i.length<199)return i.push([e,t]),this.size=++n.size,this;n=this.__data__=new nb(i)}return n.set(e,t),this.size=n.size,this};var nB=iX(nX),nz=iX(nq,!0);function nk(e,t){var n=!0;return nB(e,function(e,i,r){return n=!!t(e,i,r)}),n}function nH(e,t,i){for(var r=-1,a=e.length;++r<a;){var s=e[r],o=t(s);if(null!=o&&(l===n?o==o&&!a1(o):i(o,l)))var l=o,h=s}return h}function nV(e,t){var n=[];return nB(e,function(e,i,r){t(e,i,r)&&n.push(e)}),n}function nG(e,t,n,i,r){var a=-1,s=e.length;for(n||(n=rx),r||(r=[]);++a<s;){var o=e[a];t>0&&n(o)?t>1?nG(o,t-1,n,i,r):tm(r,o):i||(r[r.length]=o)}return r}var nW=iq(),nj=iq(!0);function nX(e,t){return e&&nW(e,t,sf)}function nq(e,t){return e&&nj(e,t,sf)}function nY(e,t){return tc(t,function(t){return aW(e[t])})}function nK(e,t){t=iN(t,e);for(var i=0,r=t.length;null!=e&&i<r;)e=e[rB(t[i++])];return i&&i==r?e:n}function nZ(e,t,n){var i=t(e);return aF(e)?i:tm(i,n(e))}function nJ(e){var t;return null==e?e===n?"[object Undefined]":"[object Null]":e6&&e6 in eS(e)?function(e){var t=eI.call(e,e6),i=e[e6];try{e[e6]=n;var r=!0}catch(e){}var a=eU.call(e);return r&&(t?e[e6]=i:delete e[e6]),a}(e):(t=e,eU.call(t))}function n$(e,t){return e>t}function nQ(e,t){return null!=e&&eI.call(e,t)}function n0(e,t){return null!=e&&t in eS(e)}function n1(e,t,i){for(var r=i?tp:td,a=e[0].length,s=e.length,o=s,l=e_(s),h=1/0,u=[];o--;){var c=e[o];o&&t&&(c=tf(c,tI(t))),h=t3(c.length,h),l[o]=!i&&(t||a>=120&&c.length>=120)?new nM(o&&c):n}c=e[0];var d=-1,p=l[0];e:for(;++d<a&&u.length<h;){var f=c[d],m=t?t(f):f;if(f=i||0!==f?f:0,!(p?tD(p,m):r(u,m,i))){for(o=s;--o;){var g=l[o];if(!(g?tD(g,m):r(e[o],m,i)))continue e}p&&p.push(m),u.push(f)}}return u}function n2(e,t,i){t=iN(t,e);var r=null==(e=rC(e,t))?e:e[rB(rJ(t))];return null==r?n:to(r,e,i)}function n3(e){return aY(e)&&nJ(e)==u}function n4(e,t,i,r,a){return e===t||(null!=e&&null!=t&&(aY(e)||aY(t))?function(e,t,i,r,a,s){var o=aF(e),l=aF(t),h=o?c:rv(e),m=l?c:rv(t);h=h==u?y:h,m=m==u?y:m;var g=h==y,x=m==y,T=h==m;if(T&&aH(e)){if(!aH(t))return!1;o=!0,g=!1}if(T&&!g)return s||(s=new nS),o||a2(e)?rr(e,t,i,r,a,s):function(e,t,n,i,r,a,s){switch(n){case A:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)break;e=e.buffer,t=t.buffer;case w:if(e.byteLength!=t.byteLength||!a(new eH(e),new eH(t)))break;return!0;case d:case p:case _:return aN(+e,+t);case f:return e.name==t.name&&e.message==t.message;case b:case S:return e==t+"";case v:var o=tH;case M:var l=1&i;if(o||(o=tW),e.size!=t.size&&!l)break;var h=s.get(e);if(h)return h==t;i|=2,s.set(e,t);var u=rr(o(e),o(t),i,r,a,s);return s.delete(e),u;case E:if(nd)return nd.call(e)==nd.call(t)}return!1}(e,t,h,i,r,a,s);if(!(1&i)){var R=g&&eI.call(e,"__wrapped__"),C=x&&eI.call(t,"__wrapped__");if(R||C){var P=R?e.value():e,L=C?t.value():t;return s||(s=new nS),a(P,L,i,r,s)}}return!!T&&(s||(s=new nS),function(e,t,i,r,a,s){var o=1&i,l=rs(e),h=l.length;if(h!=rs(t).length&&!o)return!1;for(var u=h;u--;){var c=l[u];if(!(o?c in t:eI.call(t,c)))return!1}var d=s.get(e),p=s.get(t);if(d&&p)return d==t&&p==e;var f=!0;s.set(e,t),s.set(t,e);for(var m=o;++u<h;){var g=e[c=l[u]],v=t[c];if(r)var _=o?r(v,g,c,t,e,s):r(g,v,c,e,t,s);if(!(_===n?g===v||a(g,v,i,r,s):_)){f=!1;break}m||(m="constructor"==c)}if(f&&!m){var y=e.constructor,x=t.constructor;y!=x&&"constructor"in e&&"constructor"in t&&!("function"==typeof y&&y instanceof y&&"function"==typeof x&&x instanceof x)&&(f=!1)}return s.delete(e),s.delete(t),f}(e,t,i,r,a,s))}(e,t,i,r,n4,a):e!=e&&t!=t)}function n5(e,t,i,r){var a=i.length,s=a,o=!r;if(null==e)return!s;for(e=eS(e);a--;){var l=i[a];if(o&&l[2]?l[1]!==e[l[0]]:!(l[0]in e))return!1}for(;++a<s;){var h=(l=i[a])[0],u=e[h],c=l[1];if(o&&l[2]){if(u===n&&!(h in e))return!1}else{var d=new nS;if(r)var p=r(u,c,h,e,t,d);if(!(p===n?n4(c,u,3,r,d):p))return!1}}return!0}function n6(e){var t;return!(!aq(e)||(t=e,eD&&eD in t))&&(aW(e)?eB:eu).test(rz(e))}function n8(e){return"function"==typeof e?e:null==e?sk:"object"==typeof e?aF(e)?ii(e[0],e[1]):it(e):sK(e)}function n9(e){if(!rw(e))return t1(e);var t=[];for(var n in eS(e))eI.call(e,n)&&"constructor"!=n&&t.push(n);return t}function n7(e,t){return e<t}function ie(e,t){var n=-1,i=az(e)?e_(e.length):[];return nB(e,function(e,r,a){i[++n]=t(e,r,a)}),i}function it(e){var t=rp(e);return 1==t.length&&t[0][2]?rA(t[0][0],t[0][1]):function(n){return n===e||n5(n,e,t)}}function ii(e,t){var i;return rS(e)&&(i=t)==i&&!aq(i)?rA(rB(e),t):function(i){var r=sh(i,e);return r===n&&r===t?su(i,e):n4(t,r,3)}}function ir(e,t,i,r,a){e!==t&&nW(t,function(s,o){if(a||(a=new nS),aq(s))!function(e,t,i,r,a,s,o){var l=rP(e,i),h=rP(t,i),u=o.get(h);if(u)return nw(e,i,u);var c=s?s(l,h,i+"",e,t,o):n,d=c===n;if(d){var p=aF(h),f=!p&&aH(h),m=!p&&!f&&a2(h);c=h,p||f||m?aF(l)?c=l:ak(l)?c=iV(l):f?(d=!1,c=iO(h,!0)):m?(d=!1,c=iB(h,!0)):c=[]:aJ(h)||aO(h)?(c=l,aO(l)?c=se(l):(!aq(l)||aW(l))&&(c=ry(h))):d=!1}d&&(o.set(h,c),a(c,h,r,s,o),o.delete(h)),nw(e,i,c)}(e,t,o,i,ir,r,a);else{var l=r?r(rP(e,o),s,o+"",e,t,a):n;l===n&&(l=s),nw(e,o,l)}},sm)}function ia(e,t){var i=e.length;if(i)return rb(t+=t<0?i:0,i)?e[t]:n}function is(e,t,n){t=t.length?tf(t,function(e){return aF(e)?function(t){return nK(t,1===e.length?e[0]:e)}:e}):[sk];var i=-1;t=tf(t,tI(rc()));var r=ie(e,function(e,n,r){return{criteria:tf(t,function(t){return t(e)}),index:++i,value:e}}),a=r.length;for(r.sort(function(e,t){return function(e,t,n){for(var i=-1,r=e.criteria,a=t.criteria,s=r.length,o=n.length;++i<s;){var l=iz(r[i],a[i]);if(l){if(i>=o)return l;return l*("desc"==n[i]?-1:1)}}return e.index-t.index}(e,t,n)});a--;)r[a]=r[a].value;return r}function io(e,t,n){for(var i=-1,r=t.length,a={};++i<r;){var s=t[i],o=nK(e,s);n(o,s)&&ip(a,iN(s,e),o)}return a}function il(e,t,n,i){var r=i?tS:tM,a=-1,s=t.length,o=e;for(e===t&&(t=iV(t)),n&&(o=tf(e,tI(n)));++a<s;)for(var l=0,h=t[a],u=n?n(h):h;(l=r(o,u,l,i))>-1;)o!==e&&e0.call(o,l,1),e0.call(e,l,1);return e}function ih(e,t){for(var n=e?t.length:0,i=n-1;n--;){var r=t[n];if(n==i||r!==a){var a=r;rb(r)?e0.call(e,r,1):iT(e,r)}}return e}function iu(e,t){return e+tZ(t6()*(t-e+1))}function ic(e,t){var n="";if(!e||t<1||t>0x1fffffffffffff)return n;do t%2&&(n+=e),(t=tZ(t/2))&&(e+=e);while(t)return n}function id(e,t){return rN(rR(e,t,sk),e+"")}function ip(e,t,i,r){if(!aq(e))return e;t=iN(t,e);for(var a=-1,s=t.length,o=s-1,l=e;null!=l&&++a<s;){var h=rB(t[a]),u=i;if("__proto__"===h||"constructor"===h||"prototype"===h)break;if(a!=o){var c=l[h];(u=r?r(c,h,l):n)===n&&(u=aq(c)?c:rb(t[a+1])?[]:{})}nA(l,h,u),l=l[h]}return e}var im=nr?function(e,t){return nr.set(e,t),e}:sk,ig=e8?function(e,t){return e8(e,"toString",{configurable:!0,enumerable:!1,value:sF(t),writable:!0})}:sk;function iv(e,t,n){var i=-1,r=e.length;t<0&&(t=-t>r?0:r+t),(n=n>r?r:n)<0&&(n+=r),r=t>n?0:n-t>>>0,t>>>=0;for(var a=e_(r);++i<r;)a[i]=e[i+t];return a}function i_(e,t){var n;return nB(e,function(e,i,r){return!(n=t(e,i,r))}),!!n}function iy(e,t,n){var i=0,r=null==e?i:e.length;if("number"==typeof t&&t==t&&r<=0x7fffffff){for(;i<r;){var a=i+r>>>1,s=e[a];null!==s&&!a1(s)&&(n?s<=t:s<t)?i=a+1:r=a}return r}return ix(e,t,sk,n)}function ix(e,t,i,r){var a=0,s=null==e?0:e.length;if(0===s)return 0;for(var o=(t=i(t))!=t,l=null===t,h=a1(t),u=t===n;a<s;){var c=tZ((a+s)/2),d=i(e[c]),p=d!==n,f=null===d,m=d==d,g=a1(d);if(o)var v=r||m;else v=u?m&&(r||p):l?m&&p&&(r||!f):h?m&&p&&!f&&(r||!g):!f&&!g&&(r?d<=t:d<t);v?a=c+1:s=c}return t3(s,0xfffffffe)}function ib(e,t){for(var n=-1,i=e.length,r=0,a=[];++n<i;){var s=e[n],o=t?t(s):s;if(!n||!aN(o,l)){var l=o;a[r++]=0===s?0:s}}return a}function iM(e){return"number"==typeof e?e:a1(e)?o:+e}function iS(e){if("string"==typeof e)return e;if(aF(e))return tf(e,iS)+"";if(a1(e))return np?np.call(e):"";var t=e+"";return"0"==t&&1/e==-s?"-0":t}function iE(e,t,n){var i=-1,r=td,a=e.length,s=!0,o=[],l=o;if(n)s=!1,r=tp;else if(a>=200){var h=t?null:i9(e);if(h)return tW(h);s=!1,r=tD,l=new nM}else l=t?[]:o;e:for(;++i<a;){var u=e[i],c=t?t(u):u;if(u=n||0!==u?u:0,s&&c==c){for(var d=l.length;d--;)if(l[d]===c)continue e;t&&l.push(c),o.push(u)}else r(l,c,n)||(l!==o&&l.push(c),o.push(u))}return o}function iT(e,t){return t=iN(t,e),null==(e=rC(e,t))||delete e[rB(rJ(t))]}function iw(e,t,n,i){return ip(e,t,n(nK(e,t)),i)}function iA(e,t,n,i){for(var r=e.length,a=i?r:-1;(i?a--:++a<r)&&t(e[a],a,e););return n?iv(e,i?0:a,i?a+1:r):iv(e,i?a+1:0,i?r:a)}function iR(e,t){var n=e;return n instanceof n_&&(n=n.value()),tg(t,function(e,t){return t.func.apply(t.thisArg,tm([e],t.args))},n)}function iC(e,t,n){var i=e.length;if(i<2)return i?iE(e[0]):[];for(var r=-1,a=e_(i);++r<i;)for(var s=e[r],o=-1;++o<i;)o!=r&&(a[r]=nF(a[r]||s,e[o],t,n));return iE(nG(a,1),t,n)}function iP(e,t,i){for(var r=-1,a=e.length,s=t.length,o={};++r<a;){var l=r<s?t[r]:n;i(o,e[r],l)}return o}function iL(e){return ak(e)?e:[]}function iI(e){return"function"==typeof e?e:sk}function iN(e,t){return aF(e)?e:rS(e,t)?[e]:rF(st(e))}function iD(e,t,i){var r=e.length;return i=i===n?r:i,!t&&i>=r?e:iv(e,t,i)}var iU=e7||function(e){return e5.clearTimeout(e)};function iO(e,t){if(t)return e.slice();var n=e.length,i=eV?eV(n):new e.constructor(n);return e.copy(i),i}function iF(e){var t=new e.constructor(e.byteLength);return new eH(t).set(new eH(e)),t}function iB(e,t){var n=t?iF(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}function iz(e,t){if(e!==t){var i=e!==n,r=null===e,a=e==e,s=a1(e),o=t!==n,l=null===t,h=t==t,u=a1(t);if(!l&&!u&&!s&&e>t||s&&o&&h&&!l&&!u||r&&o&&h||!i&&h||!a)return 1;if(!r&&!s&&!u&&e<t||u&&i&&a&&!r&&!s||l&&i&&a||!o&&a||!h)return -1}return 0}function ik(e,t,n,i){for(var r=-1,a=e.length,s=n.length,o=-1,l=t.length,h=t2(a-s,0),u=e_(l+h),c=!i;++o<l;)u[o]=t[o];for(;++r<s;)(c||r<a)&&(u[n[r]]=e[r]);for(;h--;)u[o++]=e[r++];return u}function iH(e,t,n,i){for(var r=-1,a=e.length,s=-1,o=n.length,l=-1,h=t.length,u=t2(a-o,0),c=e_(u+h),d=!i;++r<u;)c[r]=e[r];for(var p=r;++l<h;)c[p+l]=t[l];for(;++s<o;)(d||r<a)&&(c[p+n[s]]=e[r++]);return c}function iV(e,t){var n=-1,i=e.length;for(t||(t=e_(i));++n<i;)t[n]=e[n];return t}function iG(e,t,i,r){var a=!i;i||(i={});for(var s=-1,o=t.length;++s<o;){var l=t[s],h=r?r(i[l],e[l],l,i,e):n;h===n&&(h=e[l]),a?nL(i,l,h):nA(i,l,h)}return i}function iW(e,t){return function(n,i){var r=aF(n)?tl:nC,a=t?t():{};return r(n,e,rc(i,2),a)}}function ij(e){return id(function(t,i){var r=-1,a=i.length,s=a>1?i[a-1]:n,o=a>2?i[2]:n;for(s=e.length>3&&"function"==typeof s?(a--,s):n,o&&rM(i[0],i[1],o)&&(s=a<3?n:s,a=1),t=eS(t);++r<a;){var l=i[r];l&&e(t,l,r,s)}return t})}function iX(e,t){return function(n,i){if(null==n)return n;if(!az(n))return e(n,i);for(var r=n.length,a=t?r:-1,s=eS(n);(t?a--:++a<r)&&!1!==i(s[a],a,s););return n}}function iq(e){return function(t,n,i){for(var r=-1,a=eS(t),s=i(t),o=s.length;o--;){var l=s[e?o:++r];if(!1===n(a[l],l,a))break}return t}}function iY(e){return function(t){var i=tk(t=st(t))?tX(t):n,r=i?i[0]:t.charAt(0),a=i?iD(i,1).join(""):t.slice(1);return r[e]()+a}}function iK(e){return function(t){return tg(sD(sw(t).replace(eW,"")),e,"")}}function iZ(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var n=nm(e.prototype),i=e.apply(n,t);return aq(i)?i:n}}function iJ(e){return function(t,i,r){var a=eS(t);if(!az(t)){var s=rc(i,3);t=sf(t),i=function(e){return s(a[e],e,a)}}var o=e(t,i,r);return o>-1?a[s?t[o]:o]:n}}function i$(e){return ra(function(t){var r=t.length,a=r,s=nv.prototype.thru;for(e&&t.reverse();a--;){var o=t[a];if("function"!=typeof o)throw new ew(i);if(s&&!l&&"wrapper"==rh(o))var l=new nv([],!0)}for(a=l?a:r;++a<r;){var h=rh(o=t[a]),u="wrapper"==h?rl(o):n;l=u&&rE(u[0])&&424==u[1]&&!u[4].length&&1==u[9]?l[rh(u[0])].apply(l,u[3]):1==o.length&&rE(o)?l[h]():l.thru(o)}return function(){var e=arguments,n=e[0];if(l&&1==e.length&&aF(n))return l.plant(n).value();for(var i=0,a=r?t[i].apply(this,e):n;++i<r;)a=t[i].call(this,a);return a}})}function iQ(e,t,i,r,a,s,o,l,h,u){var c=128&t,d=1&t,p=2&t,f=24&t,m=512&t,g=p?n:iZ(e);function v(){for(var _=arguments.length,y=e_(_),x=_;x--;)y[x]=arguments[x];if(f)var b=ru(v),M=function(e,t){for(var n=e.length,i=0;n--;)e[n]===t&&++i;return i}(y,b);if(r&&(y=ik(y,r,a,f)),s&&(y=iH(y,s,o,f)),_-=M,f&&_<u){var S=tG(y,b);return i6(e,t,iQ,v.placeholder,i,y,S,l,h,u-_)}var E=d?i:this,T=p?E[e]:e;return _=y.length,l?y=function(e,t){for(var i=e.length,r=t3(t.length,i),a=iV(e);r--;){var s=t[r];e[r]=rb(s,i)?a[s]:n}return e}(y,l):m&&_>1&&y.reverse(),c&&h<_&&(y.length=h),this&&this!==e5&&this instanceof v&&(T=g||iZ(T)),T.apply(E,y)}return v}function i0(e,t){return function(n,i){var r,a;return r=t(i),a={},nX(n,function(t,n,i){e(a,r(t),n,i)}),a}}function i1(e,t){return function(i,r){var a;if(i===n&&r===n)return t;if(i!==n&&(a=i),r!==n){if(a===n)return r;"string"==typeof i||"string"==typeof r?(i=iS(i),r=iS(r)):(i=iM(i),r=iM(r)),a=e(i,r)}return a}}function i2(e){return ra(function(t){return t=tf(t,tI(rc())),id(function(n){var i=this;return e(t,function(e){return to(e,i,n)})})})}function i3(e,t){var i=(t=t===n?" ":iS(t)).length;if(i<2)return i?ic(t,e):t;var r=ic(t,tA(e/tj(t)));return tk(t)?iD(tX(r),0,e).join(""):r.slice(0,e)}function i4(e){return function(t,i,r){r&&"number"!=typeof r&&rM(t,i,r)&&(i=r=n),t=a6(t),i===n?(i=t,t=0):i=a6(i),r=r===n?t<i?1:-1:a6(r);for(var a=t,s=i,o=r,l=-1,h=t2(tA((s-a)/(o||1)),0),u=e_(h);h--;)u[e?h:++l]=a,a+=o;return u}}function i5(e){return function(t,n){return("string"!=typeof t||"string"!=typeof n)&&(t=a7(t),n=a7(n)),e(t,n)}}function i6(e,t,i,r,a,s,o,l,h,u){var c=8&t,d=c?o:n,p=c?n:o,f=c?s:n,m=c?n:s;t|=c?32:64,4&(t&=~(c?64:32))||(t&=-4);var g=[e,t,a,f,d,m,p,l,h,u],v=i.apply(n,g);return rE(e)&&rL(v,g),v.placeholder=r,rD(v,e,t)}function i8(e){var t=eM[e];return function(e,n){if(e=a7(e),(n=null==n?0:t3(a8(n),292))&&tQ(e)){var i=(st(e)+"e").split("e");return+((i=(st(t(i[0]+"e"+(+i[1]+n)))+"e").split("e"))[0]+"e"+(i[1]-n))}return t(e)}}var i9=nt&&1/tW(new nt([,-0]))[1]==s?function(e){return new nt(e)}:sj;function i7(e){return function(t){var n,i,r=rv(t);return r==v?tH(t):r==M?(n=-1,i=Array(t.size),t.forEach(function(e){i[++n]=[e,e]}),i):tf(e(t),function(e){return[e,t[e]]})}}function re(e,t,r,s,o,l,h,u){var c=2&t;if(!c&&"function"!=typeof e)throw new ew(i);var d=s?s.length:0;if(d||(t&=-97,s=o=n),h=h===n?h:t2(a8(h),0),u=u===n?u:a8(u),d-=o?o.length:0,64&t){var p=s,f=o;s=o=n}var m=c?n:rl(e),g=[e,t,r,s,o,p,f,l,h,u];if(m&&function(e,t){var n=e[1],i=t[1],r=n|i,s=r<131,o=128==i&&8==n||128==i&&256==n&&e[7].length<=t[8]||384==i&&t[7].length<=t[8]&&8==n;if(s||o){1&i&&(e[2]=t[2],r|=1&n?0:4);var l=t[3];if(l){var h=e[3];e[3]=h?ik(h,l,t[4]):l,e[4]=h?tG(e[3],a):t[4]}(l=t[5])&&(h=e[5],e[5]=h?iH(h,l,t[6]):l,e[6]=h?tG(e[5],a):t[6]),(l=t[7])&&(e[7]=l),128&i&&(e[8]=null==e[8]?t[8]:t3(e[8],t[8])),null==e[9]&&(e[9]=t[9]),e[0]=t[0],e[1]=r}}(g,m),e=g[0],t=g[1],r=g[2],s=g[3],o=g[4],(u=g[9]=g[9]===n?c?0:e.length:t2(g[9]-d,0))||!(24&t)||(t&=-25),t&&1!=t)8==t||16==t?R=function(e,t,i){var r=iZ(e);function a(){for(var s=arguments.length,o=e_(s),l=s,h=ru(a);l--;)o[l]=arguments[l];var u=s<3&&o[0]!==h&&o[s-1]!==h?[]:tG(o,h);return(s-=u.length)<i?i6(e,t,iQ,a.placeholder,n,o,u,n,n,i-s):to(this&&this!==e5&&this instanceof a?r:e,this,o)}return a}(e,t,u):32!=t&&33!=t||o.length?R=iQ.apply(n,g):(v=e,_=t,y=r,x=s,b=1&_,M=iZ(v),R=function e(){for(var t=-1,n=arguments.length,i=-1,r=x.length,a=e_(r+n),s=this&&this!==e5&&this instanceof e?M:v;++i<r;)a[i]=x[i];for(;n--;)a[i++]=arguments[++t];return to(s,b?y:this,a)});else var v,_,y,x,b,M,S,E,T,w,A,R=(S=e,E=t,T=r,w=1&E,A=iZ(S),function e(){return(this&&this!==e5&&this instanceof e?A:S).apply(w?T:this,arguments)});return rD((m?im:rL)(R,g),e,t)}function rt(e,t,i,r){return e===n||aN(e,eC[i])&&!eI.call(r,i)?t:e}function rn(e,t,i,r,a,s){return aq(e)&&aq(t)&&(s.set(t,e),ir(e,t,n,rn,s),s.delete(t)),e}function ri(e){return aJ(e)?n:e}function rr(e,t,i,r,a,s){var o=1&i,l=e.length,h=t.length;if(l!=h&&!(o&&h>l))return!1;var u=s.get(e),c=s.get(t);if(u&&c)return u==t&&c==e;var d=-1,p=!0,f=2&i?new nM:n;for(s.set(e,t),s.set(t,e);++d<l;){var m=e[d],g=t[d];if(r)var v=o?r(g,m,d,t,e,s):r(m,g,d,e,t,s);if(v!==n){if(v)continue;p=!1;break}if(f){if(!t_(t,function(e,t){if(!tD(f,t)&&(m===e||a(m,e,i,r,s)))return f.push(t)})){p=!1;break}}else if(!(m===g||a(m,g,i,r,s))){p=!1;break}}return s.delete(e),s.delete(t),p}function ra(e){return rN(rR(e,n,rX),e+"")}function rs(e){return nZ(e,sf,rm)}function ro(e){return nZ(e,sm,rg)}var rl=nr?function(e){return nr.get(e)}:sj;function rh(e){for(var t=e.name+"",n=na[t],i=eI.call(na,t)?n.length:0;i--;){var r=n[i],a=r.func;if(null==a||a==e)return r.name}return t}function ru(e){return(eI.call(nf,"placeholder")?nf:e).placeholder}function rc(){var e=nf.iteratee||sH;return e=e===sH?n8:e,arguments.length?e(arguments[0],arguments[1]):e}function rd(e,t){var n,i,r=e.__data__;return("string"==(i=typeof(n=t))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof t?"string":"hash"]:r.map}function rp(e){for(var t=sf(e),n=t.length;n--;){var i,r=t[n],a=e[r];t[n]=[r,a,(i=a)==i&&!aq(i)]}return t}function rf(e,t){var i=null==e?n:e[t];return n6(i)?i:n}var rm=tJ?function(e){return null==e?[]:tc(tJ(e=eS(e)),function(t){return eY.call(e,t)})}:s$,rg=tJ?function(e){for(var t=[];e;)tm(t,rm(e)),e=eG(e);return t}:s$,rv=nJ;function r_(e,t,n){t=iN(t,e);for(var i=-1,r=t.length,a=!1;++i<r;){var s=rB(t[i]);if(!(a=null!=e&&n(e,s)))break;e=e[s]}return a||++i!=r?a:!!(r=null==e?0:e.length)&&aX(r)&&rb(s,r)&&(aF(e)||aO(e))}function ry(e){return"function"!=typeof e.constructor||rw(e)?{}:nm(eG(e))}function rx(e){return aF(e)||aO(e)||!!(e3&&e&&e[e3])}function rb(e,t){var n=typeof e;return!!(t=null==t?0x1fffffffffffff:t)&&("number"==n||"symbol"!=n&&ed.test(e))&&e>-1&&e%1==0&&e<t}function rM(e,t,n){if(!aq(n))return!1;var i=typeof t;return("number"==i?!!(az(n)&&rb(t,n.length)):"string"==i&&t in n)&&aN(n[t],e)}function rS(e,t){if(aF(e))return!1;var n=typeof e;return!!("number"==n||"symbol"==n||"boolean"==n||null==e||a1(e))||Y.test(e)||!q.test(e)||null!=t&&e in eS(t)}function rE(e){var t=rh(e),n=nf[t];if("function"!=typeof n||!(t in n_.prototype))return!1;if(e===n)return!0;var i=rl(n);return!!i&&e===i[0]}(t9&&rv(new t9(new ArrayBuffer(1)))!=A||t7&&rv(new t7)!=v||ne&&rv(ne.resolve())!=x||nt&&rv(new nt)!=M||nn&&rv(new nn)!=T)&&(rv=function(e){var t=nJ(e),i=t==y?e.constructor:n,r=i?rz(i):"";if(r)switch(r){case ns:return A;case no:return v;case nl:return x;case nh:return M;case nu:return T}return t});var rT=eP?aW:sQ;function rw(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||eC)}function rA(e,t){return function(i){return null!=i&&i[e]===t&&(t!==n||e in eS(i))}}function rR(e,t,i){return t=t2(t===n?e.length-1:t,0),function(){for(var n=arguments,r=-1,a=t2(n.length-t,0),s=e_(a);++r<a;)s[r]=n[t+r];r=-1;for(var o=e_(t+1);++r<t;)o[r]=n[r];return o[t]=i(s),to(e,this,o)}}function rC(e,t){return t.length<2?e:nK(e,iv(t,0,-1))}function rP(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var rL=rU(im),rI=ty||function(e,t){return e5.setTimeout(e,t)},rN=rU(ig);function rD(e,t,n){var i,r,a,s=t+"";return rN(e,function(e,t){var n=t.length;if(!n)return e;var i=n-1;return t[i]=(n>1?"& ":"")+t[i],t=t.join(n>2?", ":" "),e.replace(ee,"{\n/* [wrapped with "+t+"] */\n")}(s,(i=(a=s.match(et))?a[1].split(en):[],r=n,th(h,function(e){var t="_."+e[0];r&e[1]&&!td(i,t)&&i.push(t)}),i.sort())))}function rU(e){var t=0,i=0;return function(){var r=t4(),a=16-(r-i);if(i=r,a>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(n,arguments)}}function rO(e,t){var i=-1,r=e.length,a=r-1;for(t=t===n?r:t;++i<t;){var s=iu(i,a),o=e[s];e[s]=e[i],e[i]=o}return e.length=t,e}var rF=(eg=(Q=aA(function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(K,function(e,n,i,r){t.push(i?r.replace(ea,"$1"):n||e)}),t},function(e){return 500===eg.size&&eg.clear(),e})).cache,Q);function rB(e){if("string"==typeof e||a1(e))return e;var t=e+"";return"0"==t&&1/e==-s?"-0":t}function rz(e){if(null!=e){try{return eL.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function rk(e){if(e instanceof n_)return e.clone();var t=new nv(e.__wrapped__,e.__chain__);return t.__actions__=iV(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}var rH=id(function(e,t){return ak(e)?nF(e,nG(t,1,ak,!0)):[]}),rV=id(function(e,t){var i=rJ(t);return ak(i)&&(i=n),ak(e)?nF(e,nG(t,1,ak,!0),rc(i,2)):[]}),rG=id(function(e,t){var i=rJ(t);return ak(i)&&(i=n),ak(e)?nF(e,nG(t,1,ak,!0),n,i):[]});function rW(e,t,n){var i=null==e?0:e.length;if(!i)return -1;var r=null==n?0:a8(n);return r<0&&(r=t2(i+r,0)),tb(e,rc(t,3),r)}function rj(e,t,i){var r=null==e?0:e.length;if(!r)return -1;var a=r-1;return i!==n&&(a=a8(i),a=i<0?t2(r+a,0):t3(a,r-1)),tb(e,rc(t,3),a,!0)}function rX(e){return(null==e?0:e.length)?nG(e,1):[]}function rq(e){return e&&e.length?e[0]:n}var rY=id(function(e){var t=tf(e,iL);return t.length&&t[0]===e[0]?n1(t):[]}),rK=id(function(e){var t=rJ(e),i=tf(e,iL);return t===rJ(i)?t=n:i.pop(),i.length&&i[0]===e[0]?n1(i,rc(t,2)):[]}),rZ=id(function(e){var t=rJ(e),i=tf(e,iL);return(t="function"==typeof t?t:n)&&i.pop(),i.length&&i[0]===e[0]?n1(i,n,t):[]});function rJ(e){var t=null==e?0:e.length;return t?e[t-1]:n}var r$=id(rQ);function rQ(e,t){return e&&e.length&&t&&t.length?il(e,t):e}var r0=ra(function(e,t){var n=null==e?0:e.length,i=nI(e,t);return ih(e,tf(t,function(e){return rb(e,n)?+e:e}).sort(iz)),i});function r1(e){return null==e?e:t8.call(e)}var r2=id(function(e){return iE(nG(e,1,ak,!0))}),r3=id(function(e){var t=rJ(e);return ak(t)&&(t=n),iE(nG(e,1,ak,!0),rc(t,2))}),r4=id(function(e){var t=rJ(e);return t="function"==typeof t?t:n,iE(nG(e,1,ak,!0),n,t)});function r5(e){if(!(e&&e.length))return[];var t=0;return e=tc(e,function(e){if(ak(e))return t=t2(e.length,t),!0}),tP(t,function(t){return tf(e,tw(t))})}function r6(e,t){if(!(e&&e.length))return[];var i=r5(e);return null==t?i:tf(i,function(e){return to(t,n,e)})}var r8=id(function(e,t){return ak(e)?nF(e,t):[]}),r9=id(function(e){return iC(tc(e,ak))}),r7=id(function(e){var t=rJ(e);return ak(t)&&(t=n),iC(tc(e,ak),rc(t,2))}),ae=id(function(e){var t=rJ(e);return t="function"==typeof t?t:n,iC(tc(e,ak),n,t)}),at=id(r5),an=id(function(e){var t=e.length,i=t>1?e[t-1]:n;return i="function"==typeof i?(e.pop(),i):n,r6(e,i)});function ai(e){var t=nf(e);return t.__chain__=!0,t}function ar(e,t){return t(e)}var aa=ra(function(e){var t=e.length,i=t?e[0]:0,r=this.__wrapped__,a=function(t){return nI(t,e)};return!(t>1)&&!this.__actions__.length&&r instanceof n_&&rb(i)?((r=r.slice(i,+i+ +!!t)).__actions__.push({func:ar,args:[a],thisArg:n}),new nv(r,this.__chain__).thru(function(e){return t&&!e.length&&e.push(n),e})):this.thru(a)}),as=iW(function(e,t,n){eI.call(e,n)?++e[n]:nL(e,n,1)}),ao=iJ(rW),al=iJ(rj);function ah(e,t){return(aF(e)?th:nB)(e,rc(t,3))}function au(e,t){return(aF(e)?function(e,t){for(var n=null==e?0:e.length;n--&&!1!==t(e[n],n,e););return e}:nz)(e,rc(t,3))}var ac=iW(function(e,t,n){eI.call(e,n)?e[n].push(t):nL(e,n,[t])}),ad=id(function(e,t,n){var i=-1,r="function"==typeof t,a=az(e)?e_(e.length):[];return nB(e,function(e){a[++i]=r?to(t,e,n):n2(e,t,n)}),a}),ap=iW(function(e,t,n){nL(e,n,t)});function af(e,t){return(aF(e)?tf:ie)(e,rc(t,3))}var am=iW(function(e,t,n){e[+!n].push(t)},function(){return[[],[]]}),ag=id(function(e,t){if(null==e)return[];var n=t.length;return n>1&&rM(e,t[0],t[1])?t=[]:n>2&&rM(t[0],t[1],t[2])&&(t=[t[0]]),is(e,nG(t,1),[])}),av=te||function(){return e5.Date.now()};function a_(e,t,i){return t=i?n:t,t=e&&null==t?e.length:t,re(e,128,n,n,n,n,t)}function ay(e,t){var r;if("function"!=typeof t)throw new ew(i);return e=a8(e),function(){return--e>0&&(r=t.apply(this,arguments)),e<=1&&(t=n),r}}var ax=id(function(e,t,n){var i=1;if(n.length){var r=tG(n,ru(ax));i|=32}return re(e,i,t,n,r)}),ab=id(function(e,t,n){var i=3;if(n.length){var r=tG(n,ru(ab));i|=32}return re(t,i,e,n,r)});function aM(e,t,i){t=i?n:t;var r=re(e,8,n,n,n,n,n,t);return r.placeholder=aM.placeholder,r}function aS(e,t,i){t=i?n:t;var r=re(e,16,n,n,n,n,n,t);return r.placeholder=aS.placeholder,r}function aE(e,t,r){var a,s,o,l,h,u,c=0,d=!1,p=!1,f=!0;if("function"!=typeof e)throw new ew(i);function m(t){var i=a,r=s;return a=s=n,c=t,l=e.apply(r,i)}function g(e){var i=e-u,r=e-c;return u===n||i>=t||i<0||p&&r>=o}function v(){var e,n,i,r=av();if(g(r))return _(r);h=rI(v,(e=r-u,n=r-c,i=t-e,p?t3(i,o-n):i))}function _(e){return(h=n,f&&a)?m(e):(a=s=n,l)}function y(){var e,i=av(),r=g(i);if(a=arguments,s=this,u=i,r){if(h===n)return c=e=u,h=rI(v,t),d?m(e):l;if(p)return iU(h),h=rI(v,t),m(u)}return h===n&&(h=rI(v,t)),l}return t=a7(t)||0,aq(r)&&(d=!!r.leading,o=(p="maxWait"in r)?t2(a7(r.maxWait)||0,t):o,f="trailing"in r?!!r.trailing:f),y.cancel=function(){h!==n&&iU(h),c=0,a=u=s=h=n},y.flush=function(){return h===n?l:_(av())},y}var aT=id(function(e,t){return nO(e,1,t)}),aw=id(function(e,t,n){return nO(e,a7(t)||0,n)});function aA(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new ew(i);var n=function(){var i=arguments,r=t?t.apply(this,i):i[0],a=n.cache;if(a.has(r))return a.get(r);var s=e.apply(this,i);return n.cache=a.set(r,s)||a,s};return n.cache=new(aA.Cache||nb),n}function aR(e){if("function"!=typeof e)throw new ew(i);return function(){var t=arguments;switch(t.length){case 0:return!e.call(this);case 1:return!e.call(this,t[0]);case 2:return!e.call(this,t[0],t[1]);case 3:return!e.call(this,t[0],t[1],t[2])}return!e.apply(this,t)}}aA.Cache=nb;var aC=id(function(e,t){var n=(t=1==t.length&&aF(t[0])?tf(t[0],tI(rc())):tf(nG(t,1),tI(rc()))).length;return id(function(i){for(var r=-1,a=t3(i.length,n);++r<a;)i[r]=t[r].call(this,i[r]);return to(e,this,i)})}),aP=id(function(e,t){var i=tG(t,ru(aP));return re(e,32,n,t,i)}),aL=id(function(e,t){var i=tG(t,ru(aL));return re(e,64,n,t,i)}),aI=ra(function(e,t){return re(e,256,n,n,n,t)});function aN(e,t){return e===t||e!=e&&t!=t}var aD=i5(n$),aU=i5(function(e,t){return e>=t}),aO=n3(function(){return arguments}())?n3:function(e){return aY(e)&&eI.call(e,"callee")&&!eY.call(e,"callee")},aF=e_.isArray,aB=tt?tI(tt):function(e){return aY(e)&&nJ(e)==w};function az(e){return null!=e&&aX(e.length)&&!aW(e)}function ak(e){return aY(e)&&az(e)}var aH=t$||sQ,aV=tn?tI(tn):function(e){return aY(e)&&nJ(e)==p};function aG(e){if(!aY(e))return!1;var t=nJ(e);return t==f||"[object DOMException]"==t||"string"==typeof e.message&&"string"==typeof e.name&&!aJ(e)}function aW(e){if(!aq(e))return!1;var t=nJ(e);return t==m||t==g||"[object AsyncFunction]"==t||"[object Proxy]"==t}function aj(e){return"number"==typeof e&&e==a8(e)}function aX(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=0x1fffffffffffff}function aq(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function aY(e){return null!=e&&"object"==typeof e}var aK=ti?tI(ti):function(e){return aY(e)&&rv(e)==v};function aZ(e){return"number"==typeof e||aY(e)&&nJ(e)==_}function aJ(e){if(!aY(e)||nJ(e)!=y)return!1;var t=eG(e);if(null===t)return!0;var n=eI.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&eL.call(n)==eO}var a$=tr?tI(tr):function(e){return aY(e)&&nJ(e)==b},aQ=ta?tI(ta):function(e){return aY(e)&&rv(e)==M};function a0(e){return"string"==typeof e||!aF(e)&&aY(e)&&nJ(e)==S}function a1(e){return"symbol"==typeof e||aY(e)&&nJ(e)==E}var a2=ts?tI(ts):function(e){return aY(e)&&aX(e.length)&&!!e$[nJ(e)]},a3=i5(n7),a4=i5(function(e,t){return e<=t});function a5(e){if(!e)return[];if(az(e))return a0(e)?tX(e):iV(e);if(e4&&e[e4]){for(var t,n=e[e4](),i=[];!(t=n.next()).done;)i.push(t.value);return i}var r=rv(e);return(r==v?tH:r==M?tW:sS)(e)}function a6(e){return e?(e=a7(e))===s||e===-s?(e<0?-1:1)*17976931348623157e292:e==e?e:0:0===e?e:0}function a8(e){var t=a6(e),n=t%1;return t==t?n?t-n:t:0}function a9(e){return e?nN(a8(e),0,0xffffffff):0}function a7(e){if("number"==typeof e)return e;if(a1(e))return o;if(aq(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=aq(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=tL(e);var n=eh.test(e);return n||ec.test(e)?e2(e.slice(2),n?2:8):el.test(e)?o:+e}function se(e){return iG(e,sm(e))}function st(e){return null==e?"":iS(e)}var sn=ij(function(e,t){if(rw(t)||az(t))return void iG(t,sf(t),e);for(var n in t)eI.call(t,n)&&nA(e,n,t[n])}),si=ij(function(e,t){iG(t,sm(t),e)}),sr=ij(function(e,t,n,i){iG(t,sm(t),e,i)}),sa=ij(function(e,t,n,i){iG(t,sf(t),e,i)}),ss=ra(nI),so=id(function(e,t){e=eS(e);var i=-1,r=t.length,a=r>2?t[2]:n;for(a&&rM(t[0],t[1],a)&&(r=1);++i<r;)for(var s=t[i],o=sm(s),l=-1,h=o.length;++l<h;){var u=o[l],c=e[u];(c===n||aN(c,eC[u])&&!eI.call(e,u))&&(e[u]=s[u])}return e}),sl=id(function(e){return e.push(n,rn),to(sv,n,e)});function sh(e,t,i){var r=null==e?n:nK(e,t);return r===n?i:r}function su(e,t){return null!=e&&r_(e,t,n0)}var sc=i0(function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=eU.call(t)),e[t]=n},sF(sk)),sd=i0(function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=eU.call(t)),eI.call(e,t)?e[t].push(n):e[t]=[n]},rc),sp=id(n2);function sf(e){return az(e)?nE(e):n9(e)}function sm(e){return az(e)?nE(e,!0):function(e){if(!aq(e)){var t=e,n=[];if(null!=t)for(var i in eS(t))n.push(i);return n}var r=rw(e),a=[];for(var s in e)"constructor"==s&&(r||!eI.call(e,s))||a.push(s);return a}(e)}var sg=ij(function(e,t,n){ir(e,t,n)}),sv=ij(function(e,t,n,i){ir(e,t,n,i)}),s_=ra(function(e,t){var n={};if(null==e)return n;var i=!1;t=tf(t,function(t){return t=iN(t,e),i||(i=t.length>1),t}),iG(e,ro(e),n),i&&(n=nD(n,7,ri));for(var r=t.length;r--;)iT(n,t[r]);return n}),sy=ra(function(e,t){return null==e?{}:io(e,t,function(t,n){return su(e,n)})});function sx(e,t){if(null==e)return{};var n=tf(ro(e),function(e){return[e]});return t=rc(t),io(e,n,function(e,n){return t(e,n[0])})}var sb=i7(sf),sM=i7(sm);function sS(e){return null==e?[]:tN(e,sf(e))}var sE=iK(function(e,t,n){return t=t.toLowerCase(),e+(n?sT(t):t)});function sT(e){return sN(st(e).toLowerCase())}function sw(e){return(e=st(e))&&e.replace(ep,tF).replace(ej,"")}var sA=iK(function(e,t,n){return e+(n?"-":"")+t.toLowerCase()}),sR=iK(function(e,t,n){return e+(n?" ":"")+t.toLowerCase()}),sC=iY("toLowerCase"),sP=iK(function(e,t,n){return e+(n?"_":"")+t.toLowerCase()}),sL=iK(function(e,t,n){return e+(n?" ":"")+sN(t)}),sI=iK(function(e,t,n){return e+(n?" ":"")+t.toUpperCase()}),sN=iY("toUpperCase");function sD(e,t,i){if(e=st(e),(t=i?n:t)===n){var r;return(r=e,eK.test(r))?e.match(eq)||[]:e.match(ei)||[]}return e.match(t)||[]}var sU=id(function(e,t){try{return to(e,n,t)}catch(e){return aG(e)?e:new ex(e)}}),sO=ra(function(e,t){return th(t,function(t){nL(e,t=rB(t),ax(e[t],e))}),e});function sF(e){return function(){return e}}var sB=i$(),sz=i$(!0);function sk(e){return e}function sH(e){return n8("function"==typeof e?e:nD(e,1))}var sV=id(function(e,t){return function(n){return n2(n,e,t)}}),sG=id(function(e,t){return function(n){return n2(e,n,t)}});function sW(e,t,n){var i=sf(t),r=nY(t,i);null!=n||aq(t)&&(r.length||!i.length)||(n=t,t=e,e=this,r=nY(t,sf(t)));var a=!(aq(n)&&"chain"in n)||!!n.chain,s=aW(e);return th(r,function(n){var i=t[n];e[n]=i,s&&(e.prototype[n]=function(){var t=this.__chain__;if(a||t){var n=e(this.__wrapped__);return(n.__actions__=iV(this.__actions__)).push({func:i,args:arguments,thisArg:e}),n.__chain__=t,n}return i.apply(e,tm([this.value()],arguments))})}),e}function sj(){}var sX=i2(tf),sq=i2(tu),sY=i2(t_);function sK(e){return rS(e)?tw(rB(e)):function(t){return nK(t,e)}}var sZ=i4(),sJ=i4(!0);function s$(){return[]}function sQ(){return!1}var s0=i1(function(e,t){return e+t},0),s1=i8("ceil"),s2=i1(function(e,t){return e/t},1),s3=i8("floor"),s4=i1(function(e,t){return e*t},1),s5=i8("round"),s6=i1(function(e,t){return e-t},0);return nf.after=function(e,t){if("function"!=typeof t)throw new ew(i);return e=a8(e),function(){if(--e<1)return t.apply(this,arguments)}},nf.ary=a_,nf.assign=sn,nf.assignIn=si,nf.assignInWith=sr,nf.assignWith=sa,nf.at=ss,nf.before=ay,nf.bind=ax,nf.bindAll=sO,nf.bindKey=ab,nf.castArray=function(){if(!arguments.length)return[];var e=arguments[0];return aF(e)?e:[e]},nf.chain=ai,nf.chunk=function(e,t,i){t=(i?rM(e,t,i):t===n)?1:t2(a8(t),0);var r=null==e?0:e.length;if(!r||t<1)return[];for(var a=0,s=0,o=e_(tA(r/t));a<r;)o[s++]=iv(e,a,a+=t);return o},nf.compact=function(e){for(var t=-1,n=null==e?0:e.length,i=0,r=[];++t<n;){var a=e[t];a&&(r[i++]=a)}return r},nf.concat=function(){var e=arguments.length;if(!e)return[];for(var t=e_(e-1),n=arguments[0],i=e;i--;)t[i-1]=arguments[i];return tm(aF(n)?iV(n):[n],nG(t,1))},nf.cond=function(e){var t=null==e?0:e.length,n=rc();return e=t?tf(e,function(e){if("function"!=typeof e[1])throw new ew(i);return[n(e[0]),e[1]]}):[],id(function(n){for(var i=-1;++i<t;){var r=e[i];if(to(r[0],this,n))return to(r[1],this,n)}})},nf.conforms=function(e){var t,n;return n=sf(t=nD(e,1)),function(e){return nU(e,t,n)}},nf.constant=sF,nf.countBy=as,nf.create=function(e,t){var n=nm(e);return null==t?n:nP(n,t)},nf.curry=aM,nf.curryRight=aS,nf.debounce=aE,nf.defaults=so,nf.defaultsDeep=sl,nf.defer=aT,nf.delay=aw,nf.difference=rH,nf.differenceBy=rV,nf.differenceWith=rG,nf.drop=function(e,t,i){var r=null==e?0:e.length;return r?iv(e,(t=i||t===n?1:a8(t))<0?0:t,r):[]},nf.dropRight=function(e,t,i){var r=null==e?0:e.length;return r?iv(e,0,(t=r-(t=i||t===n?1:a8(t)))<0?0:t):[]},nf.dropRightWhile=function(e,t){return e&&e.length?iA(e,rc(t,3),!0,!0):[]},nf.dropWhile=function(e,t){return e&&e.length?iA(e,rc(t,3),!0):[]},nf.fill=function(e,t,i,r){var a=null==e?0:e.length;if(!a)return[];i&&"number"!=typeof i&&rM(e,t,i)&&(i=0,r=a);var s=i,o=r,l=e.length;for((s=a8(s))<0&&(s=-s>l?0:l+s),(o=o===n||o>l?l:a8(o))<0&&(o+=l),o=s>o?0:a9(o);s<o;)e[s++]=t;return e},nf.filter=function(e,t){return(aF(e)?tc:nV)(e,rc(t,3))},nf.flatMap=function(e,t){return nG(af(e,t),1)},nf.flatMapDeep=function(e,t){return nG(af(e,t),s)},nf.flatMapDepth=function(e,t,i){return i=i===n?1:a8(i),nG(af(e,t),i)},nf.flatten=rX,nf.flattenDeep=function(e){return(null==e?0:e.length)?nG(e,s):[]},nf.flattenDepth=function(e,t){return(null==e?0:e.length)?nG(e,t=t===n?1:a8(t)):[]},nf.flip=function(e){return re(e,512)},nf.flow=sB,nf.flowRight=sz,nf.fromPairs=function(e){for(var t=-1,n=null==e?0:e.length,i={};++t<n;){var r=e[t];i[r[0]]=r[1]}return i},nf.functions=function(e){return null==e?[]:nY(e,sf(e))},nf.functionsIn=function(e){return null==e?[]:nY(e,sm(e))},nf.groupBy=ac,nf.initial=function(e){return(null==e?0:e.length)?iv(e,0,-1):[]},nf.intersection=rY,nf.intersectionBy=rK,nf.intersectionWith=rZ,nf.invert=sc,nf.invertBy=sd,nf.invokeMap=ad,nf.iteratee=sH,nf.keyBy=ap,nf.keys=sf,nf.keysIn=sm,nf.map=af,nf.mapKeys=function(e,t){var n={};return t=rc(t,3),nX(e,function(e,i,r){nL(n,t(e,i,r),e)}),n},nf.mapValues=function(e,t){var n={};return t=rc(t,3),nX(e,function(e,i,r){nL(n,i,t(e,i,r))}),n},nf.matches=function(e){return it(nD(e,1))},nf.matchesProperty=function(e,t){return ii(e,nD(t,1))},nf.memoize=aA,nf.merge=sg,nf.mergeWith=sv,nf.method=sV,nf.methodOf=sG,nf.mixin=sW,nf.negate=aR,nf.nthArg=function(e){return e=a8(e),id(function(t){return ia(t,e)})},nf.omit=s_,nf.omitBy=function(e,t){return sx(e,aR(rc(t)))},nf.once=function(e){return ay(2,e)},nf.orderBy=function(e,t,i,r){return null==e?[]:(aF(t)||(t=null==t?[]:[t]),aF(i=r?n:i)||(i=null==i?[]:[i]),is(e,t,i))},nf.over=sX,nf.overArgs=aC,nf.overEvery=sq,nf.overSome=sY,nf.partial=aP,nf.partialRight=aL,nf.partition=am,nf.pick=sy,nf.pickBy=sx,nf.property=sK,nf.propertyOf=function(e){return function(t){return null==e?n:nK(e,t)}},nf.pull=r$,nf.pullAll=rQ,nf.pullAllBy=function(e,t,n){return e&&e.length&&t&&t.length?il(e,t,rc(n,2)):e},nf.pullAllWith=function(e,t,i){return e&&e.length&&t&&t.length?il(e,t,n,i):e},nf.pullAt=r0,nf.range=sZ,nf.rangeRight=sJ,nf.rearg=aI,nf.reject=function(e,t){return(aF(e)?tc:nV)(e,aR(rc(t,3)))},nf.remove=function(e,t){var n=[];if(!(e&&e.length))return n;var i=-1,r=[],a=e.length;for(t=rc(t,3);++i<a;){var s=e[i];t(s,i,e)&&(n.push(s),r.push(i))}return ih(e,r),n},nf.rest=function(e,t){if("function"!=typeof e)throw new ew(i);return id(e,t=t===n?t:a8(t))},nf.reverse=r1,nf.sampleSize=function(e,t,i){return t=(i?rM(e,t,i):t===n)?1:a8(t),(aF(e)?function(e,t){return rO(iV(e),nN(t,0,e.length))}:function(e,t){var n=sS(e);return rO(n,nN(t,0,n.length))})(e,t)},nf.set=function(e,t,n){return null==e?e:ip(e,t,n)},nf.setWith=function(e,t,i,r){return r="function"==typeof r?r:n,null==e?e:ip(e,t,i,r)},nf.shuffle=function(e){return(aF(e)?function(e){return rO(iV(e))}:function(e){return rO(sS(e))})(e)},nf.slice=function(e,t,i){var r=null==e?0:e.length;return r?(i&&"number"!=typeof i&&rM(e,t,i)?(t=0,i=r):(t=null==t?0:a8(t),i=i===n?r:a8(i)),iv(e,t,i)):[]},nf.sortBy=ag,nf.sortedUniq=function(e){return e&&e.length?ib(e):[]},nf.sortedUniqBy=function(e,t){return e&&e.length?ib(e,rc(t,2)):[]},nf.split=function(e,t,i){return(i&&"number"!=typeof i&&rM(e,t,i)&&(t=i=n),i=i===n?0xffffffff:i>>>0)?(e=st(e))&&("string"==typeof t||null!=t&&!a$(t))&&!(t=iS(t))&&tk(e)?iD(tX(e),0,i):e.split(t,i):[]},nf.spread=function(e,t){if("function"!=typeof e)throw new ew(i);return t=null==t?0:t2(a8(t),0),id(function(n){var i=n[t],r=iD(n,0,t);return i&&tm(r,i),to(e,this,r)})},nf.tail=function(e){var t=null==e?0:e.length;return t?iv(e,1,t):[]},nf.take=function(e,t,i){return e&&e.length?iv(e,0,(t=i||t===n?1:a8(t))<0?0:t):[]},nf.takeRight=function(e,t,i){var r=null==e?0:e.length;return r?iv(e,(t=r-(t=i||t===n?1:a8(t)))<0?0:t,r):[]},nf.takeRightWhile=function(e,t){return e&&e.length?iA(e,rc(t,3),!1,!0):[]},nf.takeWhile=function(e,t){return e&&e.length?iA(e,rc(t,3)):[]},nf.tap=function(e,t){return t(e),e},nf.throttle=function(e,t,n){var r=!0,a=!0;if("function"!=typeof e)throw new ew(i);return aq(n)&&(r="leading"in n?!!n.leading:r,a="trailing"in n?!!n.trailing:a),aE(e,t,{leading:r,maxWait:t,trailing:a})},nf.thru=ar,nf.toArray=a5,nf.toPairs=sb,nf.toPairsIn=sM,nf.toPath=function(e){return aF(e)?tf(e,rB):a1(e)?[e]:iV(rF(st(e)))},nf.toPlainObject=se,nf.transform=function(e,t,n){var i=aF(e),r=i||aH(e)||a2(e);if(t=rc(t,4),null==n){var a=e&&e.constructor;n=r?i?new a:[]:aq(e)&&aW(a)?nm(eG(e)):{}}return(r?th:nX)(e,function(e,i,r){return t(n,e,i,r)}),n},nf.unary=function(e){return a_(e,1)},nf.union=r2,nf.unionBy=r3,nf.unionWith=r4,nf.uniq=function(e){return e&&e.length?iE(e):[]},nf.uniqBy=function(e,t){return e&&e.length?iE(e,rc(t,2)):[]},nf.uniqWith=function(e,t){return t="function"==typeof t?t:n,e&&e.length?iE(e,n,t):[]},nf.unset=function(e,t){return null==e||iT(e,t)},nf.unzip=r5,nf.unzipWith=r6,nf.update=function(e,t,n){return null==e?e:iw(e,t,iI(n))},nf.updateWith=function(e,t,i,r){return r="function"==typeof r?r:n,null==e?e:iw(e,t,iI(i),r)},nf.values=sS,nf.valuesIn=function(e){return null==e?[]:tN(e,sm(e))},nf.without=r8,nf.words=sD,nf.wrap=function(e,t){return aP(iI(t),e)},nf.xor=r9,nf.xorBy=r7,nf.xorWith=ae,nf.zip=at,nf.zipObject=function(e,t){return iP(e||[],t||[],nA)},nf.zipObjectDeep=function(e,t){return iP(e||[],t||[],ip)},nf.zipWith=an,nf.entries=sb,nf.entriesIn=sM,nf.extend=si,nf.extendWith=sr,sW(nf,nf),nf.add=s0,nf.attempt=sU,nf.camelCase=sE,nf.capitalize=sT,nf.ceil=s1,nf.clamp=function(e,t,i){return i===n&&(i=t,t=n),i!==n&&(i=(i=a7(i))==i?i:0),t!==n&&(t=(t=a7(t))==t?t:0),nN(a7(e),t,i)},nf.clone=function(e){return nD(e,4)},nf.cloneDeep=function(e){return nD(e,5)},nf.cloneDeepWith=function(e,t){return nD(e,5,t="function"==typeof t?t:n)},nf.cloneWith=function(e,t){return nD(e,4,t="function"==typeof t?t:n)},nf.conformsTo=function(e,t){return null==t||nU(e,t,sf(t))},nf.deburr=sw,nf.defaultTo=function(e,t){return null==e||e!=e?t:e},nf.divide=s2,nf.endsWith=function(e,t,i){e=st(e),t=iS(t);var r=e.length,a=i=i===n?r:nN(a8(i),0,r);return(i-=t.length)>=0&&e.slice(i,a)==t},nf.eq=aN,nf.escape=function(e){return(e=st(e))&&G.test(e)?e.replace(H,tB):e},nf.escapeRegExp=function(e){return(e=st(e))&&J.test(e)?e.replace(Z,"\\$&"):e},nf.every=function(e,t,i){var r=aF(e)?tu:nk;return i&&rM(e,t,i)&&(t=n),r(e,rc(t,3))},nf.find=ao,nf.findIndex=rW,nf.findKey=function(e,t){return tx(e,rc(t,3),nX)},nf.findLast=al,nf.findLastIndex=rj,nf.findLastKey=function(e,t){return tx(e,rc(t,3),nq)},nf.floor=s3,nf.forEach=ah,nf.forEachRight=au,nf.forIn=function(e,t){return null==e?e:nW(e,rc(t,3),sm)},nf.forInRight=function(e,t){return null==e?e:nj(e,rc(t,3),sm)},nf.forOwn=function(e,t){return e&&nX(e,rc(t,3))},nf.forOwnRight=function(e,t){return e&&nq(e,rc(t,3))},nf.get=sh,nf.gt=aD,nf.gte=aU,nf.has=function(e,t){return null!=e&&r_(e,t,nQ)},nf.hasIn=su,nf.head=rq,nf.identity=sk,nf.includes=function(e,t,n,i){e=az(e)?e:sS(e),n=n&&!i?a8(n):0;var r=e.length;return n<0&&(n=t2(r+n,0)),a0(e)?n<=r&&e.indexOf(t,n)>-1:!!r&&tM(e,t,n)>-1},nf.indexOf=function(e,t,n){var i=null==e?0:e.length;if(!i)return -1;var r=null==n?0:a8(n);return r<0&&(r=t2(i+r,0)),tM(e,t,r)},nf.inRange=function(e,t,i){var r,a,s;return t=a6(t),i===n?(i=t,t=0):i=a6(i),(r=e=a7(e))>=t3(a=t,s=i)&&r<t2(a,s)},nf.invoke=sp,nf.isArguments=aO,nf.isArray=aF,nf.isArrayBuffer=aB,nf.isArrayLike=az,nf.isArrayLikeObject=ak,nf.isBoolean=function(e){return!0===e||!1===e||aY(e)&&nJ(e)==d},nf.isBuffer=aH,nf.isDate=aV,nf.isElement=function(e){return aY(e)&&1===e.nodeType&&!aJ(e)},nf.isEmpty=function(e){if(null==e)return!0;if(az(e)&&(aF(e)||"string"==typeof e||"function"==typeof e.splice||aH(e)||a2(e)||aO(e)))return!e.length;var t=rv(e);if(t==v||t==M)return!e.size;if(rw(e))return!n9(e).length;for(var n in e)if(eI.call(e,n))return!1;return!0},nf.isEqual=function(e,t){return n4(e,t)},nf.isEqualWith=function(e,t,i){var r=(i="function"==typeof i?i:n)?i(e,t):n;return r===n?n4(e,t,n,i):!!r},nf.isError=aG,nf.isFinite=function(e){return"number"==typeof e&&tQ(e)},nf.isFunction=aW,nf.isInteger=aj,nf.isLength=aX,nf.isMap=aK,nf.isMatch=function(e,t){return e===t||n5(e,t,rp(t))},nf.isMatchWith=function(e,t,i){return i="function"==typeof i?i:n,n5(e,t,rp(t),i)},nf.isNaN=function(e){return aZ(e)&&e!=+e},nf.isNative=function(e){if(rT(e))throw new ex("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return n6(e)},nf.isNil=function(e){return null==e},nf.isNull=function(e){return null===e},nf.isNumber=aZ,nf.isObject=aq,nf.isObjectLike=aY,nf.isPlainObject=aJ,nf.isRegExp=a$,nf.isSafeInteger=function(e){return aj(e)&&e>=-0x1fffffffffffff&&e<=0x1fffffffffffff},nf.isSet=aQ,nf.isString=a0,nf.isSymbol=a1,nf.isTypedArray=a2,nf.isUndefined=function(e){return e===n},nf.isWeakMap=function(e){return aY(e)&&rv(e)==T},nf.isWeakSet=function(e){return aY(e)&&"[object WeakSet]"==nJ(e)},nf.join=function(e,t){return null==e?"":t0.call(e,t)},nf.kebabCase=sA,nf.last=rJ,nf.lastIndexOf=function(e,t,i){var r=null==e?0:e.length;if(!r)return -1;var a=r;return i!==n&&(a=(a=a8(i))<0?t2(r+a,0):t3(a,r-1)),t==t?function(e,t,n){for(var i=n+1;i--&&e[i]!==t;);return i}(e,t,a):tb(e,tE,a,!0)},nf.lowerCase=sR,nf.lowerFirst=sC,nf.lt=a3,nf.lte=a4,nf.max=function(e){return e&&e.length?nH(e,sk,n$):n},nf.maxBy=function(e,t){return e&&e.length?nH(e,rc(t,2),n$):n},nf.mean=function(e){return tT(e,sk)},nf.meanBy=function(e,t){return tT(e,rc(t,2))},nf.min=function(e){return e&&e.length?nH(e,sk,n7):n},nf.minBy=function(e,t){return e&&e.length?nH(e,rc(t,2),n7):n},nf.stubArray=s$,nf.stubFalse=sQ,nf.stubObject=function(){return{}},nf.stubString=function(){return""},nf.stubTrue=function(){return!0},nf.multiply=s4,nf.nth=function(e,t){return e&&e.length?ia(e,a8(t)):n},nf.noConflict=function(){return e5._===this&&(e5._=eF),this},nf.noop=sj,nf.now=av,nf.pad=function(e,t,n){e=st(e);var i=(t=a8(t))?tj(e):0;if(!t||i>=t)return e;var r=(t-i)/2;return i3(tZ(r),n)+e+i3(tA(r),n)},nf.padEnd=function(e,t,n){e=st(e);var i=(t=a8(t))?tj(e):0;return t&&i<t?e+i3(t-i,n):e},nf.padStart=function(e,t,n){e=st(e);var i=(t=a8(t))?tj(e):0;return t&&i<t?i3(t-i,n)+e:e},nf.parseInt=function(e,t,n){return n||null==t?t=0:t&&(t*=1),t5(st(e).replace($,""),t||0)},nf.random=function(e,t,i){if(i&&"boolean"!=typeof i&&rM(e,t,i)&&(t=i=n),i===n&&("boolean"==typeof t?(i=t,t=n):"boolean"==typeof e&&(i=e,e=n)),e===n&&t===n?(e=0,t=1):(e=a6(e),t===n?(t=e,e=0):t=a6(t)),e>t){var r=e;e=t,t=r}if(i||e%1||t%1){var a=t6();return t3(e+a*(t-e+e1("1e-"+((a+"").length-1))),t)}return iu(e,t)},nf.reduce=function(e,t,n){var i=aF(e)?tg:tR,r=arguments.length<3;return i(e,rc(t,4),n,r,nB)},nf.reduceRight=function(e,t,n){var i=aF(e)?tv:tR,r=arguments.length<3;return i(e,rc(t,4),n,r,nz)},nf.repeat=function(e,t,i){return t=(i?rM(e,t,i):t===n)?1:a8(t),ic(st(e),t)},nf.replace=function(){var e=arguments,t=st(e[0]);return e.length<3?t:t.replace(e[1],e[2])},nf.result=function(e,t,i){t=iN(t,e);var r=-1,a=t.length;for(a||(a=1,e=n);++r<a;){var s=null==e?n:e[rB(t[r])];s===n&&(r=a,s=i),e=aW(s)?s.call(e):s}return e},nf.round=s5,nf.runInContext=e,nf.sample=function(e){return(aF(e)?nT:function(e){return nT(sS(e))})(e)},nf.size=function(e){if(null==e)return 0;if(az(e))return a0(e)?tj(e):e.length;var t=rv(e);return t==v||t==M?e.size:n9(e).length},nf.snakeCase=sP,nf.some=function(e,t,i){var r=aF(e)?t_:i_;return i&&rM(e,t,i)&&(t=n),r(e,rc(t,3))},nf.sortedIndex=function(e,t){return iy(e,t)},nf.sortedIndexBy=function(e,t,n){return ix(e,t,rc(n,2))},nf.sortedIndexOf=function(e,t){var n=null==e?0:e.length;if(n){var i=iy(e,t);if(i<n&&aN(e[i],t))return i}return -1},nf.sortedLastIndex=function(e,t){return iy(e,t,!0)},nf.sortedLastIndexBy=function(e,t,n){return ix(e,t,rc(n,2),!0)},nf.sortedLastIndexOf=function(e,t){if(null==e?0:e.length){var n=iy(e,t,!0)-1;if(aN(e[n],t))return n}return -1},nf.startCase=sL,nf.startsWith=function(e,t,n){return e=st(e),n=null==n?0:nN(a8(n),0,e.length),t=iS(t),e.slice(n,n+t.length)==t},nf.subtract=s6,nf.sum=function(e){return e&&e.length?tC(e,sk):0},nf.sumBy=function(e,t){return e&&e.length?tC(e,rc(t,2)):0},nf.template=function(e,t,i){var r=nf.templateSettings;i&&rM(e,t,i)&&(t=n),e=st(e),t=sr({},t,r,rt);var a,s,o=sr({},t.imports,r.imports,rt),l=sf(o),h=tN(o,l),u=0,c=t.interpolate||ef,d="__p += '",p=eE((t.escape||ef).source+"|"+c.source+"|"+(c===X?es:ef).source+"|"+(t.evaluate||ef).source+"|$","g"),f="//# sourceURL="+(eI.call(t,"sourceURL")?(t.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++eJ+"]")+"\n";e.replace(p,function(t,n,i,r,o,l){return i||(i=r),d+=e.slice(u,l).replace(em,tz),n&&(a=!0,d+="' +\n__e("+n+") +\n'"),o&&(s=!0,d+="';\n"+o+";\n__p += '"),i&&(d+="' +\n((__t = ("+i+")) == null ? '' : __t) +\n'"),u=l+t.length,t}),d+="';\n";var m=eI.call(t,"variable")&&t.variable;if(m){if(er.test(m))throw new ex("Invalid `variable` option passed into `_.template`")}else d="with (obj) {\n"+d+"\n}\n";d=(s?d.replace(F,""):d).replace(B,"$1").replace(z,"$1;"),d="function("+(m||"obj")+") {\n"+(m?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(a?", __e = _.escape":"")+(s?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+d+"return __p\n}";var g=sU(function(){return eb(l,f+"return "+d).apply(n,h)});if(g.source=d,aG(g))throw g;return g},nf.times=function(e,t){if((e=a8(e))<1||e>0x1fffffffffffff)return[];var n=0xffffffff,i=t3(e,0xffffffff);t=rc(t),e-=0xffffffff;for(var r=tP(i,t);++n<e;)t(n);return r},nf.toFinite=a6,nf.toInteger=a8,nf.toLength=a9,nf.toLower=function(e){return st(e).toLowerCase()},nf.toNumber=a7,nf.toSafeInteger=function(e){return e?nN(a8(e),-0x1fffffffffffff,0x1fffffffffffff):0===e?e:0},nf.toString=st,nf.toUpper=function(e){return st(e).toUpperCase()},nf.trim=function(e,t,i){if((e=st(e))&&(i||t===n))return tL(e);if(!e||!(t=iS(t)))return e;var r=tX(e),a=tX(t),s=tU(r,a),o=tO(r,a)+1;return iD(r,s,o).join("")},nf.trimEnd=function(e,t,i){if((e=st(e))&&(i||t===n))return e.slice(0,tq(e)+1);if(!e||!(t=iS(t)))return e;var r=tX(e),a=tO(r,tX(t))+1;return iD(r,0,a).join("")},nf.trimStart=function(e,t,i){if((e=st(e))&&(i||t===n))return e.replace($,"");if(!e||!(t=iS(t)))return e;var r=tX(e),a=tU(r,tX(t));return iD(r,a).join("")},nf.truncate=function(e,t){var i=30,r="...";if(aq(t)){var a="separator"in t?t.separator:a;i="length"in t?a8(t.length):i,r="omission"in t?iS(t.omission):r}var s=(e=st(e)).length;if(tk(e)){var o=tX(e);s=o.length}if(i>=s)return e;var l=i-tj(r);if(l<1)return r;var h=o?iD(o,0,l).join(""):e.slice(0,l);if(a===n)return h+r;if(o&&(l+=h.length-l),a$(a)){if(e.slice(l).search(a)){var u,c=h;for(a.global||(a=eE(a.source,st(eo.exec(a))+"g")),a.lastIndex=0;u=a.exec(c);)var d=u.index;h=h.slice(0,d===n?l:d)}}else if(e.indexOf(iS(a),l)!=l){var p=h.lastIndexOf(a);p>-1&&(h=h.slice(0,p))}return h+r},nf.unescape=function(e){return(e=st(e))&&V.test(e)?e.replace(k,tY):e},nf.uniqueId=function(e){var t=++eN;return st(e)+t},nf.upperCase=sI,nf.upperFirst=sN,nf.each=ah,nf.eachRight=au,nf.first=rq,sW(nf,(ev={},nX(nf,function(e,t){eI.call(nf.prototype,t)||(ev[t]=e)}),ev),{chain:!1}),nf.VERSION="4.17.21",th(["bind","bindKey","curry","curryRight","partial","partialRight"],function(e){nf[e].placeholder=nf}),th(["drop","take"],function(e,t){n_.prototype[e]=function(i){i=i===n?1:t2(a8(i),0);var r=this.__filtered__&&!t?new n_(this):this.clone();return r.__filtered__?r.__takeCount__=t3(i,r.__takeCount__):r.__views__.push({size:t3(i,0xffffffff),type:e+(r.__dir__<0?"Right":"")}),r},n_.prototype[e+"Right"]=function(t){return this.reverse()[e](t).reverse()}}),th(["filter","map","takeWhile"],function(e,t){var n=t+1,i=1==n||3==n;n_.prototype[e]=function(e){var t=this.clone();return t.__iteratees__.push({iteratee:rc(e,3),type:n}),t.__filtered__=t.__filtered__||i,t}}),th(["head","last"],function(e,t){var n="take"+(t?"Right":"");n_.prototype[e]=function(){return this[n](1).value()[0]}}),th(["initial","tail"],function(e,t){var n="drop"+(t?"":"Right");n_.prototype[e]=function(){return this.__filtered__?new n_(this):this[n](1)}}),n_.prototype.compact=function(){return this.filter(sk)},n_.prototype.find=function(e){return this.filter(e).head()},n_.prototype.findLast=function(e){return this.reverse().find(e)},n_.prototype.invokeMap=id(function(e,t){return"function"==typeof e?new n_(this):this.map(function(n){return n2(n,e,t)})}),n_.prototype.reject=function(e){return this.filter(aR(rc(e)))},n_.prototype.slice=function(e,t){e=a8(e);var i=this;return i.__filtered__&&(e>0||t<0)?new n_(i):(e<0?i=i.takeRight(-e):e&&(i=i.drop(e)),t!==n&&(i=(t=a8(t))<0?i.dropRight(-t):i.take(t-e)),i)},n_.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},n_.prototype.toArray=function(){return this.take(0xffffffff)},nX(n_.prototype,function(e,t){var i=/^(?:filter|find|map|reject)|While$/.test(t),r=/^(?:head|last)$/.test(t),a=nf[r?"take"+("last"==t?"Right":""):t],s=r||/^find/.test(t);a&&(nf.prototype[t]=function(){var t=this.__wrapped__,o=r?[1]:arguments,l=t instanceof n_,h=o[0],u=l||aF(t),c=function(e){var t=a.apply(nf,tm([e],o));return r&&d?t[0]:t};u&&i&&"function"==typeof h&&1!=h.length&&(l=u=!1);var d=this.__chain__,p=!!this.__actions__.length,f=s&&!d,m=l&&!p;if(!s&&u){t=m?t:new n_(this);var g=e.apply(t,o);return g.__actions__.push({func:ar,args:[c],thisArg:n}),new nv(g,d)}return f&&m?e.apply(this,o):(g=this.thru(c),f?r?g.value()[0]:g.value():g)})}),th(["pop","push","shift","sort","splice","unshift"],function(e){var t=eA[e],n=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",i=/^(?:pop|shift)$/.test(e);nf.prototype[e]=function(){var e=arguments;if(i&&!this.__chain__){var r=this.value();return t.apply(aF(r)?r:[],e)}return this[n](function(n){return t.apply(aF(n)?n:[],e)})}}),nX(n_.prototype,function(e,t){var n=nf[t];if(n){var i=n.name+"";eI.call(na,i)||(na[i]=[]),na[i].push({name:t,func:n})}}),na[iQ(n,2).name]=[{name:"wrapper",func:n}],n_.prototype.clone=function(){var e=new n_(this.__wrapped__);return e.__actions__=iV(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=iV(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=iV(this.__views__),e},n_.prototype.reverse=function(){if(this.__filtered__){var e=new n_(this);e.__dir__=-1,e.__filtered__=!0}else e=this.clone(),e.__dir__*=-1;return e},n_.prototype.value=function(){var e=this.__wrapped__.value(),t=this.__dir__,n=aF(e),i=t<0,r=n?e.length:0,a=function(e,t,n){for(var i=-1,r=n.length;++i<r;){var a=n[i],s=a.size;switch(a.type){case"drop":e+=s;break;case"dropRight":t-=s;break;case"take":t=t3(t,e+s);break;case"takeRight":e=t2(e,t-s)}}return{start:e,end:t}}(0,r,this.__views__),s=a.start,o=a.end,l=o-s,h=i?o:s-1,u=this.__iteratees__,c=u.length,d=0,p=t3(l,this.__takeCount__);if(!n||!i&&r==l&&p==l)return iR(e,this.__actions__);var f=[];e:for(;l--&&d<p;){for(var m=-1,g=e[h+=t];++m<c;){var v=u[m],_=v.iteratee,y=v.type,x=_(g);if(2==y)g=x;else if(!x)if(1==y)continue e;else break e}f[d++]=g}return f},nf.prototype.at=aa,nf.prototype.chain=function(){return ai(this)},nf.prototype.commit=function(){return new nv(this.value(),this.__chain__)},nf.prototype.next=function(){this.__values__===n&&(this.__values__=a5(this.value()));var e=this.__index__>=this.__values__.length,t=e?n:this.__values__[this.__index__++];return{done:e,value:t}},nf.prototype.plant=function(e){for(var t,i=this;i instanceof ng;){var r=rk(i);r.__index__=0,r.__values__=n,t?a.__wrapped__=r:t=r;var a=r;i=i.__wrapped__}return a.__wrapped__=e,t},nf.prototype.reverse=function(){var e=this.__wrapped__;if(e instanceof n_){var t=e;return this.__actions__.length&&(t=new n_(this)),(t=t.reverse()).__actions__.push({func:ar,args:[r1],thisArg:n}),new nv(t,this.__chain__)}return this.thru(r1)},nf.prototype.toJSON=nf.prototype.valueOf=nf.prototype.value=function(){return iR(this.__wrapped__,this.__actions__)},nf.prototype.first=nf.prototype.head,e4&&(nf.prototype[e4]=function(){return this}),nf}();"function"==typeof define&&"object"==typeof define.amd&&define.amd?(e5._=tK,define(function(){return tK})):e8?((e8.exports=tK)._=tK,e6._=tK):e5._=tK}).call(this)}),m("5fUTz",function(e,t){Object.defineProperty(e.exports,"default",{get:function(){return U},set:void 0,enumerable:!0,configurable:!0});var n=f("ii7yX"),i=f("kiaqk"),r=f("3ZkV7"),a=f("4Tmuc"),s=f("chTGE"),o=f("6FkBS"),l=f("hUjcS"),u=f("4cl4G"),c=f("foC7x"),d=f("gIM3W"),p=f("2FZpx"),m=f("5jbe0"),g=f("4l1iB"),v=f("45ZFF"),_=f("7yWtp"),y=f("iHdBw"),x=f("iR3mi"),b=f("3Gk0g"),M=f("1AuI2"),S=f("1mDRj"),E=f("bZnj2"),T=f("b8uFQ"),w=f("8O9Jv"),A=f("7Lhxz"),R=f("lzafx"),C=f("7BFOf"),P=f("ku2J0"),L=f("l50SD"),I=f("ldCCz"),N=f("8FE9O"),D=f("3K5Ox"),U=[{key:"sofa",name:"Диван",image:"",glb:h(n),category:"Меблі",type:"sofa"},{key:"plant",name:"Рослина",image:"",glb:h(i),category:"Декорації",type:"decoration"},{key:"wardrope",name:"Шафа",image:"",glb:h(r),category:"Меблі",type:"wardrope"},{key:"chair",name:"Крісло",image:"",glb:h(a),category:"Меблі",type:"chair"},{key:"bookshelf",name:"Книжкова шафа",image:"",glb:h(s),category:"Меблі",type:"wardrope"},{key:"decorPlant",name:"Декоративна рослина",image:"",glb:h(o),category:"Декорації",type:"decoration"},{key:"planter",name:"Квітковий горщик",image:"",glb:h(l),category:"Декорації",type:"decoration"},{key:"keyboard",name:"Клавіатура",image:"",glb:h(u),category:"Декорації",type:"decoration"},{key:"twoYarusBed",name:"Модель 1",image:"",glb:h(d),category:"Меблі",type:"bed"},{key:"model2",name:"Модель 2",image:"",glb:h(p),category:"Меблі",type:"bed"},{key:"cat",name:"Модель 3",image:"",glb:h(m),category:"Декорації",type:"decoration"},{key:"multybed",name:"Модель 4",image:"",glb:h(g),category:"Невідомо",type:"bed"},{key:"model5",name:"Модель 5",image:"",glb:h(v),category:"Невідомо",type:"decoration"},{key:"commonbed",name:"Модель 6",image:"",glb:h(_),category:"Невідомо",type:"bed"},{key:"lowwardrope",name:"Модель 7",image:"",glb:h(y),category:"Меблі",type:"wardrope"},{key:"multywardrope",name:"Модель 8",image:"",glb:h(x),category:"Невідомо",type:"wardrope"},{key:"lamp",name:"Модель 9",image:"",glb:h(b),category:"Невідомо",type:"decoration"},{key:"tv",name:"Телевізор",image:"",glb:h(D),category:"Електроніка",type:"decoration"},{key:"closetwooden_cabinet",name:"Дерев'яна шафа",image:"",glb:h(c),category:"Меблі",type:"wardrope"},{key:"playstation",name:"PlayStation 5",image:"",glb:h(M),category:"Електроніка",type:"decoration"},{key:"playstationDualsence",name:"PlayStation DualSense",image:"",glb:h(S),category:"Електроніка",type:"decoration"},{key:"storageCabinet",name:"Шафа для зберігання",image:"",glb:h(E),category:"Меблі",type:"wardrope"},{key:"coffee_table",name:"Журнальний столик",image:"",glb:h(T),category:"Меблі",type:"table"},{key:"modern_sofa",name:"Сучасний диван",image:"",glb:h(w),category:"Меблі",type:"sofa"},{key:"modern_chair",name:"Сучасне крісло",image:"",glb:h(A),category:"Меблі",type:"chair"},{key:"modern_couch",name:"Сучасний диван-кушетка",image:"",glb:h(R),category:"Меблі",type:"sofa"},{key:"modern_fridge",name:"Сучасний холодильник",image:"",glb:h(C),category:"Електроніка",type:"wardrope"},{key:"industrialTable",name:"Індустріальний стіл",image:"",glb:h(P),category:"Меблі",type:"table"},{key:"furniture_couch",name:"Диван (Меблі)",image:"",glb:h(L),category:"Меблі",type:"sofa"},{key:"luxurySofa",name:"Меблі",image:"",glb:h(I),category:"Меблі",type:"sofa"},{key:"folding_table",name:"Складаний стіл",image:"",glb:h(N),category:"Меблі",type:"table"}]}),m("ii7yX",function(e,t){e.exports=u("jK6Qa")}),m("kiaqk",function(e,t){e.exports=u("40G5n")}),m("3ZkV7",function(e,t){e.exports=u("91EE1")}),m("4Tmuc",function(e,t){e.exports=u("i6FEh")}),m("chTGE",function(e,t){e.exports=u("gJn9L")}),m("6FkBS",function(e,t){e.exports=u("bJ7AT")}),m("hUjcS",function(e,t){e.exports=u("aX2if")}),m("4cl4G",function(e,t){e.exports=u("d4rKb")}),m("foC7x",function(e,t){e.exports=u("cp83l")}),m("gIM3W",function(e,t){e.exports=u("04KT7")}),m("2FZpx",function(e,t){e.exports=u("fL9ZQ")}),m("5jbe0",function(e,t){e.exports=u("bi0kR")}),m("4l1iB",function(e,t){e.exports=u("e9Tyu")}),m("45ZFF",function(e,t){e.exports=u("gp99S")}),m("7yWtp",function(e,t){e.exports=u("anYtV")}),m("iHdBw",function(e,t){e.exports=u("gg4mT")}),m("iR3mi",function(e,t){e.exports=u("lbInm")}),m("3Gk0g",function(e,t){e.exports=u("c7a5t")}),m("1AuI2",function(e,t){e.exports=u("kJJVT")}),m("1mDRj",function(e,t){e.exports=u("hpr0b")}),m("bZnj2",function(e,t){e.exports=u("eeLQ2")}),m("b8uFQ",function(e,t){e.exports=u("hXSol")}),m("8O9Jv",function(e,t){e.exports=u("69Hdu")}),m("7Lhxz",function(e,t){e.exports=u("3gYKM")}),m("lzafx",function(e,t){e.exports=u("aQwxL")}),m("7BFOf",function(e,t){e.exports=u("enzpx")}),m("ku2J0",function(e,t){e.exports=u("1Coib")}),m("l50SD",function(e,t){e.exports=u("hI0cm")}),m("ldCCz",function(e,t){e.exports=u("04uEg")}),m("8FE9O",function(e,t){e.exports=u("izmNJ")}),m("3K5Ox",function(e,t){e.exports=u("6xCaA")}),Object.assign(f.i??={},{jK6Qa:"sofa.ed7e1f88.glb","40G5n":"plant.2f364f29.glb","91EE1":"wardrope.9b97d81b.glb",i6FEh:"chair.55d12972.glb",gJn9L:"bookshelf.1ba00b13.glb",bJ7AT:"decor-plant.d9fe9339.glb",aX2if:"planter.4cecf4b2.glb",d4rKb:"keyboard.061f8e58.glb",cp83l:"closetwooden_cabinet.a7a8cef9.glb","04KT7":"model-1.e35312f3.glb",fL9ZQ:"model-2.443237e0.glb",bi0kR:"model-3.e5dd8cb4.glb",e9Tyu:"model-4.6e4578d3.glb",gp99S:"model-5.8208b617.glb",anYtV:"model-6.7cba46c1.glb",gg4mT:"model-7.01ca306e.glb",lbInm:"model-8.fcc16b36.glb",c7a5t:"model-9.54bc2e70.glb",kJJVT:"playstation.c9b86451.glb",hpr0b:"playstation_5_dualsense.78f9af51.glb",eeLQ2:"storage_cabinet.c38c6348.glb",hXSol:"coffee_table.d907f286.glb","69Hdu":"modern__sofa.358c22fb.glb","3gYKM":"modern_chair.1fd8293e.glb",aQwxL:"modern_couch.4cde3139.glb",enzpx:"modern_fridge.0508f326.glb","1Coib":"industrial_table.156b8034.glb",hI0cm:"furniture_couch.b46febc2.glb","04uEg":"furniture.a0c6a19b.glb",izmNJ:"folding_table.de56e5e7.glb","6xCaA":"tv.9e0b8fa5.glb"});const g="attached",v="srgb",_="srgb-linear",y="linear",x="srgb",b="300 es";class M{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){let n=this._listeners;return void 0!==n&&void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){let n=this._listeners;if(void 0===n)return;let i=n[e];if(void 0!==i){let e=i.indexOf(t);-1!==e&&i.splice(e,1)}}dispatchEvent(e){let t=this._listeners;if(void 0===t)return;let n=t[e.type];if(void 0!==n){e.target=this;let t=n.slice(0);for(let n=0,i=t.length;n<i;n++)t[n].call(this,e);e.target=null}}}const S=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],E=Math.PI/180,T=180/Math.PI;function w(){let e=0xffffffff*Math.random()|0,t=0xffffffff*Math.random()|0,n=0xffffffff*Math.random()|0,i=0xffffffff*Math.random()|0;return(S[255&e]+S[e>>8&255]+S[e>>16&255]+S[e>>24&255]+"-"+S[255&t]+S[t>>8&255]+"-"+S[t>>16&15|64]+S[t>>24&255]+"-"+S[63&n|128]+S[n>>8&255]+"-"+S[n>>16&255]+S[n>>24&255]+S[255&i]+S[i>>8&255]+S[i>>16&255]+S[i>>24&255]).toLowerCase()}function A(e,t,n){return Math.max(t,Math.min(n,e))}function R(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/0xffffffff;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/0x7fffffff,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw Error("Invalid component type.")}}function C(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(0xffffffff*e);case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int32Array:return Math.round(0x7fffffff*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw Error("Invalid component type.")}}class P{constructor(e=0,t=0){P.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=A(this.x,e.x,t.x),this.y=A(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=A(this.x,e,t),this.y=A(this.y,e,t),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(A(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());return 0===t?Math.PI/2:Math.acos(A(this.dot(e)/t,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class L{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,a,s){let o=n[i+0],l=n[i+1],h=n[i+2],u=n[i+3],c=r[a+0],d=r[a+1],p=r[a+2],f=r[a+3];if(0===s){e[t+0]=o,e[t+1]=l,e[t+2]=h,e[t+3]=u;return}if(1===s){e[t+0]=c,e[t+1]=d,e[t+2]=p,e[t+3]=f;return}if(u!==f||o!==c||l!==d||h!==p){let e=1-s,t=o*c+l*d+h*p+u*f,n=t>=0?1:-1,i=1-t*t;if(i>Number.EPSILON){let r=Math.sqrt(i),a=Math.atan2(r,t*n);e=Math.sin(e*a)/r,s=Math.sin(s*a)/r}let r=s*n;if(o=o*e+c*r,l=l*e+d*r,h=h*e+p*r,u=u*e+f*r,e===1-s){let e=1/Math.sqrt(o*o+l*l+h*h+u*u);o*=e,l*=e,h*=e,u*=e}}e[t]=o,e[t+1]=l,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,r,a){let s=n[i],o=n[i+1],l=n[i+2],h=n[i+3],u=r[a],c=r[a+1],d=r[a+2],p=r[a+3];return e[t]=s*p+h*u+o*d-l*c,e[t+1]=o*p+h*c+l*u-s*d,e[t+2]=l*p+h*d+s*c-o*u,e[t+3]=h*p-s*u-o*c-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){let n=e._x,i=e._y,r=e._z,a=e._order,s=Math.cos,o=Math.sin,l=s(n/2),h=s(i/2),u=s(r/2),c=o(n/2),d=o(i/2),p=o(r/2);switch(a){case"XYZ":this._x=c*h*u+l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u-c*d*p;break;case"YXZ":this._x=c*h*u+l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u+c*d*p;break;case"ZXY":this._x=c*h*u-l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u-c*d*p;break;case"ZYX":this._x=c*h*u-l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u+c*d*p;break;case"YZX":this._x=c*h*u+l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u-c*d*p;break;case"XZY":this._x=c*h*u-l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u+c*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!0===t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],s=t[5],o=t[9],l=t[2],h=t[6],u=t[10],c=n+s+u;if(c>0){let e=.5/Math.sqrt(c+1);this._w=.25/e,this._x=(h-o)*e,this._y=(r-l)*e,this._z=(a-i)*e}else if(n>s&&n>u){let e=2*Math.sqrt(1+n-s-u);this._w=(h-o)/e,this._x=.25*e,this._y=(i+a)/e,this._z=(r+l)/e}else if(s>u){let e=2*Math.sqrt(1+s-n-u);this._w=(r-l)/e,this._x=(i+a)/e,this._y=.25*e,this._z=(o+h)/e}else{let e=2*Math.sqrt(1+u-n-s);this._w=(a-i)/e,this._x=(r+l)/e,this._y=(o+h)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<1e-8?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=n,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(A(this.dot(e),-1,1)))}rotateTowards(e,t){let n=this.angleTo(e);if(0===n)return this;let i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let n=e._x,i=e._y,r=e._z,a=e._w,s=t._x,o=t._y,l=t._z,h=t._w;return this._x=n*h+a*s+i*l-r*o,this._y=i*h+a*o+r*s-n*l,this._z=r*h+a*l+n*o-i*s,this._w=a*h-n*s-i*o-r*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);let n=this._x,i=this._y,r=this._z,a=this._w,s=a*e._w+n*e._x+i*e._y+r*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;let o=1-s*s;if(o<=Number.EPSILON){let e=1-t;return this._w=e*a+t*this._w,this._x=e*n+t*this._x,this._y=e*i+t*this._y,this._z=e*r+t*this._z,this.normalize(),this}let l=Math.sqrt(o),h=Math.atan2(l,s),u=Math.sin((1-t)*h)/l,c=Math.sin(t*h)/l;return this._w=a*u+this._w*c,this._x=n*u+this._x*c,this._y=i*u+this._y*c,this._z=r*u+this._z*c,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){let e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class I{constructor(e=0,t=0,n=0){I.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(D.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(D.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){let t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,s=e.z,o=e.w,l=2*(a*i-s*n),h=2*(s*t-r*i),u=2*(r*n-a*t);return this.x=t+o*l+a*u-s*h,this.y=n+o*h+s*l-r*u,this.z=i+o*u+r*h-a*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=A(this.x,e.x,t.x),this.y=A(this.y,e.y,t.y),this.z=A(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=A(this.x,e,t),this.y=A(this.y,e,t),this.z=A(this.z,e,t),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(A(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){let n=e.x,i=e.y,r=e.z,a=t.x,s=t.y,o=t.z;return this.x=i*o-r*s,this.y=r*a-n*o,this.z=n*s-i*a,this}projectOnVector(e){let t=e.lengthSq();if(0===t)return this.set(0,0,0);let n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return N.copy(this).projectOnVector(e),this.sub(N)}reflect(e){return this.sub(N.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());return 0===t?Math.PI/2:Math.acos(A(this.dot(e)/t,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){let i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let e=Math.random()*Math.PI*2,t=2*Math.random()-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const N=new I,D=new L;class U{constructor(e,t,n,i,r,a,s,o,l){U.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==e&&this.set(e,t,n,i,r,a,s,o,l)}set(e,t,n,i,r,a,s,o,l){let h=this.elements;return h[0]=e,h[1]=i,h[2]=s,h[3]=t,h[4]=r,h[5]=o,h[6]=n,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let n=e.elements,i=t.elements,r=this.elements,a=n[0],s=n[3],o=n[6],l=n[1],h=n[4],u=n[7],c=n[2],d=n[5],p=n[8],f=i[0],m=i[3],g=i[6],v=i[1],_=i[4],y=i[7],x=i[2],b=i[5],M=i[8];return r[0]=a*f+s*v+o*x,r[3]=a*m+s*_+o*b,r[6]=a*g+s*y+o*M,r[1]=l*f+h*v+u*x,r[4]=l*m+h*_+u*b,r[7]=l*g+h*y+u*M,r[2]=c*f+d*v+p*x,r[5]=c*m+d*_+p*b,r[8]=c*g+d*y+p*M,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8];return t*a*h-t*s*l-n*r*h+n*s*o+i*r*l-i*a*o}invert(){let e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],u=h*a-s*l,c=s*o-h*r,d=l*r-a*o,p=t*u+n*c+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);let f=1/p;return e[0]=u*f,e[1]=(i*l-h*n)*f,e[2]=(s*n-i*a)*f,e[3]=c*f,e[4]=(h*t-i*o)*f,e[5]=(i*r-s*t)*f,e[6]=d*f,e[7]=(n*o-l*t)*f,e[8]=(a*t-n*r)*f,this}transpose(){let e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,s){let o=Math.cos(r),l=Math.sin(r);return this.set(n*o,n*l,-n*(o*a+l*s)+a+e,-i*l,i*o,-i*(-l*a+o*s)+s+t,0,0,1),this}scale(e,t){return this.premultiply(O.makeScale(e,t)),this}rotate(e){return this.premultiply(O.makeRotation(-e)),this}translate(e,t){return this.premultiply(O.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){let t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){let t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){let n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const O=new U;function F(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}function B(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const z={};function k(e){e in z||(z[e]=!0,console.warn(e))}const H=new U().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),V=new U().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715),G=function(){let e={enabled:!0,workingColorSpace:_,spaces:{},convert:function(e,t,n){return!1!==this.enabled&&t!==n&&t&&n&&(this.spaces[t].transfer===x&&(e.r=W(e.r),e.g=W(e.g),e.b=W(e.b)),this.spaces[t].primaries!==this.spaces[n].primaries&&(e.applyMatrix3(this.spaces[t].toXYZ),e.applyMatrix3(this.spaces[n].fromXYZ)),this.spaces[n].transfer===x&&(e.r=j(e.r),e.g=j(e.g),e.b=j(e.b))),e},workingToColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},colorSpaceToWorking:function(e,t){return this.convert(e,t,this.workingColorSpace)},getPrimaries:function(e){return this.spaces[e].primaries},getTransfer:function(e){return""===e?y:this.spaces[e].transfer},getLuminanceCoefficients:function(e,t=this.workingColorSpace){return e.fromArray(this.spaces[t].luminanceCoefficients)},define:function(e){Object.assign(this.spaces,e)},_getMatrix:function(e,t,n){return e.copy(this.spaces[t].toXYZ).multiply(this.spaces[n].fromXYZ)},_getDrawingBufferColorSpace:function(e){return this.spaces[e].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(e=this.workingColorSpace){return this.spaces[e].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(t,n){return k("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),e.workingToColorSpace(t,n)},toWorkingColorSpace:function(t,n){return k("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),e.colorSpaceToWorking(t,n)}},t=[.64,.33,.3,.6,.15,.06],n=[.2126,.7152,.0722],i=[.3127,.329];return e.define({[_]:{primaries:t,whitePoint:i,transfer:y,toXYZ:H,fromXYZ:V,luminanceCoefficients:n,workingColorSpaceConfig:{unpackColorSpace:v},outputColorSpaceConfig:{drawingBufferColorSpace:v}},[v]:{primaries:t,whitePoint:i,transfer:x,toXYZ:H,fromXYZ:V,luminanceCoefficients:n,outputColorSpaceConfig:{drawingBufferColorSpace:v}}}),e}();function W(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function j(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class X{static getDataURL(t,n="image/png"){let i;if(/^data:/i.test(t.src)||"undefined"==typeof HTMLCanvasElement)return t.src;if(t instanceof HTMLCanvasElement)i=t;else{void 0===e&&(e=B("canvas")),e.width=t.width,e.height=t.height;let n=e.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),i=e}return i.toDataURL(n)}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let t=B("canvas");t.width=e.width,t.height=e.height;let n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);let i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let e=0;e<r.length;e++)r[e]=255*W(r[e]/255);return n.putImageData(i,0,0),t}if(!e.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e;{let t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*W(t[e]/255)):t[e]=W(t[e]);return{data:t,width:e.width,height:e.height}}}}let q=0;class Y{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:q++}),this.uuid=w(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){let t=this.data;return t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight):null!==t?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){!0===e&&this.version++}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];let n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)i[t].isDataTexture?e.push(K(i[t].image)):e.push(K(i[t]))}else e=K(i);n.url=e}return t||(e.images[this.uuid]=n),n}}function K(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?X.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Z=0;const J=new I;class $ extends M{constructor(e=$.DEFAULT_IMAGE,t=$.DEFAULT_MAPPING,n=1001,i=1001,r=1006,a=1008,s=1023,o=1009,l=$.DEFAULT_ANISOTROPY,h=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Z++}),this.uuid=w(),this.name="",this.source=new Y(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new P(0,0),this.repeat=new P(1,1),this.center=new P(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new U,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!e&&!!e.depth&&e.depth>1,this.pmremVersion=0}get width(){return this.source.getSize(J).x}get height(){return this.source.getSize(J).y}get depth(){return this.source.getSize(J).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(let t in e){let n=e[t];if(void 0===n){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}let i=this[t];if(void 0===i){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[t]=n}}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];let n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){!0===e&&this.pmremVersion++}}$.DEFAULT_IMAGE=null,$.DEFAULT_MAPPING=300,$.DEFAULT_ANISOTROPY=1;class Q{constructor(e=0,t=0,n=0,i=1){Q.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r,a=e.elements,s=a[0],o=a[4],l=a[8],h=a[1],u=a[5],c=a[9],d=a[2],p=a[6],f=a[10];if(.01>Math.abs(o-h)&&.01>Math.abs(l-d)&&.01>Math.abs(c-p)){if(.1>Math.abs(o+h)&&.1>Math.abs(l+d)&&.1>Math.abs(c+p)&&.1>Math.abs(s+u+f-3))return this.set(1,0,0,0),this;t=Math.PI;let e=(s+1)/2,a=(u+1)/2,m=(f+1)/2,g=(o+h)/4,v=(l+d)/4,_=(c+p)/4;return e>a&&e>m?e<.01?(n=0,i=.707106781,r=.707106781):(i=g/(n=Math.sqrt(e)),r=v/n):a>m?a<.01?(n=.707106781,i=0,r=.707106781):(n=g/(i=Math.sqrt(a)),r=_/i):m<.01?(n=.707106781,i=.707106781,r=0):(n=v/(r=Math.sqrt(m)),i=_/r),this.set(n,i,r,t),this}let m=Math.sqrt((p-c)*(p-c)+(l-d)*(l-d)+(h-o)*(h-o));return .001>Math.abs(m)&&(m=1),this.x=(p-c)/m,this.y=(l-d)/m,this.z=(h-o)/m,this.w=Math.acos((s+u+f-1)/2),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=A(this.x,e.x,t.x),this.y=A(this.y,e.y,t.y),this.z=A(this.z,e.z,t.z),this.w=A(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=A(this.x,e,t),this.y=A(this.y,e,t),this.z=A(this.z,e,t),this.w=A(this.w,e,t),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(A(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class ee extends M{constructor(e=1,t=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:1006,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=n.depth,this.scissor=new Q(0,0,e,t),this.scissorTest=!1,this.viewport=new Q(0,0,e,t);let i=new $({width:e,height:t,depth:n.depth});this.textures=[];let r=n.count;for(let e=0;e<r;e++)this.textures[e]=i.clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(e={}){let t={minFilter:1006,generateMipmaps:!1,flipY:!1,internalFormat:null};void 0!==e.mapping&&(t.mapping=e.mapping),void 0!==e.wrapS&&(t.wrapS=e.wrapS),void 0!==e.wrapT&&(t.wrapT=e.wrapT),void 0!==e.wrapR&&(t.wrapR=e.wrapR),void 0!==e.magFilter&&(t.magFilter=e.magFilter),void 0!==e.minFilter&&(t.minFilter=e.minFilter),void 0!==e.format&&(t.format=e.format),void 0!==e.type&&(t.type=e.type),void 0!==e.anisotropy&&(t.anisotropy=e.anisotropy),void 0!==e.colorSpace&&(t.colorSpace=e.colorSpace),void 0!==e.flipY&&(t.flipY=e.flipY),void 0!==e.generateMipmaps&&(t.generateMipmaps=e.generateMipmaps),void 0!==e.internalFormat&&(t.internalFormat=e.internalFormat);for(let e=0;e<this.textures.length;e++)this.textures[e].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){null!==this._depthTexture&&(this._depthTexture.renderTarget=null),null!==e&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;let n=Object.assign({},e.textures[t].image);this.textures[t].source=new Y(n)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class et extends ee{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class en extends ${constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class ei{constructor(e=new I(1/0,1/0,1/0),t=new I(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(ea.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(ea.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let n=ea.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);let n=e.geometry;if(void 0!==n){let i=n.getAttribute("position");if(!0===t&&void 0!==i&&!0!==e.isInstancedMesh)for(let t=0,n=i.count;t<n;t++)!0===e.isMesh?e.getVertexPosition(t,ea):ea.fromBufferAttribute(i,t),ea.applyMatrix4(e.matrixWorld),this.expandByPoint(ea);else void 0!==e.boundingBox?(null===e.boundingBox&&e.computeBoundingBox(),es.copy(e.boundingBox)):(null===n.boundingBox&&n.computeBoundingBox(),es.copy(n.boundingBox)),es.applyMatrix4(e.matrixWorld),this.union(es)}let i=e.children;for(let e=0,n=i.length;e<n;e++)this.expandByObject(i[e],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,ea),ea.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ep),ef.subVectors(this.max,ep),eo.subVectors(e.a,ep),el.subVectors(e.b,ep),eh.subVectors(e.c,ep),eu.subVectors(el,eo),ec.subVectors(eh,el),ed.subVectors(eo,eh);let t=[0,-eu.z,eu.y,0,-ec.z,ec.y,0,-ed.z,ed.y,eu.z,0,-eu.x,ec.z,0,-ec.x,ed.z,0,-ed.x,-eu.y,eu.x,0,-ec.y,ec.x,0,-ed.y,ed.x,0];return!!ev(t,eo,el,eh,ef)&&!!ev(t=[1,0,0,0,1,0,0,0,1],eo,el,eh,ef)&&(em.crossVectors(eu,ec),ev(t=[em.x,em.y,em.z],eo,el,eh,ef))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,ea).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(ea).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(er[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),er[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),er[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),er[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),er[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),er[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),er[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),er[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(er)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const er=[new I,new I,new I,new I,new I,new I,new I,new I],ea=new I,es=new ei,eo=new I,el=new I,eh=new I,eu=new I,ec=new I,ed=new I,ep=new I,ef=new I,em=new I,eg=new I;function ev(e,t,n,i,r){for(let a=0,s=e.length-3;a<=s;a+=3){eg.fromArray(e,a);let s=r.x*Math.abs(eg.x)+r.y*Math.abs(eg.y)+r.z*Math.abs(eg.z),o=t.dot(eg),l=n.dot(eg),h=i.dot(eg);if(Math.max(-Math.max(o,l,h),Math.min(o,l,h))>s)return!1}return!0}const e_=new ei,ey=new I,ex=new I;class eb{constructor(e=new I,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let n=this.center;void 0!==t?n.copy(t):e_.setFromPoints(e).getCenter(n);let i=0;for(let t=0,r=e.length;t<r;t++)i=Math.max(i,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ey.subVectors(e,this.center);let t=ey.lengthSq();if(t>this.radius*this.radius){let e=Math.sqrt(t),n=(e-this.radius)*.5;this.center.addScaledVector(ey,n/e),this.radius+=n}return this}union(e){return e.isEmpty()||(this.isEmpty()?this.copy(e):!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(ex.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ey.copy(e.center).add(ex)),this.expandByPoint(ey.copy(e.center).sub(ex)))),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const eM=new I,eS=new I,eE=new I,eT=new I,ew=new I,eA=new I,eR=new I;class eC{constructor(e=new I,t=new I(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,eM)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=eM.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(eM.copy(this.origin).addScaledVector(this.direction,t),eM.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){let r,a,s,o;eS.copy(e).add(t).multiplyScalar(.5),eE.copy(t).sub(e).normalize(),eT.copy(this.origin).sub(eS);let l=.5*e.distanceTo(t),h=-this.direction.dot(eE),u=eT.dot(this.direction),c=-eT.dot(eE),d=eT.lengthSq(),p=Math.abs(1-h*h);if(p>0)if(r=h*c-u,a=h*u-c,o=l*p,r>=0)if(a>=-o)if(a<=o){let e=1/p;r*=e,a*=e,s=r*(r+h*a+2*u)+a*(h*r+a+2*c)+d}else s=-(r=Math.max(0,-(h*(a=l)+u)))*r+a*(a+2*c)+d;else s=-(r=Math.max(0,-(h*(a=-l)+u)))*r+a*(a+2*c)+d;else a<=-o?(a=(r=Math.max(0,-(-h*l+u)))>0?-l:Math.min(Math.max(-l,-c),l),s=-r*r+a*(a+2*c)+d):a<=o?(r=0,s=(a=Math.min(Math.max(-l,-c),l))*(a+2*c)+d):(a=(r=Math.max(0,-(h*l+u)))>0?l:Math.min(Math.max(-l,-c),l),s=-r*r+a*(a+2*c)+d);else a=h>0?-l:l,s=-(r=Math.max(0,-(h*a+u)))*r+a*(a+2*c)+d;return n&&n.copy(this.origin).addScaledVector(this.direction,r),i&&i.copy(eS).addScaledVector(eE,a),s}intersectSphere(e,t){eM.subVectors(e.center,this.origin);let n=eM.dot(this.direction),i=eM.dot(eM)-n*n,r=e.radius*e.radius;if(i>r)return null;let a=Math.sqrt(r-i),s=n-a,o=n+a;return o<0?null:s<0?this.at(o,t):this.at(s,t)}intersectsSphere(e){return!(e.radius<0)&&this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;let n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){let n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);return!!(0===t||e.normal.dot(this.direction)*t<0)}intersectBox(e,t){let n,i,r,a,s,o,l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,c=this.origin;return(l>=0?(n=(e.min.x-c.x)*l,i=(e.max.x-c.x)*l):(n=(e.max.x-c.x)*l,i=(e.min.x-c.x)*l),h>=0?(r=(e.min.y-c.y)*h,a=(e.max.y-c.y)*h):(r=(e.max.y-c.y)*h,a=(e.min.y-c.y)*h),n>a||r>i||((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),u>=0?(s=(e.min.z-c.z)*u,o=(e.max.z-c.z)*u):(s=(e.max.z-c.z)*u,o=(e.min.z-c.z)*u),n>o||s>i||((s>n||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),i<0)))?null:this.at(n>=0?n:i,t)}intersectsBox(e){return null!==this.intersectBox(e,eM)}intersectTriangle(e,t,n,i,r){let a;ew.subVectors(t,e),eA.subVectors(n,e),eR.crossVectors(ew,eA);let s=this.direction.dot(eR);if(s>0){if(i)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}eT.subVectors(this.origin,e);let o=a*this.direction.dot(eA.crossVectors(eT,eA));if(o<0)return null;let l=a*this.direction.dot(ew.cross(eT));if(l<0||o+l>s)return null;let h=-a*eT.dot(eR);return h<0?null:this.at(h/s,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class eP{constructor(e,t,n,i,r,a,s,o,l,h,u,c,d,p,f,m){eP.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==e&&this.set(e,t,n,i,r,a,s,o,l,h,u,c,d,p,f,m)}set(e,t,n,i,r,a,s,o,l,h,u,c,d,p,f,m){let g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=i,g[1]=r,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=h,g[10]=u,g[14]=c,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new eP().fromArray(this.elements)}copy(e){let t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){let t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,n=e.elements,i=1/eL.setFromMatrixColumn(e,0).length(),r=1/eL.setFromMatrixColumn(e,1).length(),a=1/eL.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){let t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(i),l=Math.sin(i),h=Math.cos(r),u=Math.sin(r);if("XYZ"===e.order){let e=a*h,n=a*u,i=s*h,r=s*u;t[0]=o*h,t[4]=-o*u,t[8]=l,t[1]=n+i*l,t[5]=e-r*l,t[9]=-s*o,t[2]=r-e*l,t[6]=i+n*l,t[10]=a*o}else if("YXZ"===e.order){let e=o*h,n=o*u,i=l*h,r=l*u;t[0]=e+r*s,t[4]=i*s-n,t[8]=a*l,t[1]=a*u,t[5]=a*h,t[9]=-s,t[2]=n*s-i,t[6]=r+e*s,t[10]=a*o}else if("ZXY"===e.order){let e=o*h,n=o*u,i=l*h,r=l*u;t[0]=e-r*s,t[4]=-a*u,t[8]=i+n*s,t[1]=n+i*s,t[5]=a*h,t[9]=r-e*s,t[2]=-a*l,t[6]=s,t[10]=a*o}else if("ZYX"===e.order){let e=a*h,n=a*u,i=s*h,r=s*u;t[0]=o*h,t[4]=i*l-n,t[8]=e*l+r,t[1]=o*u,t[5]=r*l+e,t[9]=n*l-i,t[2]=-l,t[6]=s*o,t[10]=a*o}else if("YZX"===e.order){let e=a*o,n=a*l,i=s*o,r=s*l;t[0]=o*h,t[4]=r-e*u,t[8]=i*u+n,t[1]=u,t[5]=a*h,t[9]=-s*h,t[2]=-l*h,t[6]=n*u+i,t[10]=e-r*u}else if("XZY"===e.order){let e=a*o,n=a*l,i=s*o,r=s*l;t[0]=o*h,t[4]=-u,t[8]=l*h,t[1]=e*u+r,t[5]=a*h,t[9]=n*u-i,t[2]=i*u-n,t[6]=s*h,t[10]=r*u+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(eN,e,eD)}lookAt(e,t,n){let i=this.elements;return eF.subVectors(e,t),0===eF.lengthSq()&&(eF.z=1),eF.normalize(),eU.crossVectors(n,eF),0===eU.lengthSq()&&(1===Math.abs(n.z)?eF.x+=1e-4:eF.z+=1e-4,eF.normalize(),eU.crossVectors(n,eF)),eU.normalize(),eO.crossVectors(eF,eU),i[0]=eU.x,i[4]=eO.x,i[8]=eF.x,i[1]=eU.y,i[5]=eO.y,i[9]=eF.y,i[2]=eU.z,i[6]=eO.z,i[10]=eF.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let n=e.elements,i=t.elements,r=this.elements,a=n[0],s=n[4],o=n[8],l=n[12],h=n[1],u=n[5],c=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],_=n[7],y=n[11],x=n[15],b=i[0],M=i[4],S=i[8],E=i[12],T=i[1],w=i[5],A=i[9],R=i[13],C=i[2],P=i[6],L=i[10],I=i[14],N=i[3],D=i[7],U=i[11],O=i[15];return r[0]=a*b+s*T+o*C+l*N,r[4]=a*M+s*w+o*P+l*D,r[8]=a*S+s*A+o*L+l*U,r[12]=a*E+s*R+o*I+l*O,r[1]=h*b+u*T+c*C+d*N,r[5]=h*M+u*w+c*P+d*D,r[9]=h*S+u*A+c*L+d*U,r[13]=h*E+u*R+c*I+d*O,r[2]=p*b+f*T+m*C+g*N,r[6]=p*M+f*w+m*P+g*D,r[10]=p*S+f*A+m*L+g*U,r[14]=p*E+f*R+m*I+g*O,r[3]=v*b+_*T+y*C+x*N,r[7]=v*M+_*w+y*P+x*D,r[11]=v*S+_*A+y*L+x*U,r[15]=v*E+_*R+y*I+x*O,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],s=e[5],o=e[9],l=e[13],h=e[2],u=e[6],c=e[10],d=e[14],p=e[3],f=e[7];return p*(r*o*u-i*l*u-r*s*c+n*l*c+i*s*d-n*o*d)+f*(t*o*d-t*l*c+r*a*c-i*a*d+i*l*h-r*o*h)+e[11]*(t*l*u-t*s*d-r*a*u+n*a*d+r*s*h-n*l*h)+e[15]*(-i*s*h-t*o*u+t*s*c+i*a*u-n*a*c+n*o*h)}transpose(){let e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(e,t,n){let i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){let e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],u=e[9],c=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],v=u*m*l-f*c*l+f*o*d-s*m*d-u*o*g+s*c*g,_=p*c*l-h*m*l-p*o*d+a*m*d+h*o*g-a*c*g,y=h*f*l-p*u*l+p*s*d-a*f*d-h*s*g+a*u*g,x=p*u*o-h*f*o-p*s*c+a*f*c+h*s*m-a*u*m,b=t*v+n*_+i*y+r*x;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let M=1/b;return e[0]=v*M,e[1]=(f*c*r-u*m*r-f*i*d+n*m*d+u*i*g-n*c*g)*M,e[2]=(s*m*r-f*o*r+f*i*l-n*m*l-s*i*g+n*o*g)*M,e[3]=(u*o*r-s*c*r-u*i*l+n*c*l+s*i*d-n*o*d)*M,e[4]=_*M,e[5]=(h*m*r-p*c*r+p*i*d-t*m*d-h*i*g+t*c*g)*M,e[6]=(p*o*r-a*m*r-p*i*l+t*m*l+a*i*g-t*o*g)*M,e[7]=(a*c*r-h*o*r+h*i*l-t*c*l-a*i*d+t*o*d)*M,e[8]=y*M,e[9]=(p*u*r-h*f*r-p*n*d+t*f*d+h*n*g-t*u*g)*M,e[10]=(a*f*r-p*s*r+p*n*l-t*f*l-a*n*g+t*s*g)*M,e[11]=(h*s*r-a*u*r-h*n*l+t*u*l+a*n*d-t*s*d)*M,e[12]=x*M,e[13]=(h*f*i-p*u*i+p*n*c-t*f*c-h*n*m+t*u*m)*M,e[14]=(p*s*i-a*f*i-p*n*o+t*f*o+a*n*m-t*s*m)*M,e[15]=(a*u*i-h*s*i+h*n*o-t*u*o-a*n*c+t*s*c)*M,this}scale(e){let t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){let e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];return Math.sqrt(Math.max(t,e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10]))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,s=e.y,o=e.z,l=r*a,h=r*s;return this.set(l*a+n,l*s-i*o,l*o+i*s,0,l*s+i*o,h*s+n,h*o-i*a,0,l*o-i*s,h*o+i*a,r*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){let i=this.elements,r=t._x,a=t._y,s=t._z,o=t._w,l=r+r,h=a+a,u=s+s,c=r*l,d=r*h,p=r*u,f=a*h,m=a*u,g=s*u,v=o*l,_=o*h,y=o*u,x=n.x,b=n.y,M=n.z;return i[0]=(1-(f+g))*x,i[1]=(d+y)*x,i[2]=(p-_)*x,i[3]=0,i[4]=(d-y)*b,i[5]=(1-(c+g))*b,i[6]=(m+v)*b,i[7]=0,i[8]=(p+_)*M,i[9]=(m-v)*M,i[10]=(1-(c+f))*M,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){let i=this.elements,r=eL.set(i[0],i[1],i[2]).length(),a=eL.set(i[4],i[5],i[6]).length(),s=eL.set(i[8],i[9],i[10]).length();0>this.determinant()&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],eI.copy(this);let o=1/r,l=1/a,h=1/s;return eI.elements[0]*=o,eI.elements[1]*=o,eI.elements[2]*=o,eI.elements[4]*=l,eI.elements[5]*=l,eI.elements[6]*=l,eI.elements[8]*=h,eI.elements[9]*=h,eI.elements[10]*=h,t.setFromRotationMatrix(eI),n.x=r,n.y=a,n.z=s,this}makePerspective(e,t,n,i,r,a,s=2e3){let o,l,h=this.elements;if(2e3===s)o=-(a+r)/(a-r),l=-2*a*r/(a-r);else if(2001===s)o=-a/(a-r),l=-a*r/(a-r);else throw Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+s);return h[0]=2*r/(t-e),h[4]=0,h[8]=(t+e)/(t-e),h[12]=0,h[1]=0,h[5]=2*r/(n-i),h[9]=(n+i)/(n-i),h[13]=0,h[2]=0,h[6]=0,h[10]=o,h[14]=l,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(e,t,n,i,r,a,s=2e3){let o,l,h=this.elements,u=1/(t-e),c=1/(n-i),d=1/(a-r);if(2e3===s)o=(a+r)*d,l=-2*d;else if(2001===s)o=r*d,l=-1*d;else throw Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+s);return h[0]=2*u,h[4]=0,h[8]=0,h[12]=-((t+e)*u),h[1]=0,h[5]=2*c,h[9]=0,h[13]=-((n+i)*c),h[2]=0,h[6]=0,h[10]=l,h[14]=-o,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(e){let t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){let n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const eL=new I,eI=new eP,eN=new I(0,0,0),eD=new I(1,1,1),eU=new I,eO=new I,eF=new I,eB=new eP,ez=new L;class ek{constructor(e=0,t=0,n=0,i=ek.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){let i=e.elements,r=i[0],a=i[4],s=i[8],o=i[1],l=i[5],h=i[9],u=i[2],c=i[6],d=i[10];switch(t){case"XYZ":this._y=Math.asin(A(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(c,l),this._z=0);break;case"YXZ":this._x=Math.asin(-A(h,-1,1)),.9999999>Math.abs(h)?(this._y=Math.atan2(s,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(A(c,-1,1)),.9999999>Math.abs(c)?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-A(u,-1,1)),.9999999>Math.abs(u)?(this._x=Math.atan2(c,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(A(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(s,d));break;case"XZY":this._z=Math.asin(-A(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(c,l),this._y=Math.atan2(s,r)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return eB.makeRotationFromQuaternion(e),this.setFromRotationMatrix(eB,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ez.setFromEuler(this),this.setFromQuaternion(ez,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ek.DEFAULT_ORDER="XYZ";class eH{constructor(){this.mask=1}set(e){this.mask=1<<e>>>0}enable(e){this.mask|=1<<e}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e}disable(e){this.mask&=~(1<<e)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}isEnabled(e){return(this.mask&1<<e)!=0}}let eV=0;const eG=new I,eW=new L,ej=new eP,eX=new I,eq=new I,eY=new I,eK=new L,eZ=new I(1,0,0),eJ=new I(0,1,0),e$=new I(0,0,1),eQ={type:"added"},e0={type:"removed"},e1={type:"childadded",child:null},e2={type:"childremoved",child:null};class e3 extends M{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:eV++}),this.uuid=w(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=e3.DEFAULT_UP.clone();let e=new I,t=new ek,n=new L,i=new I(1,1,1);t._onChange(function(){n.setFromEuler(t,!1)}),n._onChange(function(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new eP},normalMatrix:{value:new U}}),this.matrix=new eP,this.matrixWorld=new eP,this.matrixAutoUpdate=e3.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=e3.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new eH,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return eW.setFromAxisAngle(e,t),this.quaternion.multiply(eW),this}rotateOnWorldAxis(e,t){return eW.setFromAxisAngle(e,t),this.quaternion.premultiply(eW),this}rotateX(e){return this.rotateOnAxis(eZ,e)}rotateY(e){return this.rotateOnAxis(eJ,e)}rotateZ(e){return this.rotateOnAxis(e$,e)}translateOnAxis(e,t){return eG.copy(e).applyQuaternion(this.quaternion),this.position.add(eG.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(eZ,e)}translateY(e){return this.translateOnAxis(eJ,e)}translateZ(e){return this.translateOnAxis(e$,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(ej.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?eX.copy(e):eX.set(e,t,n);let i=this.parent;this.updateWorldMatrix(!0,!1),eq.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ej.lookAt(eq,eX,this.up):ej.lookAt(eX,eq,this.up),this.quaternion.setFromRotationMatrix(ej),i&&(ej.extractRotation(i.matrixWorld),eW.setFromRotationMatrix(ej),this.quaternion.premultiply(eW.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(eQ),e1.child=e,this.dispatchEvent(e1),e1.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}let t=this.children.indexOf(e);return -1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(e0),e2.child=e,this.dispatchEvent(e2),e2.child=null),this}removeFromParent(){let e=this.parent;return null!==e&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),ej.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),ej.multiply(e.parent.matrixWorld)),e.applyMatrix4(ej),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(eQ),e1.child=e,this.dispatchEvent(e1),e1.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){let i=this.children[n].getObjectByProperty(e,t);if(void 0!==i)return i}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);let i=this.children;for(let r=0,a=i.length;r<a;r++)i[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(eq,e,eY),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(eq,eK,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);let t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){let t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){let n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===t){let e=this.children;for(let t=0,n=e.length;t<n;t++)e[t].updateWorldMatrix(!1,!0)}}toJSON(e){let t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});let i={};function r(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(e=>({...e,boundingBox:e.boundingBox?e.boundingBox.toJSON():void 0,boundingSphere:e.boundingSphere?e.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(e=>({...e})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(e),i.indirectTexture=this._indirectTexture.toJSON(e),null!==this._colorsTexture&&(i.colorsTexture=this._colorsTexture.toJSON(e)),null!==this.boundingSphere&&(i.boundingSphere=this.boundingSphere.toJSON()),null!==this.boundingBox&&(i.boundingBox=this.boundingBox.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);let t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){let n=t.shapes;if(Array.isArray(n))for(let t=0,i=n.length;t<i;t++){let i=n[t];r(e.shapes,i)}else r(e.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){let t=[];for(let n=0,i=this.material.length;n<i;n++)t.push(r(e.materials,this.material[n]));i.material=t}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let t=0;t<this.children.length;t++)i.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let t=0;t<this.animations.length;t++){let n=this.animations[t];i.animations.push(r(e.animations,n))}}if(t){let t=a(e.geometries),i=a(e.materials),r=a(e.textures),s=a(e.images),o=a(e.shapes),l=a(e.skeletons),h=a(e.animations),u=a(e.nodes);t.length>0&&(n.geometries=t),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),s.length>0&&(n.images=s),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),h.length>0&&(n.animations=h),u.length>0&&(n.nodes=u)}return n.object=i,n;function a(e){let t=[];for(let n in e){let i=e[n];delete i.metadata,t.push(i)}return t}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){let n=e.children[t];this.add(n.clone())}return this}}e3.DEFAULT_UP=new I(0,1,0),e3.DEFAULT_MATRIX_AUTO_UPDATE=!0,e3.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const e4=new I,e5=new I,e6=new I,e8=new I,e9=new I,e7=new I,te=new I,tt=new I,tn=new I,ti=new I,tr=new Q,ta=new Q,ts=new Q;class to{constructor(e=new I,t=new I,n=new I){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),e4.subVectors(e,t),i.cross(e4);let r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){e4.subVectors(i,t),e5.subVectors(n,t),e6.subVectors(e,t);let a=e4.dot(e4),s=e4.dot(e5),o=e4.dot(e6),l=e5.dot(e5),h=e5.dot(e6),u=a*l-s*s;if(0===u)return r.set(0,0,0),null;let c=1/u,d=(l*o-s*h)*c,p=(a*h-s*o)*c;return r.set(1-d-p,p,d)}static containsPoint(e,t,n,i){return null!==this.getBarycoord(e,t,n,i,e8)&&e8.x>=0&&e8.y>=0&&e8.x+e8.y<=1}static getInterpolation(e,t,n,i,r,a,s,o){return null===this.getBarycoord(e,t,n,i,e8)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(r,e8.x),o.addScaledVector(a,e8.y),o.addScaledVector(s,e8.z),o)}static getInterpolatedAttribute(e,t,n,i,r,a){return tr.setScalar(0),ta.setScalar(0),ts.setScalar(0),tr.fromBufferAttribute(e,t),ta.fromBufferAttribute(e,n),ts.fromBufferAttribute(e,i),a.setScalar(0),a.addScaledVector(tr,r.x),a.addScaledVector(ta,r.y),a.addScaledVector(ts,r.z),a}static isFrontFacing(e,t,n,i){return e4.subVectors(n,t),e5.subVectors(e,t),0>e4.cross(e5).dot(i)}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return e4.subVectors(this.c,this.b),e5.subVectors(this.a,this.b),.5*e4.cross(e5).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return to.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return to.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,r){return to.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return to.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return to.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let n,i,r=this.a,a=this.b,s=this.c;e9.subVectors(a,r),e7.subVectors(s,r),tt.subVectors(e,r);let o=e9.dot(tt),l=e7.dot(tt);if(o<=0&&l<=0)return t.copy(r);tn.subVectors(e,a);let h=e9.dot(tn),u=e7.dot(tn);if(h>=0&&u<=h)return t.copy(a);let c=o*u-h*l;if(c<=0&&o>=0&&h<=0)return n=o/(o-h),t.copy(r).addScaledVector(e9,n);ti.subVectors(e,s);let d=e9.dot(ti),p=e7.dot(ti);if(p>=0&&d<=p)return t.copy(s);let f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return i=l/(l-p),t.copy(r).addScaledVector(e7,i);let m=h*p-d*u;if(m<=0&&u-h>=0&&d-p>=0)return te.subVectors(s,a),i=(u-h)/(u-h+(d-p)),t.copy(a).addScaledVector(te,i);let g=1/(m+f+c);return n=f*g,i=c*g,t.copy(r).addScaledVector(e9,n).addScaledVector(e7,i)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const tl={aliceblue:0xf0f8ff,antiquewhite:0xfaebd7,aqua:65535,aquamarine:8388564,azure:0xf0ffff,beige:0xf5f5dc,bisque:0xffe4c4,black:0,blanchedalmond:0xffebcd,blue:255,blueviolet:9055202,brown:0xa52a2a,burlywood:0xdeb887,cadetblue:6266528,chartreuse:8388352,chocolate:0xd2691e,coral:0xff7f50,cornflowerblue:6591981,cornsilk:0xfff8dc,crimson:0xdc143c,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:0xb8860b,darkgray:0xa9a9a9,darkgreen:25600,darkgrey:0xa9a9a9,darkkhaki:0xbdb76b,darkmagenta:9109643,darkolivegreen:5597999,darkorange:0xff8c00,darkorchid:0x9932cc,darkred:9109504,darksalmon:0xe9967a,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:0xff1493,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:0xb22222,floralwhite:0xfffaf0,forestgreen:2263842,fuchsia:0xff00ff,gainsboro:0xdcdcdc,ghostwhite:0xf8f8ff,gold:0xffd700,goldenrod:0xdaa520,gray:8421504,green:32768,greenyellow:0xadff2f,grey:8421504,honeydew:0xf0fff0,hotpink:0xff69b4,indianred:0xcd5c5c,indigo:4915330,ivory:0xfffff0,khaki:0xf0e68c,lavender:0xe6e6fa,lavenderblush:0xfff0f5,lawngreen:8190976,lemonchiffon:0xfffacd,lightblue:0xadd8e6,lightcoral:0xf08080,lightcyan:0xe0ffff,lightgoldenrodyellow:0xfafad2,lightgray:0xd3d3d3,lightgreen:9498256,lightgrey:0xd3d3d3,lightpink:0xffb6c1,lightsalmon:0xffa07a,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:0xb0c4de,lightyellow:0xffffe0,lime:65280,limegreen:3329330,linen:0xfaf0e6,magenta:0xff00ff,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:0xba55d3,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:0xc71585,midnightblue:1644912,mintcream:0xf5fffa,mistyrose:0xffe4e1,moccasin:0xffe4b5,navajowhite:0xffdead,navy:128,oldlace:0xfdf5e6,olive:8421376,olivedrab:7048739,orange:0xffa500,orangered:0xff4500,orchid:0xda70d6,palegoldenrod:0xeee8aa,palegreen:0x98fb98,paleturquoise:0xafeeee,palevioletred:0xdb7093,papayawhip:0xffefd5,peachpuff:0xffdab9,peru:0xcd853f,pink:0xffc0cb,plum:0xdda0dd,powderblue:0xb0e0e6,purple:8388736,rebeccapurple:6697881,red:0xff0000,rosybrown:0xbc8f8f,royalblue:4286945,saddlebrown:9127187,salmon:0xfa8072,sandybrown:0xf4a460,seagreen:3050327,seashell:0xfff5ee,sienna:0xa0522d,silver:0xc0c0c0,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:0xfffafa,springgreen:65407,steelblue:4620980,tan:0xd2b48c,teal:32896,thistle:0xd8bfd8,tomato:0xff6347,turquoise:4251856,violet:0xee82ee,wheat:0xf5deb3,white:0xffffff,whitesmoke:0xf5f5f5,yellow:0xffff00,yellowgreen:0x9acd32},th={h:0,s:0,l:0},tu={h:0,s:0,l:0};function tc(e,t,n){return(n<0&&(n+=1),n>1&&(n-=1),n<1/6)?e+(t-e)*6*n:n<.5?t:n<2/3?e+(t-e)*6*(2/3-n):e}class td{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){return void 0===t&&void 0===n?e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e):this.setRGB(e,t,n),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=v){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,G.colorSpaceToWorking(this,t),this}setRGB(e,t,n,i=G.workingColorSpace){return this.r=e,this.g=t,this.b=n,G.colorSpaceToWorking(this,i),this}setHSL(e,t,n,i=G.workingColorSpace){var r;if(e=(e%1+(r=1))%r,t=A(t,0,1),n=A(n,0,1),0===t)this.r=this.g=this.b=n;else{let i=n<=.5?n*(1+t):n+t-n*t,r=2*n-i;this.r=tc(r,i,e+1/3),this.g=tc(r,i,e),this.b=tc(r,i,e-1/3)}return G.colorSpaceToWorking(this,i),this}setStyle(e,t=v){let n;function i(t){void 0!==t&&1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let r,a=n[1],s=n[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return i(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return i(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return i(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){let i=n[1],r=i.length;if(3===r)return this.setRGB(parseInt(i.charAt(0),16)/15,parseInt(i.charAt(1),16)/15,parseInt(i.charAt(2),16)/15,t);if(6===r)return this.setHex(parseInt(i,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=v){let n=tl[e.toLowerCase()];return void 0!==n?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=W(e.r),this.g=W(e.g),this.b=W(e.b),this}copyLinearToSRGB(e){return this.r=j(e.r),this.g=j(e.g),this.b=j(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=v){return G.workingToColorSpace(tp.copy(this),e),65536*Math.round(A(255*tp.r,0,255))+256*Math.round(A(255*tp.g,0,255))+Math.round(A(255*tp.b,0,255))}getHexString(e=v){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=G.workingColorSpace){let n,i;G.workingToColorSpace(tp.copy(this),t);let r=tp.r,a=tp.g,s=tp.b,o=Math.max(r,a,s),l=Math.min(r,a,s),h=(l+o)/2;if(l===o)n=0,i=0;else{let e=o-l;switch(i=h<=.5?e/(o+l):e/(2-o-l),o){case r:n=(a-s)/e+6*(a<s);break;case a:n=(s-r)/e+2;break;case s:n=(r-a)/e+4}n/=6}return e.h=n,e.s=i,e.l=h,e}getRGB(e,t=G.workingColorSpace){return G.workingToColorSpace(tp.copy(this),t),e.r=tp.r,e.g=tp.g,e.b=tp.b,e}getStyle(e=v){G.workingToColorSpace(tp.copy(this),e);let t=tp.r,n=tp.g,i=tp.b;return e!==v?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*n)},${Math.round(255*i)})`}offsetHSL(e,t,n){return this.getHSL(th),this.setHSL(th.h+e,th.s+t,th.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){var n,i,r,a,s,o,l,h,u;this.getHSL(th),e.getHSL(tu);let c=(n=th.h,i=tu.h,(1-(r=t))*n+r*i),d=(a=th.s,s=tu.s,(1-(o=t))*a+o*s),p=(l=th.l,h=tu.l,(1-(u=t))*l+u*h);return this.setHSL(c,d,p),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){let t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const tp=new td;td.NAMES=tl;let tf=0;class tm extends M{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:tf++}),this.uuid=w(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new td(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(let t in e){let n=e[t];if(void 0===n){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}let i=this[t];if(void 0===i){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){let t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});let n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};function i(e){let t=[];for(let n in e){let i=e[n];delete i.metadata,t.push(i)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),void 0!==this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.dispersion&&(n.dispersion=this.dispersion),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapRotation&&(n.envMapRotation=this.envMapRotation.toArray()),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),!0===this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=!0),204!==this.blendSrc&&(n.blendSrc=this.blendSrc),205!==this.blendDst&&(n.blendDst=this.blendDst),100!==this.blendEquation&&(n.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(n.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(n.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(n.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(n.depthFunc=this.depthFunc),!1===this.depthTest&&(n.depthTest=this.depthTest),!1===this.depthWrite&&(n.depthWrite=this.depthWrite),!1===this.colorWrite&&(n.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(n.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(n.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(n.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(n.stencilFuncMask=this.stencilFuncMask),7680!==this.stencilFail&&(n.stencilFail=this.stencilFail),7680!==this.stencilZFail&&(n.stencilZFail=this.stencilZFail),7680!==this.stencilZPass&&(n.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(n.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaHash&&(n.alphaHash=!0),!0===this.alphaToCoverage&&(n.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=!0),!0===this.forceSinglePass&&(n.forceSinglePass=!0),!0===this.wireframe&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),t){let t=i(e.textures),r=i(e.images);t.length>0&&(n.textures=t),r.length>0&&(n.images=r)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,n=null;if(null!==t){let e=t.length;n=Array(e);for(let i=0;i!==e;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class tg extends tm{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new td(0xffffff),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ek,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const tv=new I,t_=new P;let ty=0;class tx{constructor(e,t,n=!1){if(Array.isArray(e))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:ty++}),this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=n,this.usage=35044,this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)t_.fromBufferAttribute(this,t),t_.applyMatrix3(e),this.setXY(t,t_.x,t_.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)tv.fromBufferAttribute(this,t),tv.applyMatrix3(e),this.setXYZ(t,tv.x,tv.y,tv.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)tv.fromBufferAttribute(this,t),tv.applyMatrix4(e),this.setXYZ(t,tv.x,tv.y,tv.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)tv.fromBufferAttribute(this,t),tv.applyNormalMatrix(e),this.setXYZ(t,tv.x,tv.y,tv.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)tv.fromBufferAttribute(this,t),tv.transformDirection(e),this.setXYZ(t,tv.x,tv.y,tv.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=R(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=C(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=R(t,this.array)),t}setX(e,t){return this.normalized&&(t=C(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=R(t,this.array)),t}setY(e,t){return this.normalized&&(t=C(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=R(t,this.array)),t}setZ(e,t){return this.normalized&&(t=C(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=R(t,this.array)),t}setW(e,t){return this.normalized&&(t=C(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=C(t,this.array),n=C(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=C(t,this.array),n=C(n,this.array),i=C(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=C(t,this.array),n=C(n,this.array),i=C(i,this.array),r=C(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),e}}class tb extends tx{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class tM extends tx{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class tS extends tx{constructor(e,t,n){super(new Float32Array(e),t,n)}}let tE=0;const tT=new eP,tw=new e3,tA=new I,tR=new ei,tC=new ei,tP=new I;class tL extends M{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:tE++}),this.uuid=w(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(F(e)?tM:tb)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);let n=this.attributes.normal;if(void 0!==n){let t=new U().getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}let i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return tT.makeRotationFromQuaternion(e),this.applyMatrix4(tT),this}rotateX(e){return tT.makeRotationX(e),this.applyMatrix4(tT),this}rotateY(e){return tT.makeRotationY(e),this.applyMatrix4(tT),this}rotateZ(e){return tT.makeRotationZ(e),this.applyMatrix4(tT),this}translate(e,t,n){return tT.makeTranslation(e,t,n),this.applyMatrix4(tT),this}scale(e,t,n){return tT.makeScale(e,t,n),this.applyMatrix4(tT),this}lookAt(e){return tw.lookAt(e),tw.updateMatrix(),this.applyMatrix4(tw.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(tA).negate(),this.translate(tA.x,tA.y,tA.z),this}setFromPoints(e){let t=this.getAttribute("position");if(void 0===t){let t=[];for(let n=0,i=e.length;n<i;n++){let i=e[n];t.push(i.x,i.y,i.z||0)}this.setAttribute("position",new tS(t,3))}else{let n=Math.min(e.length,t.count);for(let i=0;i<n;i++){let n=e[i];t.setXYZ(i,n.x,n.y,n.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new ei);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new I(-1/0,-1/0,-1/0),new I(1/0,1/0,1/0));return}if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){let n=t[e];tR.setFromBufferAttribute(n),this.morphTargetsRelative?(tP.addVectors(this.boundingBox.min,tR.min),this.boundingBox.expandByPoint(tP),tP.addVectors(this.boundingBox.max,tR.max),this.boundingBox.expandByPoint(tP)):(this.boundingBox.expandByPoint(tR.min),this.boundingBox.expandByPoint(tR.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new eb);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new I,1/0);return}if(e){let n=this.boundingSphere.center;if(tR.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){let n=t[e];tC.setFromBufferAttribute(n),this.morphTargetsRelative?(tP.addVectors(tR.min,tC.min),tR.expandByPoint(tP),tP.addVectors(tR.max,tC.max),tR.expandByPoint(tP)):(tR.expandByPoint(tC.min),tR.expandByPoint(tC.max))}tR.getCenter(n);let i=0;for(let t=0,r=e.count;t<r;t++)tP.fromBufferAttribute(e,t),i=Math.max(i,n.distanceToSquared(tP));if(t)for(let r=0,a=t.length;r<a;r++){let a=t[r],s=this.morphTargetsRelative;for(let t=0,r=a.count;t<r;t++)tP.fromBufferAttribute(a,t),s&&(tA.fromBufferAttribute(e,t),tP.add(tA)),i=Math.max(i,n.distanceToSquared(tP))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");let n=t.position,i=t.normal,r=t.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new tx(new Float32Array(4*n.count),4));let a=this.getAttribute("tangent"),s=[],o=[];for(let e=0;e<n.count;e++)s[e]=new I,o[e]=new I;let l=new I,h=new I,u=new I,c=new P,d=new P,p=new P,f=new I,m=new I,g=this.groups;0===g.length&&(g=[{start:0,count:e.count}]);for(let t=0,i=g.length;t<i;++t){let i=g[t],a=i.start,v=i.count;for(let t=a,i=a+v;t<i;t+=3)!function(e,t,i){l.fromBufferAttribute(n,e),h.fromBufferAttribute(n,t),u.fromBufferAttribute(n,i),c.fromBufferAttribute(r,e),d.fromBufferAttribute(r,t),p.fromBufferAttribute(r,i),h.sub(l),u.sub(l),d.sub(c),p.sub(c);let a=1/(d.x*p.y-p.x*d.y);isFinite(a)&&(f.copy(h).multiplyScalar(p.y).addScaledVector(u,-d.y).multiplyScalar(a),m.copy(u).multiplyScalar(d.x).addScaledVector(h,-p.x).multiplyScalar(a),s[e].add(f),s[t].add(f),s[i].add(f),o[e].add(m),o[t].add(m),o[i].add(m))}(e.getX(t+0),e.getX(t+1),e.getX(t+2))}let v=new I,_=new I,y=new I,x=new I;function b(e){y.fromBufferAttribute(i,e),x.copy(y);let t=s[e];v.copy(t),v.sub(y.multiplyScalar(y.dot(t))).normalize(),_.crossVectors(x,t);let n=_.dot(o[e]);a.setXYZW(e,v.x,v.y,v.z,n<0?-1:1)}for(let t=0,n=g.length;t<n;++t){let n=g[t],i=n.start,r=n.count;for(let t=i,n=i+r;t<n;t+=3)b(e.getX(t+0)),b(e.getX(t+1)),b(e.getX(t+2))}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new tx(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);let i=new I,r=new I,a=new I,s=new I,o=new I,l=new I,h=new I,u=new I;if(e)for(let c=0,d=e.count;c<d;c+=3){let d=e.getX(c+0),p=e.getX(c+1),f=e.getX(c+2);i.fromBufferAttribute(t,d),r.fromBufferAttribute(t,p),a.fromBufferAttribute(t,f),h.subVectors(a,r),u.subVectors(i,r),h.cross(u),s.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,f),s.add(h),o.add(h),l.add(h),n.setXYZ(d,s.x,s.y,s.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let e=0,s=t.count;e<s;e+=3)i.fromBufferAttribute(t,e+0),r.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),h.subVectors(a,r),u.subVectors(i,r),h.cross(u),n.setXYZ(e+0,h.x,h.y,h.z),n.setXYZ(e+1,h.x,h.y,h.z),n.setXYZ(e+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){let e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)tP.fromBufferAttribute(e,t),tP.normalize(),e.setXYZ(t,tP.x,tP.y,tP.z)}toNonIndexed(){function e(e,t){let n=e.array,i=e.itemSize,r=e.normalized,a=new n.constructor(t.length*i),s=0,o=0;for(let r=0,l=t.length;r<l;r++){s=e.isInterleavedBufferAttribute?t[r]*e.data.stride+e.offset:t[r]*i;for(let e=0;e<i;e++)a[o++]=n[s++]}return new tx(a,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new tL,n=this.index.array,i=this.attributes;for(let r in i){let a=e(i[r],n);t.setAttribute(r,a)}let r=this.morphAttributes;for(let i in r){let a=[],s=r[i];for(let t=0,i=s.length;t<i;t++){let i=e(s[t],n);a.push(i)}t.morphAttributes[i]=a}t.morphTargetsRelative=this.morphTargetsRelative;let a=this.groups;for(let e=0,n=a.length;e<n;e++){let n=a[e];t.addGroup(n.start,n.count,n.materialIndex)}return t}toJSON(){let e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){let t=this.parameters;for(let n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};let t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});let n=this.attributes;for(let t in n){let i=n[t];e.data.attributes[t]=i.toJSON(e.data)}let i={},r=!1;for(let t in this.morphAttributes){let n=this.morphAttributes[t],a=[];for(let t=0,i=n.length;t<i;t++){let i=n[t];a.push(i.toJSON(e.data))}a.length>0&&(i[t]=a,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);let a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));let s=this.boundingSphere;return null!==s&&(e.data.boundingSphere=s.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let n=e.index;null!==n&&this.setIndex(n.clone());let i=e.attributes;for(let e in i){let n=i[e];this.setAttribute(e,n.clone(t))}let r=e.morphAttributes;for(let e in r){let n=[],i=r[e];for(let e=0,r=i.length;e<r;e++)n.push(i[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;let a=e.groups;for(let e=0,t=a.length;e<t;e++){let t=a[e];this.addGroup(t.start,t.count,t.materialIndex)}let s=e.boundingBox;null!==s&&(this.boundingBox=s.clone());let o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const tI=new eP,tN=new eC,tD=new eb,tU=new I,tO=new I,tF=new I,tB=new I,tz=new I,tk=new I,tH=new I,tV=new I;class tG extends e3{constructor(e=new tL,t=new tg){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){let n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){let t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}getVertexPosition(e,t){let n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);let s=this.morphTargetInfluences;if(r&&s){tk.set(0,0,0);for(let n=0,i=r.length;n<i;n++){let i=s[n],o=r[n];0!==i&&(tz.fromBufferAttribute(o,e),a?tk.addScaledVector(tz,i):tk.addScaledVector(tz.sub(t),i))}t.add(tk)}return t}raycast(e,t){let n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0!==i)null===n.boundingSphere&&n.computeBoundingSphere(),tD.copy(n.boundingSphere),tD.applyMatrix4(r),tN.copy(e.ray).recast(e.near),!1===tD.containsPoint(tN.origin)&&(null===tN.intersectSphere(tD,tU)||tN.origin.distanceToSquared(tU)>(e.far-e.near)**2)||(tI.copy(r).invert(),tN.copy(e.ray).applyMatrix4(tI),(null===n.boundingBox||!1!==tN.intersectsBox(n.boundingBox))&&this._computeIntersections(e,t,tN))}_computeIntersections(e,t,n){let i,r=this.geometry,a=this.material,s=r.index,o=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,c=r.groups,d=r.drawRange;if(null!==s)if(Array.isArray(a))for(let r=0,o=c.length;r<o;r++){let o=c[r],p=a[o.materialIndex],f=Math.max(o.start,d.start),m=Math.min(s.count,Math.min(o.start+o.count,d.start+d.count));for(let r=f;r<m;r+=3){let a=s.getX(r);(i=tW(this,p,e,n,l,h,u,a,s.getX(r+1),s.getX(r+2)))&&(i.faceIndex=Math.floor(r/3),i.face.materialIndex=o.materialIndex,t.push(i))}}else{let r=Math.max(0,d.start),o=Math.min(s.count,d.start+d.count);for(let c=r;c<o;c+=3){let r=s.getX(c);(i=tW(this,a,e,n,l,h,u,r,s.getX(c+1),s.getX(c+2)))&&(i.faceIndex=Math.floor(c/3),t.push(i))}}else if(void 0!==o)if(Array.isArray(a))for(let r=0,s=c.length;r<s;r++){let s=c[r],p=a[s.materialIndex],f=Math.max(s.start,d.start),m=Math.min(o.count,Math.min(s.start+s.count,d.start+d.count));for(let r=f;r<m;r+=3)(i=tW(this,p,e,n,l,h,u,r,r+1,r+2))&&(i.faceIndex=Math.floor(r/3),i.face.materialIndex=s.materialIndex,t.push(i))}else{let r=Math.max(0,d.start),s=Math.min(o.count,d.start+d.count);for(let o=r;o<s;o+=3)(i=tW(this,a,e,n,l,h,u,o,o+1,o+2))&&(i.faceIndex=Math.floor(o/3),t.push(i))}}}function tW(e,t,n,i,r,a,s,o,l,h){e.getVertexPosition(o,tO),e.getVertexPosition(l,tF),e.getVertexPosition(h,tB);let u=function(e,t,n,i,r,a,s,o){if(null===(1===t.side?i.intersectTriangle(s,a,r,!0,o):i.intersectTriangle(r,a,s,0===t.side,o)))return null;tV.copy(o),tV.applyMatrix4(e.matrixWorld);let l=n.ray.origin.distanceTo(tV);return l<n.near||l>n.far?null:{distance:l,point:tV.clone(),object:e}}(e,t,n,i,tO,tF,tB,tH);if(u){let e=new I;to.getBarycoord(tH,tO,tF,tB,e),r&&(u.uv=to.getInterpolatedAttribute(r,o,l,h,e,new P)),a&&(u.uv1=to.getInterpolatedAttribute(a,o,l,h,e,new P)),s&&(u.normal=to.getInterpolatedAttribute(s,o,l,h,e,new I),u.normal.dot(i.direction)>0&&u.normal.multiplyScalar(-1));let t={a:o,b:l,c:h,normal:new I,materialIndex:0};to.getNormal(tO,tF,tB,t.normal),u.face=t,u.barycoord=e}return u}class tj extends tL{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};let s=this;i=Math.floor(i),r=Math.floor(r);let o=[],l=[],h=[],u=[],c=0,d=0;function p(e,t,n,i,r,a,p,f,m,g,v){let _=a/m,y=p/g,x=a/2,b=p/2,M=f/2,S=m+1,E=g+1,T=0,w=0,A=new I;for(let a=0;a<E;a++){let s=a*y-b;for(let o=0;o<S;o++){let c=o*_-x;A[e]=c*i,A[t]=s*r,A[n]=M,l.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[n]=f>0?1:-1,h.push(A.x,A.y,A.z),u.push(o/m),u.push(1-a/g),T+=1}}for(let e=0;e<g;e++)for(let t=0;t<m;t++){let n=c+t+S*e,i=c+t+S*(e+1),r=c+(t+1)+S*(e+1),a=c+(t+1)+S*e;o.push(n,i,a),o.push(i,r,a),w+=6}s.addGroup(d,w,v),d+=w,c+=T}p("z","y","x",-1,-1,n,t,e,a=Math.floor(a),r,0),p("z","y","x",1,-1,n,t,-e,a,r,1),p("x","z","y",1,1,e,n,t,i,a,2),p("x","z","y",1,-1,e,n,-t,i,a,3),p("x","y","z",1,-1,e,t,n,i,r,4),p("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(o),this.setAttribute("position",new tS(l,3)),this.setAttribute("normal",new tS(h,3)),this.setAttribute("uv",new tS(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new tj(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function tX(e){let t={};for(let n in e)for(let i in t[n]={},e[n]){let r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[n][i]=null):t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}return t}function tq(e){let t={};for(let n=0;n<e.length;n++){let i=tX(e[n]);for(let e in i)t[e]=i[e]}return t}function tY(e){let t=e.getRenderTarget();return null===t?e.outputColorSpace:!0===t.isXRRenderTarget?t.texture.colorSpace:G.workingColorSpace}class tK extends tm{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=tX(e.uniforms),this.uniformsGroups=function(e){let t=[];for(let n=0;n<e.length;n++)t.push(e[n].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);for(let n in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){let i=this.uniforms[n].value;i&&i.isTexture?t.uniforms[n]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[n]={type:"m4",value:i.toArray()}:t.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;let n={};for(let e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class tZ extends e3{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new eP,this.projectionMatrix=new eP,this.projectionMatrixInverse=new eP,this.coordinateSystem=2e3}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const tJ=new I,t$=new P,tQ=new P;class t0 extends tZ{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=2*T*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(.5*E*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*T*Math.atan(Math.tan(.5*E*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){tJ.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(tJ.x,tJ.y).multiplyScalar(-e/tJ.z),tJ.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(tJ.x,tJ.y).multiplyScalar(-e/tJ.z)}getViewSize(e,t){return this.getViewBounds(e,t$,tQ),t.subVectors(tQ,t$)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(.5*E*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i,a=this.view;if(null!==this.view&&this.view.enabled){let e=a.fullWidth,s=a.fullHeight;r+=a.offsetX*i/e,t-=a.offsetY*n/s,i*=a.width/e,n*=a.height/s}let s=this.filmOffset;0!==s&&(r+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}class t1 extends e3{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;let i=new t0(-90,1,e,t);i.layers=this.layers,this.add(i);let r=new t0(-90,1,e,t);r.layers=this.layers,this.add(r);let a=new t0(-90,1,e,t);a.layers=this.layers,this.add(a);let s=new t0(-90,1,e,t);s.layers=this.layers,this.add(s);let o=new t0(-90,1,e,t);o.layers=this.layers,this.add(o);let l=new t0(-90,1,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){let e=this.coordinateSystem,t=this.children.concat(),[n,i,r,a,s,o]=t;for(let e of t)this.remove(e);if(2e3===e)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),s.up.set(0,1,0),s.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else if(2001===e)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),s.up.set(0,-1,0),s.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1);else throw Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(let e of t)this.add(e),e.updateMatrixWorld()}update(e,t){null===this.parent&&this.updateMatrixWorld();let{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());let[r,a,s,o,l,h]=this.children,u=e.getRenderTarget(),c=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;let f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,r),e.setRenderTarget(n,1,i),e.render(t,a),e.setRenderTarget(n,2,i),e.render(t,s),e.setRenderTarget(n,3,i),e.render(t,o),e.setRenderTarget(n,4,i),e.render(t,l),n.texture.generateMipmaps=f,e.setRenderTarget(n,5,i),e.render(t,h),e.setRenderTarget(u,c,d),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class t2 extends ${constructor(e=[],t=301,n,i,r,a,s,o,l,h){super(e,t,n,i,r,a,s,o,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class t3 extends et{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;let n={width:e,height:e,depth:1};this.texture=new t2([n,n,n,n,n,n]),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new tj(5,5,5),r=new tK({name:"CubemapFromEquirect",uniforms:tX(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=t;let a=new tG(i,r),s=t.minFilter;return 1008===t.minFilter&&(t.minFilter=1006),new t1(1,10,this).update(e,a),t.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(e,t=!0,n=!0,i=!0){let r=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,i);e.setRenderTarget(r)}}class t4 extends e3{constructor(){super(),this.isGroup=!0,this.type="Group"}}const t5={type:"move"};class t6{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new t4,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new t4,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new I,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new I),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new t4,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new I,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new I),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){let t=this._hand;if(t)for(let n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null,s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){for(let i of(a=!0,e.hand.values())){let e=t.getJointPose(i,n),r=this._getHandJoint(l,i);null!==e&&(r.matrix.fromArray(e.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.matrixWorldNeedsUpdate=!0,r.jointRadius=e.radius),r.visible=null!==e}let i=l.joints["index-finger-tip"],r=l.joints["thumb-tip"],s=i.position.distanceTo(r.position);l.inputState.pinching&&s>.025?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&s<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&null!==(r=t.getPose(e.gripSpace,n))&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1);null!==s&&(null===(i=t.getPose(e.targetRaySpace,n))&&null!==r&&(i=r),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.matrixWorldNeedsUpdate=!0,i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(t5)))}return null!==s&&(s.visible=null!==i),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==a),this}_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){let n=new t4;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class t8 extends e3{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ek,this.environmentIntensity=1,this.environmentRotation=new ek,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),1!==this.environmentIntensity&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class t9{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=35044,this.updateRanges=[],this.version=0,this.uuid=w()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=w()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=w()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const t7=new I;class ne{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)t7.fromBufferAttribute(this,t),t7.applyMatrix4(e),this.setXYZ(t,t7.x,t7.y,t7.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)t7.fromBufferAttribute(this,t),t7.applyNormalMatrix(e),this.setXYZ(t,t7.x,t7.y,t7.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)t7.fromBufferAttribute(this,t),t7.transformDirection(e),this.setXYZ(t,t7.x,t7.y,t7.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=R(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=C(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=C(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=C(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=C(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=C(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=R(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=R(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=R(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=R(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=C(t,this.array),n=C(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=C(t,this.array),n=C(n,this.array),i=C(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=C(t,this.array),n=C(n,this.array),i=C(i,this.array),r=C(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ne(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");let e=[];for(let t=0;t<this.count;t++){let n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return new tx(new this.array.constructor(e),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");let e=[];for(let t=0;t<this.count;t++){let n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}}}const nt=new I,nn=new Q,ni=new Q,nr=new I,na=new eP,ns=new I,no=new eb,nl=new eP,nh=new eC;class nu extends tG{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=g,this.bindMatrix=new eP,this.bindMatrixInverse=new eP,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){let e=this.geometry;null===this.boundingBox&&(this.boundingBox=new ei),this.boundingBox.makeEmpty();let t=e.getAttribute("position");for(let e=0;e<t.count;e++)this.getVertexPosition(e,ns),this.boundingBox.expandByPoint(ns)}computeBoundingSphere(){let e=this.geometry;null===this.boundingSphere&&(this.boundingSphere=new eb),this.boundingSphere.makeEmpty();let t=e.getAttribute("position");for(let e=0;e<t.count;e++)this.getVertexPosition(e,ns),this.boundingSphere.expandByPoint(ns)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){let n=this.material,i=this.matrixWorld;if(void 0!==n)null===this.boundingSphere&&this.computeBoundingSphere(),no.copy(this.boundingSphere),no.applyMatrix4(i),!1!==e.ray.intersectsSphere(no)&&(nl.copy(i).invert(),nh.copy(e.ray).applyMatrix4(nl),(null===this.boundingBox||!1!==nh.intersectsBox(this.boundingBox))&&this._computeIntersections(e,t,nh))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let e=new Q,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);let i=1/e.manhattanLength();i!==1/0?e.multiplyScalar(i):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===g?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){let n=this.skeleton,i=this.geometry;nn.fromBufferAttribute(i.attributes.skinIndex,e),ni.fromBufferAttribute(i.attributes.skinWeight,e),nt.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){let i=ni.getComponent(e);if(0!==i){let r=nn.getComponent(e);na.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]),t.addScaledVector(nr.copy(nt).applyMatrix4(na),i)}}return t.applyMatrix4(this.bindMatrixInverse)}}class nc extends e3{constructor(){super(),this.isBone=!0,this.type="Bone"}}class nd extends ${constructor(e=null,t=1,n=1,i,r,a,s,o,l=1003,h=1003,u,c){super(null,a,s,o,l,h,i,r,u,c),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const np=new eP,nf=new eP;class nm{constructor(e=[],t=[]){this.uuid=w(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){let e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new eP)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){let t=new eP;this.bones[e]&&t.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(t)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){let t=this.bones[e];t&&t.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){let t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}}update(){let e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let i=0,r=e.length;i<r;i++){let r=e[i]?e[i].matrixWorld:nf;np.multiplyMatrices(r,t[i]),np.toArray(n,16*i)}null!==i&&(i.needsUpdate=!0)}clone(){return new nm(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length),t=new Float32Array((e=Math.max(e=4*Math.ceil(e/4),4))*e*4);t.set(this.boneMatrices);let n=new nd(t,e,e,1023,1015);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){let n=this.bones[t];if(n.name===e)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){let i=e.bones[n],r=t[i];void 0===r&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),r=new nc),this.bones.push(r),this.boneInverses.push(new eP().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){let e={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;let t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){let r=t[i];e.bones.push(r.uuid);let a=n[i];e.boneInverses.push(a.toArray())}return e}}class ng extends tx{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){let e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const nv=new eP,n_=new eP,ny=[],nx=new ei,nb=new eP,nM=new tG,nS=new eb;class nE extends tG{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new ng(new Float32Array(16*n),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let e=0;e<n;e++)this.setMatrixAt(e,nb)}computeBoundingBox(){let e=this.geometry,t=this.count;null===this.boundingBox&&(this.boundingBox=new ei),null===e.boundingBox&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,nv),nx.copy(e.boundingBox).applyMatrix4(nv),this.boundingBox.union(nx)}computeBoundingSphere(){let e=this.geometry,t=this.count;null===this.boundingSphere&&(this.boundingSphere=new eb),null===e.boundingSphere&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,nv),nS.copy(e.boundingSphere).applyMatrix4(nv),this.boundingSphere.union(nS)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),null!==e.morphTexture&&(this.morphTexture=e.morphTexture.clone()),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}getMorphAt(e,t){let n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,r=e*(n.length+1)+1;for(let e=0;e<n.length;e++)n[e]=i[r+e]}raycast(e,t){let n=this.matrixWorld,i=this.count;if((nM.geometry=this.geometry,nM.material=this.material,void 0!==nM.material)&&(null===this.boundingSphere&&this.computeBoundingSphere(),nS.copy(this.boundingSphere),nS.applyMatrix4(n),!1!==e.ray.intersectsSphere(nS)))for(let r=0;r<i;r++){this.getMatrixAt(r,nv),n_.multiplyMatrices(n,nv),nM.matrixWorld=n_,nM.raycast(e,ny);for(let e=0,n=ny.length;e<n;e++){let n=ny[e];n.instanceId=r,n.object=this,t.push(n)}ny.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new ng(new Float32Array(3*this.instanceMatrix.count).fill(1),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}setMorphAt(e,t){let n=t.morphTargetInfluences,i=n.length+1;null===this.morphTexture&&(this.morphTexture=new nd(new Float32Array(i*this.count),i,this.count,1028,1015));let r=this.morphTexture.source.data.data,a=0;for(let e=0;e<n.length;e++)a+=n[e];let s=this.geometry.morphTargetsRelative?1:1-a,o=i*e;r[o]=s,r.set(n,o+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),null!==this.morphTexture&&(this.morphTexture.dispose(),this.morphTexture=null)}}const nT=new I,nw=new I,nA=new U;class nR{constructor(e=new I(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){let i=nT.subVectors(n,t).cross(nw.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){let n=e.delta(nT),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;let r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){let t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let n=t||nA.getNormalMatrix(e),i=this.coplanarPoint(nT).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const nC=new eb,nP=new P(.5,.5),nL=new I;class nI{constructor(e=new nR,t=new nR,n=new nR,i=new nR,r=new nR,a=new nR){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){let s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(a),this}copy(e){let t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=2e3){let n=this.planes,i=e.elements,r=i[0],a=i[1],s=i[2],o=i[3],l=i[4],h=i[5],u=i[6],c=i[7],d=i[8],p=i[9],f=i[10],m=i[11],g=i[12],v=i[13],_=i[14],y=i[15];if(n[0].setComponents(o-r,c-l,m-d,y-g).normalize(),n[1].setComponents(o+r,c+l,m+d,y+g).normalize(),n[2].setComponents(o+a,c+h,m+p,y+v).normalize(),n[3].setComponents(o-a,c-h,m-p,y-v).normalize(),n[4].setComponents(o-s,c-u,m-f,y-_).normalize(),2e3===t)n[5].setComponents(o+s,c+u,m+f,y+_).normalize();else if(2001===t)n[5].setComponents(s,u,f,_).normalize();else throw Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(void 0!==e.boundingSphere)null===e.boundingSphere&&e.computeBoundingSphere(),nC.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{let t=e.geometry;null===t.boundingSphere&&t.computeBoundingSphere(),nC.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(nC)}intersectsSprite(e){return nC.center.set(0,0,0),nC.radius=.7071067811865476+nP.distanceTo(e.center),nC.applyMatrix4(e.matrixWorld),this.intersectsSphere(nC)}intersectsSphere(e){let t=this.planes,n=e.center,i=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){let t=this.planes;for(let n=0;n<6;n++){let i=t[n];if(nL.x=i.normal.x>0?e.max.x:e.min.x,nL.y=i.normal.y>0?e.max.y:e.min.y,nL.z=i.normal.z>0?e.max.z:e.min.z,0>i.distanceToPoint(nL))return!1}return!0}containsPoint(e){let t=this.planes;for(let n=0;n<6;n++)if(0>t[n].distanceToPoint(e))return!1;return!0}clone(){return new this.constructor().copy(this)}}class nN extends tm{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new td(0xffffff),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const nD=new I,nU=new I,nO=new eP,nF=new eC,nB=new eb,nz=new I,nk=new I;class nH extends e3{constructor(e=new tL,t=new nN){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){let e=this.geometry;if(null===e.index){let t=e.attributes.position,n=[0];for(let e=1,i=t.count;e<i;e++)nD.fromBufferAttribute(t,e-1),nU.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=nD.distanceTo(nU);e.setAttribute("lineDistance",new tS(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){let n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),nB.copy(n.boundingSphere),nB.applyMatrix4(i),nB.radius+=r,!1===e.ray.intersectsSphere(nB))return;nO.copy(i).invert(),nF.copy(e.ray).applyMatrix4(nO);let s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=this.isLineSegments?2:1,h=n.index,u=n.attributes.position;if(null!==h){let n=Math.max(0,a.start),i=Math.min(h.count,a.start+a.count);for(let r=n,a=i-1;r<a;r+=l){let n=nV(this,e,nF,o,h.getX(r),h.getX(r+1),r);n&&t.push(n)}if(this.isLineLoop){let r=nV(this,e,nF,o,h.getX(i-1),h.getX(n),i-1);r&&t.push(r)}}else{let n=Math.max(0,a.start),i=Math.min(u.count,a.start+a.count);for(let r=n,a=i-1;r<a;r+=l){let n=nV(this,e,nF,o,r,r+1,r);n&&t.push(n)}if(this.isLineLoop){let r=nV(this,e,nF,o,i-1,n,i-1);r&&t.push(r)}}}updateMorphTargets(){let e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){let n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){let t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}function nV(e,t,n,i,r,a,s){let o=e.geometry.attributes.position;if(nD.fromBufferAttribute(o,r),nU.fromBufferAttribute(o,a),n.distanceSqToSegment(nD,nU,nz,nk)>i)return;nz.applyMatrix4(e.matrixWorld);let l=t.ray.origin.distanceTo(nz);if(!(l<t.near)&&!(l>t.far))return{distance:l,point:nk.clone().applyMatrix4(e.matrixWorld),index:s,face:null,faceIndex:null,barycoord:null,object:e}}const nG=new I,nW=new I;class nj extends nH{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){let e=this.geometry;if(null===e.index){let t=e.attributes.position,n=[];for(let e=0,i=t.count;e<i;e+=2)nG.fromBufferAttribute(t,e),nW.fromBufferAttribute(t,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+nG.distanceTo(nW);e.setAttribute("lineDistance",new tS(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class nX extends nH{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class nq extends tm{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new td(0xffffff),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const nY=new eP,nK=new eC,nZ=new eb,nJ=new I;class n$ extends e3{constructor(e=new tL,t=new nq){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){let n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),nZ.copy(n.boundingSphere),nZ.applyMatrix4(i),nZ.radius+=r,!1===e.ray.intersectsSphere(nZ))return;nY.copy(i).invert(),nK.copy(e.ray).applyMatrix4(nY);let s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=n.index,h=n.attributes.position;if(null!==l){let n=Math.max(0,a.start),r=Math.min(l.count,a.start+a.count);for(let a=n;a<r;a++){let n=l.getX(a);nJ.fromBufferAttribute(h,n),nQ(nJ,n,o,i,e,t,this)}}else{let n=Math.max(0,a.start),r=Math.min(h.count,a.start+a.count);for(let a=n;a<r;a++)nJ.fromBufferAttribute(h,a),nQ(nJ,a,o,i,e,t,this)}}updateMorphTargets(){let e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){let n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){let t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}function nQ(e,t,n,i,r,a,s){let o=nK.distanceSqToPoint(e);if(o<n){let n=new I;nK.closestPointToPoint(e,n),n.applyMatrix4(i);let l=r.ray.origin.distanceTo(n);if(l<r.near||l>r.far)return;a.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:t,face:null,faceIndex:null,barycoord:null,object:s})}}class n0 extends ${constructor(e,t,n=1014,i,r,a,s=1003,o=1003,l,h=1026,u=1){if(1026!==h&&1027!==h)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super({width:e,height:t,depth:u},i,r,a,s,o,h,n,l),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Y(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){let t=super.toJSON(e);return null!==this.compareFunction&&(t.compareFunction=this.compareFunction),t}}class n1{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(e,t){let n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){let t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){let t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){let e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let t=[],n,i=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)t.push(r+=(n=this.getPoint(a/e)).distanceTo(i)),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t=null){let n,i=this.getLengths(),r=0,a=i.length;n=t||e*i[a-1];let s=0,o=a-1,l;for(;s<=o;)if((l=i[r=Math.floor(s+(o-s)/2)]-n)<0)s=r+1;else if(l>0)o=r-1;else{o=r;break}if(i[r=o]===n)return r/(a-1);let h=i[r],u=i[r+1];return(r+(n-h)/(u-h))/(a-1)}getTangent(e,t){let n=e-1e-4,i=e+1e-4;n<0&&(n=0),i>1&&(i=1);let r=this.getPoint(n),a=this.getPoint(i),s=t||(r.isVector2?new P:new I);return s.copy(a).sub(r).normalize(),s}getTangentAt(e,t){let n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t=!1){let n=new I,i=[],r=[],a=[],s=new I,o=new eP;for(let t=0;t<=e;t++){let n=t/e;i[t]=this.getTangentAt(n,new I)}r[0]=new I,a[0]=new I;let l=Number.MAX_VALUE,h=Math.abs(i[0].x),u=Math.abs(i[0].y),c=Math.abs(i[0].z);h<=l&&(l=h,n.set(1,0,0)),u<=l&&(l=u,n.set(0,1,0)),c<=l&&n.set(0,0,1),s.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],s),a[0].crossVectors(i[0],r[0]);for(let t=1;t<=e;t++){if(r[t]=r[t-1].clone(),a[t]=a[t-1].clone(),s.crossVectors(i[t-1],i[t]),s.length()>Number.EPSILON){s.normalize();let e=Math.acos(A(i[t-1].dot(i[t]),-1,1));r[t].applyMatrix4(o.makeRotationAxis(s,e))}a[t].crossVectors(i[t],r[t])}if(!0===t){let t=Math.acos(A(r[0].dot(r[e]),-1,1));t/=e,i[0].dot(s.crossVectors(r[0],r[e]))>0&&(t=-t);for(let n=1;n<=e;n++)r[n].applyMatrix4(o.makeRotationAxis(i[n],t*n)),a[n].crossVectors(i[n],r[n])}return{tangents:i,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){let e={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class n2 extends n1{constructor(e=0,t=0,n=1,i=1,r=0,a=2*Math.PI,s=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t=new P){let n=2*Math.PI,i=this.aEndAngle-this.aStartAngle,r=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=n;for(;i>n;)i-=n;i<Number.EPSILON&&(i=r?0:n),!0!==this.aClockwise||r||(i===n?i=-n:i-=n);let a=this.aStartAngle+e*i,s=this.aX+this.xRadius*Math.cos(a),o=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){let e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),n=s-this.aX,i=o-this.aY;s=n*e-i*t+this.aX,o=n*t+i*e+this.aY}return t.set(s,o)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){let e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}function n3(){let e=0,t=0,n=0,i=0;function r(r,a,s,o){e=r,t=s,n=-3*r+3*a-2*s-o,i=2*r-2*a+s+o}return{initCatmullRom:function(e,t,n,i,a){r(t,n,a*(n-e),a*(i-t))},initNonuniformCatmullRom:function(e,t,n,i,a,s,o){let l=(t-e)/a-(n-e)/(a+s)+(n-t)/s,h=(n-t)/s-(i-t)/(s+o)+(i-n)/o;r(t,n,l*=s,h*=s)},calc:function(r){let a=r*r;return e+t*r+n*a+a*r*i}}}const n4=new I,n5=new n3,n6=new n3,n8=new n3;function n9(e,t,n,i,r){let a=(i-t)*.5,s=(r-n)*.5,o=e*e;return e*o*(2*n-2*i+a+s)+(-3*n+3*i-2*a-s)*o+a*e+n}function n7(e,t,n,i){return function(e,t){let n=1-e;return n*n*t}(e,t)+2*(1-e)*e*n+e*e*i}function ie(e,t,n,i,r){return function(e,t){let n=1-e;return n*n*n*t}(e,t)+function(e,t){let n=1-e;return 3*n*n*e*t}(e,n)+3*(1-e)*e*e*i+e*e*e*r}class it extends n1{constructor(e=new P,t=new P,n=new P,i=new P){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new P){let n=this.v0,i=this.v1,r=this.v2,a=this.v3;return t.set(ie(e,n.x,i.x,r.x,a.x),ie(e,n.y,i.y,r.y,a.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ii extends n1{constructor(e=new P,t=new P){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new P){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new P){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ir extends n1{constructor(e=new P,t=new P,n=new P){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new P){let n=this.v0,i=this.v1,r=this.v2;return t.set(n7(e,n.x,i.x,r.x),n7(e,n.y,i.y,r.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ia extends n1{constructor(e=new I,t=new I,n=new I){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new I){let n=this.v0,i=this.v1,r=this.v2;return t.set(n7(e,n.x,i.x,r.x),n7(e,n.y,i.y,r.y),n7(e,n.z,i.z,r.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class is extends n1{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new P){let n=this.points,i=(n.length-1)*e,r=Math.floor(i),a=i-r,s=n[0===r?r:r-1],o=n[r],l=n[r>n.length-2?n.length-1:r+1],h=n[r>n.length-3?n.length-1:r+2];return t.set(n9(a,s.x,o.x,l.x,h.x),n9(a,s.y,o.y,l.y,h.y)),t}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){let n=e.points[t];this.points.push(n.clone())}return this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){let n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){let n=e.points[t];this.points.push(new P().fromArray(n))}return this}}class io extends tL{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};let r=e/2,a=t/2,s=Math.floor(n),o=Math.floor(i),l=s+1,h=o+1,u=e/s,c=t/o,d=[],p=[],f=[],m=[];for(let e=0;e<h;e++){let t=e*c-a;for(let n=0;n<l;n++){let i=n*u-r;p.push(i,-t,0),f.push(0,0,1),m.push(n/s),m.push(1-e/o)}}for(let e=0;e<o;e++)for(let t=0;t<s;t++){let n=t+l*e,i=t+l*(e+1),r=t+1+l*(e+1),a=t+1+l*e;d.push(n,i,a),d.push(i,r,a)}this.setIndex(d),this.setAttribute("position",new tS(p,3)),this.setAttribute("normal",new tS(f,3)),this.setAttribute("uv",new tS(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new io(e.width,e.height,e.widthSegments,e.heightSegments)}}class il extends tm{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new td(0xffffff),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new td(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new P(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ek,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ih extends il{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new P(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return A(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new td(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new td(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new td(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class iu extends tm{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class ic extends tm{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function id(e,t){return e&&e.constructor!==t?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e}function ip(e,t,n){let i=e.length,r=new e.constructor(i);for(let a=0,s=0;s!==i;++a){let i=n[a]*t;for(let n=0;n!==t;++n)r[s++]=e[i+n]}return r}function im(e,t,n,i){let r=1,a=e[0];for(;void 0!==a&&void 0===a[i];)a=e[r++];if(void 0===a)return;let s=a[i];if(void 0!==s)if(Array.isArray(s))do void 0!==(s=a[i])&&(t.push(a.time),n.push(...s)),a=e[r++];while(void 0!==a)else if(void 0!==s.toArray)do void 0!==(s=a[i])&&(t.push(a.time),s.toArray(n,n.length)),a=e[r++];while(void 0!==a)else do void 0!==(s=a[i])&&(t.push(a.time),n.push(s)),a=e[r++];while(void 0!==a)}class ig{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,n=this._cachedIndex,i=t[n],r=t[n-1];t:{n:{let a;i:{r:if(!(e<i)){for(let a=n+2;;){if(void 0===i){if(e<r)break r;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(r=i,e<(i=t[++n]))break n}a=t.length;break i}if(!(e>=r)){let s=t[1];e<s&&(n=2,r=s);for(let a=n-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(n===a)break;if(i=r,e>=(r=t[--n-1]))break n}a=n,n=0;break i}break t}for(;n<a;){let i=n+a>>>1;e<t[i]?a=i:n=i+1}if(i=t[n],void 0===(r=t[n-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let e=0;e!==i;++e)t[e]=n[r+e];return t}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}class iv extends ig{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,n){let i=this.parameterPositions,r=e-2,a=e+1,s=i[r],o=i[a];if(void 0===s)switch(this.getSettings_().endingStart){case 2401:r=e,s=2*t-n;break;case 2402:r=i.length-2,s=t+i[r]-i[r+1];break;default:r=e,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case 2401:a=e,o=2*n-t;break;case 2402:a=1,o=n+i[1]-i[0];break;default:a=e-1,o=t}let l=(n-t)*.5,h=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-n),this._offsetPrev=r*h,this._offsetNext=a*h}interpolate_(e,t,n,i){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=this._offsetPrev,u=this._offsetNext,c=this._weightPrev,d=this._weightNext,p=(n-t)/(i-t),f=p*p,m=f*p,g=-c*m+2*c*f-c*p,v=(1+c)*m+(-1.5-2*c)*f+(-.5+c)*p+1,_=(-1-d)*m+(1.5+d)*f+.5*p,y=d*m-d*f;for(let e=0;e!==s;++e)r[e]=g*a[h+e]+v*a[l+e]+_*a[o+e]+y*a[u+e];return r}}class i_ extends ig{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=(n-t)/(i-t),u=1-h;for(let e=0;e!==s;++e)r[e]=a[l+e]*u+a[o+e]*h;return r}}class iy extends ig{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class ix{constructor(e,t,n,i){if(void 0===e)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=id(t,this.TimeBufferType),this.values=id(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){let t,n=e.constructor;if(n.toJSON!==this.toJSON)t=n.toJSON(e);else{t={name:e.name,times:id(e.times,Array),values:id(e.values,Array)};let n=e.getInterpolation();n!==e.DefaultInterpolation&&(t.interpolation=n)}return t.type=e.ValueTypeName,t}InterpolantFactoryMethodDiscrete(e){return new iy(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new i_(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new iv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){let t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(t);return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){let t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(1!==e){let t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){let n=this.times,i=n.length,r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==r||a!==i){r>=a&&(r=(a=Math.max(a,1))-1);let e=this.getValueSize();this.times=n.slice(r,a),this.values=this.values.slice(r*e,a*e)}return this}validate(){var e;let t=!0,n=this.getValueSize();n-Math.floor(n)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);let i=this.times,r=this.values,a=i.length;0===a&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let e=0;e!==a;e++){let n=i[e];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,n),t=!1;break}if(null!==s&&s>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,n,s),t=!1;break}s=n}if(void 0!==r&&ArrayBuffer.isView(e=r)&&!(e instanceof DataView))for(let e=0,n=r.length;e!==n;++e){let n=r[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t}optimize(){let e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=2302===this.getInterpolation(),r=e.length-1,a=1;for(let s=1;s<r;++s){let r=!1,o=e[s];if(o!==e[s+1]&&(1!==s||o!==e[0]))if(i)r=!0;else{let e=s*n,i=e-n,a=e+n;for(let s=0;s!==n;++s){let n=t[e+s];if(n!==t[i+s]||n!==t[a+s]){r=!0;break}}}if(r){if(s!==a){e[a]=e[s];let i=s*n,r=a*n;for(let e=0;e!==n;++e)t[r+e]=t[i+e]}++a}}if(r>0){e[a]=e[r];for(let e=r*n,i=a*n,s=0;s!==n;++s)t[i+s]=t[e+s];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*n)):(this.times=e,this.values=t),this}clone(){let e=this.times.slice(),t=this.values.slice(),n=new this.constructor(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}ix.prototype.ValueTypeName="",ix.prototype.TimeBufferType=Float32Array,ix.prototype.ValueBufferType=Float32Array,ix.prototype.DefaultInterpolation=2301;class ib extends ix{constructor(e,t,n){super(e,t,n)}}ib.prototype.ValueTypeName="bool",ib.prototype.ValueBufferType=Array,ib.prototype.DefaultInterpolation=2300,ib.prototype.InterpolantFactoryMethodLinear=void 0,ib.prototype.InterpolantFactoryMethodSmooth=void 0;class iM extends ix{constructor(e,t,n,i){super(e,t,n,i)}}iM.prototype.ValueTypeName="color";class iS extends ix{constructor(e,t,n,i){super(e,t,n,i)}}iS.prototype.ValueTypeName="number";class iE extends ig{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(n-t)/(i-t),l=e*s;for(let e=l+s;l!==e;l+=4)L.slerpFlat(r,0,a,l-s,a,l,o);return r}}class iT extends ix{constructor(e,t,n,i){super(e,t,n,i)}InterpolantFactoryMethodLinear(e){return new iE(this.times,this.values,this.getValueSize(),e)}}iT.prototype.ValueTypeName="quaternion",iT.prototype.InterpolantFactoryMethodSmooth=void 0;class iw extends ix{constructor(e,t,n){super(e,t,n)}}iw.prototype.ValueTypeName="string",iw.prototype.ValueBufferType=Array,iw.prototype.DefaultInterpolation=2300,iw.prototype.InterpolantFactoryMethodLinear=void 0,iw.prototype.InterpolantFactoryMethodSmooth=void 0;class iA extends ix{constructor(e,t,n,i){super(e,t,n,i)}}iA.prototype.ValueTypeName="vector";class iR{constructor(e="",t=-1,n=[],i=2500){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=w(),this.duration<0&&this.resetDuration()}static parse(e){let t=[],n=e.tracks,i=1/(e.fps||1);for(let e=0,r=n.length;e!==r;++e)t.push((function(e){if(void 0===e.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return iS;case"vector":case"vector2":case"vector3":case"vector4":return iA;case"color":return iM;case"quaternion":return iT;case"bool":case"boolean":return ib;case"string":return iw}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){let t=[],n=[];im(e.keys,t,n,"value"),e.times=t,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)})(n[e]).scale(i));let r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){let t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,i=n.length;e!==i;++e)t.push(ix.toJSON(n[e]));return i}static CreateFromMorphTargetSequence(e,t,n,i){let r=t.length,a=[];for(let e=0;e<r;e++){let s=[],o=[];s.push((e+r-1)%r,e,(e+1)%r),o.push(0,1,0);let l=function(e){let t=e.length,n=Array(t);for(let e=0;e!==t;++e)n[e]=e;return n.sort(function(t,n){return e[t]-e[n]}),n}(s);s=ip(s,1,l),o=ip(o,1,l),i||0!==s[0]||(s.push(r),o.push(o[0])),a.push(new iS(".morphTargetInfluences["+t[e].name+"]",s,o).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;Array.isArray(e)||(n=e.geometry&&e.geometry.animations||e.animations);for(let e=0;e<n.length;e++)if(n[e].name===t)return n[e];return null}static CreateClipsFromMorphTargetSequences(e,t,n){let i={},r=/^([\w-]*?)([\d]+)$/;for(let t=0,n=e.length;t<n;t++){let n=e[t],a=n.name.match(r);if(a&&a.length>1){let e=a[1],t=i[e];t||(i[e]=t=[]),t.push(n)}}let a=[];for(let e in i)a.push(this.CreateFromMorphTargetSequence(e,i[e],t,n));return a}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let n=function(e,t,n,i,r){if(0!==n.length){let a=[],s=[];im(n,a,s,i),0!==a.length&&r.push(new e(t,a,s))}},i=[],r=e.name||"default",a=e.fps||30,s=e.blendMode,o=e.length||-1,l=e.hierarchy||[];for(let e=0;e<l.length;e++){let r=l[e].keys;if(r&&0!==r.length)if(r[0].morphTargets){let e,t={};for(e=0;e<r.length;e++)if(r[e].morphTargets)for(let n=0;n<r[e].morphTargets.length;n++)t[r[e].morphTargets[n]]=-1;for(let n in t){let t=[],a=[];for(let i=0;i!==r[e].morphTargets.length;++i){let i=r[e];t.push(i.time),a.push(+(i.morphTarget===n))}i.push(new iS(".morphTargetInfluence["+n+"]",t,a))}o=t.length*a}else{let a=".bones["+t[e].name+"]";n(iA,a+".position",r,"pos",i),n(iT,a+".quaternion",r,"rot",i),n(iA,a+".scale",r,"scl",i)}}return 0===i.length?null:new this(r,o,i,s)}resetDuration(){let e=this.tracks,t=0;for(let n=0,i=e.length;n!==i;++n){let e=this.tracks[n];t=Math.max(t,e.times[e.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){let e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}const iC={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},iP=new class{constructor(e,t,n){let i,r=this,a=!1,s=0,o=0,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,!1===a&&void 0!==r.onStart&&r.onStart(e,s,o),a=!0},this.itemEnd=function(e){s++,void 0!==r.onProgress&&r.onProgress(e,s,o),s===o&&(a=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return i?i(e):e},this.setURLModifier=function(e){return i=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){let t=l.indexOf(e);return -1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=l.length;t<n;t+=2){let n=l[t],i=l[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return i}return null}}};class iL{constructor(e){this.manager=void 0!==e?e:iP,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){let n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}iL.DEFAULT_MATERIAL_NAME="__DEFAULT";const iI={};class iN extends Error{constructor(e,t){super(e),this.response=t}}class iD extends iL{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=iC.get(`file:${e}`);if(void 0!==r)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(void 0!==iI[e])return void iI[e].push({onLoad:t,onProgress:n,onError:i});iI[e]=[],iI[e].push({onLoad:t,onProgress:n,onError:i});let a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),s=this.mimeType,o=this.responseType;fetch(a).then(t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;let n=iI[e],i=t.body.getReader(),r=t.headers.get("X-File-Size")||t.headers.get("Content-Length"),a=r?parseInt(r):0,s=0!==a,o=0;return new Response(new ReadableStream({start(e){!function t(){i.read().then(({done:i,value:r})=>{if(i)e.close();else{let i=new ProgressEvent("progress",{lengthComputable:s,loaded:o+=r.byteLength,total:a});for(let e=0,t=n.length;e<t;e++){let t=n[e];t.onProgress&&t.onProgress(i)}e.enqueue(r),t()}},t=>{e.error(t)})}()}}))}throw new iN(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,t)}).then(e=>{switch(o){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then(e=>new DOMParser().parseFromString(e,s));case"json":return e.json();default:if(""===s)return e.text();{let t=/charset="?([^;"\s]*)"?/i.exec(s),n=new TextDecoder(t&&t[1]?t[1].toLowerCase():void 0);return e.arrayBuffer().then(e=>n.decode(e))}}}).then(t=>{iC.add(`file:${e}`,t);let n=iI[e];delete iI[e];for(let e=0,i=n.length;e<i;e++){let i=n[e];i.onLoad&&i.onLoad(t)}}).catch(t=>{let n=iI[e];if(void 0===n)throw this.manager.itemError(e),t;delete iI[e];for(let e=0,i=n.length;e<i;e++){let i=n[e];i.onError&&i.onError(t)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}const iU=new WeakMap;class iO extends iL{constructor(e){super(e)}load(e,t,n,i){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,a=iC.get(`image:${e}`);if(void 0!==a){if(!0===a.complete)r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0);else{let e=iU.get(a);void 0===e&&(e=[],iU.set(a,e)),e.push({onLoad:t,onError:i})}return a}let s=B("img");function o(){h(),t&&t(this);let n=iU.get(this)||[];for(let e=0;e<n.length;e++){let t=n[e];t.onLoad&&t.onLoad(this)}iU.delete(this),r.manager.itemEnd(e)}function l(t){h(),i&&i(t),iC.remove(`image:${e}`);let n=iU.get(this)||[];for(let e=0;e<n.length;e++){let i=n[e];i.onError&&i.onError(t)}iU.delete(this),r.manager.itemError(e),r.manager.itemEnd(e)}function h(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),iC.add(`image:${e}`,s),r.manager.itemStart(e),s.src=e,s}}class iF extends iL{constructor(e){super(e)}load(e,t,n,i){let r=new $,a=new iO(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(e){r.image=e,r.needsUpdate=!0,void 0!==t&&t(r)},n,i),r}}class iB extends e3{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new td(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){let t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),void 0!==this.target&&(t.object.target=this.target.uuid),t}}const iz=new eP,ik=new I,iH=new I;class iV{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new P(512,512),this.mapType=1009,this.map=null,this.mapPass=null,this.matrix=new eP,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new nI,this._frameExtents=new P(1,1),this._viewportCount=1,this._viewports=[new Q(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){let t=this.camera,n=this.matrix;ik.setFromMatrixPosition(e.matrixWorld),t.position.copy(ik),iH.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(iH),t.updateMatrixWorld(),iz.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(iz),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(iz)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let e={};return 1!==this.intensity&&(e.intensity=this.intensity),0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class iG extends iV{constructor(){super(new t0(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){let t=this.camera,n=2*T*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class iW extends iB{constructor(e,t,n=0,i=Math.PI/3,r=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(e3.DEFAULT_UP),this.updateMatrix(),this.target=new e3,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new iG}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const ij=new eP,iX=new I,iq=new I;class iY extends iV{constructor(){super(new t0(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new P(4,2),this._viewportCount=6,this._viewports=[new Q(2,1,1,1),new Q(0,1,1,1),new Q(3,1,1,1),new Q(1,1,1,1),new Q(3,0,1,1),new Q(1,0,1,1)],this._cubeDirections=[new I(1,0,0),new I(-1,0,0),new I(0,0,1),new I(0,0,-1),new I(0,1,0),new I(0,-1,0)],this._cubeUps=[new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,0,1),new I(0,0,-1)]}updateMatrices(e,t=0){let n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),iX.setFromMatrixPosition(e.matrixWorld),n.position.copy(iX),iq.copy(n.position),iq.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(iq),n.updateMatrixWorld(),i.makeTranslation(-iX.x,-iX.y,-iX.z),ij.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ij)}}class iK extends iB{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new iY}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class iZ extends tZ{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2,r=n-e,a=n+e,s=i+t,o=i-t;if(null!==this.view&&this.view.enabled){let e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=e*this.view.offsetX,a=r+e*this.view.width,s-=t*this.view.offsetY,o=s-t*this.view.height}this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}class iJ extends iV{constructor(){super(new iZ(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class i$ extends iB{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(e3.DEFAULT_UP),this.updateMatrix(),this.target=new e3,this.shadow=new iJ}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class iQ{static extractUrlBase(e){let t=e.lastIndexOf("/");return -1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e))?e:t+e}}const i0=new WeakMap;class i1 extends iL{constructor(e){super(e),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,a=iC.get(`image-bitmap:${e}`);if(void 0!==a)return(r.manager.itemStart(e),a.then)?void a.then(n=>{if(!0!==i0.has(a))return t&&t(n),r.manager.itemEnd(e),n;i&&i(i0.get(a)),r.manager.itemError(e),r.manager.itemEnd(e)}):(setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a);let s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader;let o=fetch(e,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(n){return iC.add(`image-bitmap:${e}`,n),t&&t(n),r.manager.itemEnd(e),n}).catch(function(t){i&&i(t),i0.set(o,t),iC.remove(`image-bitmap:${e}`),r.manager.itemError(e),r.manager.itemEnd(e)});iC.add(`image-bitmap:${e}`,o),r.manager.itemStart(e)}}class i2 extends t0{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class i3{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){let t=performance.now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}const i4="\\[\\]\\.:\\/",i5=RegExp("["+i4+"]","g"),i6="[^"+i4+"]",i8="[^"+i4.replace("\\.","")+"]",i9=/((?:WC+[\/:])*)/.source.replace("WC",i6),i7=/(WCOD+)?/.source.replace("WCOD",i8),re=RegExp("^"+i9+i7+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",i6)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",i6)+"$"),rt=["material","materials","bones","map"];class rn{constructor(e,t,n){this.path=t,this.parsedPath=n||rn.parseTrackName(t),this.node=rn.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new rn.Composite(e,t,n):new rn(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(i5,"")}static parseTrackName(e){let t=re.exec(e);if(null===t)throw Error("PropertyBinding: Cannot parse trackName: "+e);let n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){let e=n.nodeName.substring(i+1);-1!==rt.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){let n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){let n=function(e){for(let i=0;i<e.length;i++){let r=e[i];if(r.name===t||r.uuid===t)return r;let a=n(r.children);if(a)return a}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){let n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,n=t.objectName,i=t.propertyName,r=t.propertyIndex;if(e||(e=rn.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(n){let i=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===i){i=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);e=e.material.map;break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==i){if(void 0===e[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[i]}}let a=e[i];if(void 0===a)return void console.error("THREE.PropertyBinding: Trying to update property for track: "+t.nodeName+"."+i+" but it wasn't found.",e);let s=this.Versioning.None;this.targetObject=e,!0===e.isMaterial?s=this.Versioning.NeedsUpdate:!0===e.isObject3D&&(s=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else void 0!==a.fromArray&&void 0!==a.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(o=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][s]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}rn.Composite=class{constructor(e,t,n){let i=n||rn.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();let n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(e,t)}setValue(e,t){let n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},rn.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},rn.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},rn.prototype.GetterByBindingType=[rn.prototype._getValue_direct,rn.prototype._getValue_array,rn.prototype._getValue_arrayElement,rn.prototype._getValue_toArray],rn.prototype.SetterByBindingTypeAndVersioning=[[rn.prototype._setValue_direct,rn.prototype._setValue_direct_setNeedsUpdate,rn.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[rn.prototype._setValue_array,rn.prototype._setValue_array_setNeedsUpdate,rn.prototype._setValue_array_setMatrixWorldNeedsUpdate],[rn.prototype._setValue_arrayElement,rn.prototype._setValue_arrayElement_setNeedsUpdate,rn.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[rn.prototype._setValue_fromArray,rn.prototype._setValue_fromArray_setNeedsUpdate,rn.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1);const ri=new eP;class rr{constructor(e,t,n=0,i=1/0){this.ray=new eC(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new eH,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return ri.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(ri),this}intersectObject(e,t=!0,n=[]){return rs(e,this,n,t),n.sort(ra),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)rs(e[i],this,n,t);return n.sort(ra),n}}function ra(e,t){return e.distance-t.distance}function rs(e,t,n,i){let r=!0;if(e.layers.test(t.layers)&&!1===e.raycast(t,n)&&(r=!1),!0===r&&!0===i){let i=e.children;for(let e=0,r=i.length;e<r;e++)rs(i[e],t,n,!0)}}class ro{constructor(e=1,t=0,n=0){this.radius=e,this.phi=t,this.theta=n}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=A(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(A(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class rl extends nj{constructor(e=10,t=10,n=4473924,i=8947848){n=new td(n),i=new td(i);let r=t/2,a=e/t,s=e/2,o=[],l=[];for(let e=0,h=0,u=-s;e<=t;e++,u+=a){o.push(-s,0,u,s,0,u),o.push(u,0,-s,u,0,s);let t=e===r?n:i;t.toArray(l,h),h+=3,t.toArray(l,h),h+=3,t.toArray(l,h),h+=3,t.toArray(l,h),h+=3}let h=new tL;h.setAttribute("position",new tS(o,3)),h.setAttribute("color",new tS(l,3)),super(h,new nN({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class rh extends M{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(void 0===e)return void console.warn("THREE.Controls: connect() now requires an element.");null!==this.domElement&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function ru(e,t,n,i){let r=function(e){switch(e){case 1009:case 1010:return{byteLength:1,components:1};case 1012:case 1011:case 1016:return{byteLength:2,components:1};case 1017:case 1018:return{byteLength:2,components:4};case 1014:case 1013:case 1015:return{byteLength:4,components:1};case 35902:return{byteLength:4,components:3}}throw Error(`Unknown texture type ${e}.`)}(i);switch(n){case 1021:return e*t;case 1028:case 1029:return e*t/r.components*r.byteLength;case 1030:case 1031:return e*t*2/r.components*r.byteLength;case 1022:return e*t*3/r.components*r.byteLength;case 1023:case 1033:return e*t*4/r.components*r.byteLength;case 33776:case 33777:case 36196:case 37492:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*8;case 33778:case 33779:case 37496:case 37808:return Math.floor((e+3)/4)*Math.floor((t+3)/4)*16;case 35841:case 35843:return Math.max(e,16)*Math.max(t,8)/4;case 35840:case 35842:return Math.max(e,8)*Math.max(t,8)/2;case 37809:return Math.floor((e+4)/5)*Math.floor((t+3)/4)*16;case 37810:return Math.floor((e+4)/5)*Math.floor((t+4)/5)*16;case 37811:return Math.floor((e+5)/6)*Math.floor((t+4)/5)*16;case 37812:return Math.floor((e+5)/6)*Math.floor((t+5)/6)*16;case 37813:return Math.floor((e+7)/8)*Math.floor((t+4)/5)*16;case 37814:return Math.floor((e+7)/8)*Math.floor((t+5)/6)*16;case 37815:return Math.floor((e+7)/8)*Math.floor((t+7)/8)*16;case 37816:return Math.floor((e+9)/10)*Math.floor((t+4)/5)*16;case 37817:return Math.floor((e+9)/10)*Math.floor((t+5)/6)*16;case 37818:return Math.floor((e+9)/10)*Math.floor((t+7)/8)*16;case 37819:return Math.floor((e+9)/10)*Math.floor((t+9)/10)*16;case 37820:return Math.floor((e+11)/12)*Math.floor((t+9)/10)*16;case 37821:return Math.floor((e+11)/12)*Math.floor((t+11)/12)*16;case 36492:case 36494:case 36495:case 36285:case 36286:return Math.ceil(e/4)*Math.ceil(t/4)*16;case 36283:case 36284:return Math.ceil(e/4)*Math.ceil(t/4)*8}throw Error(`Unable to determine texture byte length for ${n} format.`)}function rc(){let e=null,t=!1,n=null,i=null;function r(t,a){n(t,a),i=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==n&&(i=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function rd(e){let t=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),t.get(e)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);let i=t.get(n);i&&(e.deleteBuffer(i.buffer),t.delete(n))},update:function(n,i){if(n.isInterleavedBufferAttribute&&(n=n.data),n.isGLBufferAttribute){let e=t.get(n);(!e||e.version<n.version)&&t.set(n,{buffer:n.buffer,type:n.type,bytesPerElement:n.elementSize,version:n.version});return}let r=t.get(n);if(void 0===r)t.set(n,function(t,n){let i,r=t.array,a=t.usage,s=r.byteLength,o=e.createBuffer();if(e.bindBuffer(n,o),e.bufferData(n,r,a),t.onUploadCallback(),r instanceof Float32Array)i=e.FLOAT;else if("undefined"!=typeof Float16Array&&r instanceof Float16Array)i=e.HALF_FLOAT;else if(r instanceof Uint16Array)i=t.isFloat16BufferAttribute?e.HALF_FLOAT:e.UNSIGNED_SHORT;else if(r instanceof Int16Array)i=e.SHORT;else if(r instanceof Uint32Array)i=e.UNSIGNED_INT;else if(r instanceof Int32Array)i=e.INT;else if(r instanceof Int8Array)i=e.BYTE;else if(r instanceof Uint8Array)i=e.UNSIGNED_BYTE;else if(r instanceof Uint8ClampedArray)i=e.UNSIGNED_BYTE;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);return{buffer:o,type:i,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version,size:s}}(n,i));else if(r.version<n.version){if(r.size!==n.array.byteLength)throw Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(t,n,i){let r=n.array,a=n.updateRanges;if(e.bindBuffer(i,t),0===a.length)e.bufferSubData(i,0,r);else{a.sort((e,t)=>e.start-t.start);let t=0;for(let e=1;e<a.length;e++){let n=a[t],i=a[e];i.start<=n.start+n.count+1?n.count=Math.max(n.count,i.start+i.count-n.start):a[++t]=i}a.length=t+1;for(let t=0,n=a.length;t<n;t++){let n=a[t];e.bufferSubData(i,n.start*r.BYTES_PER_ELEMENT,r,n.start,n.count)}n.clearUpdateRanges()}n.onUploadCallback()}(r.buffer,n,i),r.version=n.version}}}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"178"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="178");const rp={alphahash_fragment:"#ifdef USE_ALPHAHASH\n	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n	const float ALPHA_HASH_SCALE = 0.05;\n	float hash2D( vec2 value ) {\n		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n	}\n	float hash3D( vec3 value ) {\n		return hash2D( vec2( hash2D( value.xy ), value.z ) );\n	}\n	float getAlphaHashThreshold( vec3 position ) {\n		float maxDeriv = max(\n			length( dFdx( position.xyz ) ),\n			length( dFdy( position.xyz ) )\n		);\n		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n		vec2 pixScales = vec2(\n			exp2( floor( log2( pixScale ) ) ),\n			exp2( ceil( log2( pixScale ) ) )\n		);\n		vec2 alpha = vec2(\n			hash3D( floor( pixScales.x * position.xyz ) ),\n			hash3D( floor( pixScales.y * position.xyz ) )\n		);\n		float lerpFactor = fract( log2( pixScale ) );\n		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n		float a = min( lerpFactor, 1.0 - lerpFactor );\n		vec3 cases = vec3(\n			x * x / ( 2.0 * a * ( 1.0 - a ) ),\n			( x - 0.5 * a ) / ( 1.0 - a ),\n			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n		);\n		float threshold = ( x < ( 1.0 - a ) )\n			? ( ( x < a ) ? cases.x : cases.y )\n			: cases.z;\n		return clamp( threshold , 1.0e-6, 1.0 );\n	}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	#ifdef ALPHA_TO_COVERAGE\n	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n	if ( diffuseColor.a == 0.0 ) discard;\n	#else\n	if ( diffuseColor.a < alphaTest ) discard;\n	#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_CLEARCOAT ) \n		clearcoatSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_SHEEN ) \n		sheenSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n	#if ! defined( GL_ANGLE_multi_draw )\n	#define gl_DrawID _gl_DrawID\n	uniform int _gl_DrawID;\n	#endif\n	uniform highp sampler2D batchingTexture;\n	uniform highp usampler2D batchingIdTexture;\n	mat4 getBatchingMatrix( const in float i ) {\n		int size = textureSize( batchingTexture, 0 ).x;\n		int j = int( i ) * 4;\n		int x = j % size;\n		int y = j / size;\n		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n		return mat4( v1, v2, v3, v4 );\n	}\n	float getIndirectIndex( const in int i ) {\n		int size = textureSize( batchingIdTexture, 0 ).x;\n		int x = i % size;\n		int y = i / size;\n		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n	}\n#endif\n#ifdef USE_BATCHING_COLOR\n	uniform sampler2D batchingColorTexture;\n	vec3 getBatchingColor( const in float i ) {\n		int size = textureSize( batchingColorTexture, 0 ).x;\n		int j = int( i );\n		int x = j % size;\n		int y = j / size;\n		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n	}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n	vPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n	const mat3 XYZ_TO_REC709 = mat3(\n		 3.2404542, -0.9692660,  0.0556434,\n		-1.5371385,  1.8760108, -0.2040259,\n		-0.4985314,  0.0415560,  1.0572252\n	);\n	vec3 Fresnel0ToIor( vec3 fresnel0 ) {\n		vec3 sqrtF0 = sqrt( fresnel0 );\n		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n	}\n	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n	}\n	float IorToFresnel0( float transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n	}\n	vec3 evalSensitivity( float OPD, vec3 shift ) {\n		float phase = 2.0 * PI * OPD * 1.0e-9;\n		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n		xyz /= 1.0685e-7;\n		vec3 rgb = XYZ_TO_REC709 * xyz;\n		return rgb;\n	}\n	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n		vec3 I;\n		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n		float cosTheta2Sq = 1.0 - sinTheta2Sq;\n		if ( cosTheta2Sq < 0.0 ) {\n			return vec3( 1.0 );\n		}\n		float cosTheta2 = sqrt( cosTheta2Sq );\n		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n		float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n		float T121 = 1.0 - R12;\n		float phi12 = 0.0;\n		if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n		float phi21 = PI - phi12;\n		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n		vec3 phi23 = vec3( 0.0 );\n		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n		vec3 phi = vec3( phi21 ) + phi23;\n		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n		vec3 r123 = sqrt( R123 );\n		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n		vec3 C0 = R12 + Rs;\n		I = C0;\n		vec3 Cm = Rs - T121;\n		for ( int m = 1; m <= 2; ++ m ) {\n			Cm *= r123;\n			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n			I += Cm * Sm;\n		}\n		return max( I, vec3( 0.0 ) );\n	}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vBumpMapUv );\n		vec2 dSTdy = dFdy( vBumpMapUv );\n		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#ifdef ALPHA_TO_COVERAGE\n		float distanceToPlane, distanceGradient;\n		float clipOpacity = 1.0;\n		#pragma unroll_loop_start\n		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n			distanceGradient = fwidth( distanceToPlane ) / 2.0;\n			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n			if ( clipOpacity == 0.0 ) discard;\n		}\n		#pragma unroll_loop_end\n		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n			float unionClipOpacity = 1.0;\n			#pragma unroll_loop_start\n			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n				plane = clippingPlanes[ i ];\n				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n				distanceGradient = fwidth( distanceToPlane ) / 2.0;\n				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n			}\n			#pragma unroll_loop_end\n			clipOpacity *= 1.0 - unionClipOpacity;\n		#endif\n		diffuseColor.a *= clipOpacity;\n		if ( diffuseColor.a == 0.0 ) discard;\n	#else\n		#pragma unroll_loop_start\n		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n		}\n		#pragma unroll_loop_end\n		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n			bool clipped = true;\n			#pragma unroll_loop_start\n			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n				plane = clippingPlanes[ i ];\n				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n			}\n			#pragma unroll_loop_end\n			if ( clipped ) discard;\n		#endif\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n	vColor.xyz *= batchingColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n	varying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define cubeUV_r0 1.0\n	#define cubeUV_m0 - 2.0\n	#define cubeUV_r1 0.8\n	#define cubeUV_m1 - 1.0\n	#define cubeUV_r4 0.4\n	#define cubeUV_m4 2.0\n	#define cubeUV_r5 0.305\n	#define cubeUV_m5 3.0\n	#define cubeUV_r6 0.21\n	#define cubeUV_m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= cubeUV_r1 ) {\n			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n		} else if ( roughness >= cubeUV_r4 ) {\n			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n		} else if ( roughness >= cubeUV_r5 ) {\n			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n		} else if ( roughness >= cubeUV_r6 ) {\n			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n	vec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n	mat3 bm = mat3( batchingMatrix );\n	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n	transformedNormal = bm * transformedNormal;\n	#ifdef USE_TANGENT\n		transformedTangent = bm * transformedTangent;\n	#endif\n#endif\n#ifdef USE_INSTANCING\n	mat3 im = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n	transformedNormal = im * transformedNormal;\n	#ifdef USE_TANGENT\n		transformedTangent = im * transformedTangent;\n	#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\n		emissiveColor = sRGBTransferEOTF( emissiveColor );\n	#endif\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"vec4 LinearTransferOETF( in vec4 value ) {\n	return value;\n}\nvec4 sRGBTransferEOTF( in vec4 value ) {\n	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	uniform mat3 envMapRotation;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	#ifdef USE_ANISOTROPY\n		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n			#ifdef ENVMAP_TYPE_CUBE_UV\n				vec3 bentNormal = cross( bitangent, viewDir );\n				bentNormal = normalize( cross( bentNormal, bitangent ) );\n				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n				return getIBLRadiance( viewDir, bentNormal, roughness );\n			#else\n				return vec3( 0.0 );\n			#endif\n		}\n	#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		vec2 fw = fwidth( coord ) * 0.5;\n		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n	#endif\n}",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n	vec3 diffuseColor;\n	float specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Lambert\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n	uniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n	if ( cutoffDistance > 0.0 ) {\n		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n	}\n	return distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	material.ior = ior;\n	#ifdef USE_SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULAR_COLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n		#endif\n		#ifdef USE_SPECULAR_INTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n	material.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n	material.iridescence = iridescence;\n	material.iridescenceIOR = iridescenceIOR;\n	#ifdef USE_IRIDESCENCEMAP\n		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n	#endif\n	#ifdef USE_IRIDESCENCE_THICKNESSMAP\n		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n	#else\n		material.iridescenceThickness = iridescenceThicknessMaximum;\n	#endif\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEEN_COLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	#ifdef USE_ANISOTROPYMAP\n		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n	#else\n		vec2 anisotropyV = anisotropyVector;\n	#endif\n	material.anisotropy = length( anisotropyV );\n	if( material.anisotropy == 0.0 ) {\n		anisotropyV = vec2( 1.0, 0.0 );\n	} else {\n		anisotropyV /= material.anisotropy;\n		material.anisotropy = saturate( material.anisotropy );\n	}\n	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	float dispersion;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_IRIDESCENCE\n		float iridescence;\n		float iridescenceIOR;\n		float iridescenceThickness;\n		vec3 iridescenceFresnel;\n		vec3 iridescenceF0;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n	#ifdef IOR\n		float ior;\n	#endif\n	#ifdef USE_TRANSMISSION\n		float transmission;\n		float transmissionAlpha;\n		float thickness;\n		float attenuationDistance;\n		vec3 attenuationColor;\n	#endif\n	#ifdef USE_ANISOTROPY\n		float anisotropy;\n		float alphaT;\n		vec3 anisotropyT;\n		vec3 anisotropyB;\n	#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n		float v = 0.5 / ( gv + gl );\n		return saturate(v);\n	}\n	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n		float a2 = alphaT * alphaB;\n		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n		highp float v2 = dot( v, v );\n		float w2 = a2 / v2;\n		return RECIPROCAL_PI * a2 * pow2 ( w2 );\n	}\n#endif\n#ifdef USE_CLEARCOAT\n	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n		vec3 f0 = material.clearcoatF0;\n		float f90 = material.clearcoatF90;\n		float roughness = material.clearcoatRoughness;\n		float alpha = pow2( roughness );\n		vec3 halfDir = normalize( lightDir + viewDir );\n		float dotNL = saturate( dot( normal, lightDir ) );\n		float dotNV = saturate( dot( normal, viewDir ) );\n		float dotNH = saturate( dot( normal, halfDir ) );\n		float dotVH = saturate( dot( viewDir, halfDir ) );\n		vec3 F = F_Schlick( f0, f90, dotVH );\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n		return F * ( V * D );\n	}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n	vec3 f0 = material.specularColor;\n	float f90 = material.specularF90;\n	float roughness = material.roughness;\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	#ifdef USE_IRIDESCENCE\n		F = mix( F, material.iridescenceFresnel, material.iridescence );\n	#endif\n	#ifdef USE_ANISOTROPY\n		float dotTL = dot( material.anisotropyT, lightDir );\n		float dotTV = dot( material.anisotropyT, viewDir );\n		float dotTH = dot( material.anisotropyT, halfDir );\n		float dotBL = dot( material.anisotropyB, lightDir );\n		float dotBV = dot( material.anisotropyB, viewDir );\n		float dotBH = dot( material.anisotropyB, halfDir );\n		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n	#else\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n	#endif\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	#ifdef USE_IRIDESCENCE\n		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n	#else\n		vec3 Fr = specularColor;\n	#endif\n	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometryNormal;\n		vec3 viewDir = geometryViewDir;\n		vec3 position = geometryPosition;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	#ifdef USE_IRIDESCENCE\n		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n	#else\n		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	#endif\n	vec3 totalScattering = singleScattering + multiScattering;\n	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n	geometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n	float dotNVi = saturate( dot( normal, geometryViewDir ) );\n	if ( material.iridescenceThickness == 0.0 ) {\n		material.iridescence = 0.0;\n	} else {\n		material.iridescence = saturate( material.iridescence );\n	}\n	if ( material.iridescence > 0.0 ) {\n		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n	}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometryPosition, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	vec4 spotColor;\n	vec3 spotLightCoord;\n	bool inSpotLightMap;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometryPosition, directLight );\n		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n		#else\n		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#endif\n		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n		#endif\n		#undef SPOT_LIGHT_MAP_INDEX\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	#if defined( USE_LIGHT_PROBES )\n		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n	#endif\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometryNormal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	#ifdef USE_ANISOTROPY\n		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n	#else\n		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n	#endif\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF )\n	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	vFragDepth = 1.0 + gl_Position.w;\n	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vMapUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	#if defined( USE_POINTS_UV )\n		vec2 uv = vUv;\n	#else\n		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n	#endif\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n	varying vec2 vUv;\n#else\n	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n		uniform mat3 uvTransform;\n	#endif\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphinstance_vertex:"#ifdef USE_INSTANCING_MORPH\n	float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n	}\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n	}\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	#ifndef USE_INSTANCING_MORPH\n		uniform float morphTargetBaseInfluence;\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n	#endif\n	uniform sampler2DArray morphTargetsTexture;\n	uniform ivec2 morphTargetsTextureSize;\n	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n		int y = texelIndex / morphTargetsTextureSize.x;\n		int x = texelIndex - y * morphTargetsTextureSize.x;\n		ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n		return texelFetch( morphTargetsTexture, morphUV, 0 );\n	}\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n	}\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal *= faceDirection;\n	#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n	#ifdef USE_TANGENT\n		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn = getTangentFrame( - vViewPosition, normal,\n		#if defined( USE_NORMALMAP )\n			vNormalMapUv\n		#elif defined( USE_CLEARCOAT_NORMALMAP )\n			vClearcoatNormalMapUv\n		#else\n			vUv\n		#endif\n		);\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn[0] *= faceDirection;\n		tbn[1] *= faceDirection;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	#ifdef USE_TANGENT\n		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn2[0] *= faceDirection;\n		tbn2[1] *= faceDirection;\n	#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	normal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( uv.st );\n		vec2 st1 = dFdy( uv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n		return mat3( T * scale, B * scale, N );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	clearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n	uniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n	if( v <= 0.0 )\n		return vec4( 0., 0., 0., 0. );\n	if( v >= 1.0 )\n		return vec4( 1., 1., 1., 1. );\n	float vuf;\n	float af = modf( v * PackFactors.a, vuf );\n	float bf = modf( vuf * ShiftRight8, vuf );\n	float gf = modf( vuf * ShiftRight8, vuf );\n	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n	if( v <= 0.0 )\n		return vec3( 0., 0., 0. );\n	if( v >= 1.0 )\n		return vec3( 1., 1., 1. );\n	float vuf;\n	float bf = modf( v * PackFactors.b, vuf );\n	float gf = modf( vuf * ShiftRight8, vuf );\n	return vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n	if( v <= 0.0 )\n		return vec2( 0., 0. );\n	if( v >= 1.0 )\n		return vec2( 1., 1. );\n	float vuf;\n	float gf = modf( v * 256., vuf );\n	return vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n	return dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n	mvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return mix( 1.0, shadow, shadowIntensity );\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		float shadow = 1.0;\n		vec3 lightToPosition = shadowCoord.xyz;\n		\n		float lightToPositionLength = length( lightToPosition );\n		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;\n			vec3 bd3D = normalize( lightToPosition );\n			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n				shadow = (\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n				) * ( 1.0 / 9.0 );\n			#else\n				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n			#endif\n		}\n		return mix( 1.0, shadow, shadowIntensity );\n	}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		struct SpotLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n	vec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n		shadowWorldPosition = worldPosition;\n		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n		#endif\n		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	mat4 getBoneMatrix( const in float i ) {\n		int size = textureSize( boneTexture, 0 ).x;\n		int j = int( i ) * 4;\n		int x = j % size;\n		int y = j / size;\n		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n		return mat4( v1, v2, v3, v4 );\n	}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n	vec3( 1.6605, - 0.1246, - 0.0182 ),\n	vec3( - 0.5876, 1.1329, - 0.1006 ),\n	vec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n	vec3( 0.6274, 0.0691, 0.0164 ),\n	vec3( 0.3293, 0.9195, 0.0880 ),\n	vec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n	vec3 x2 = x * x;\n	vec3 x4 = x2 * x2;\n	return + 15.5 * x4 * x2\n		- 40.14 * x4 * x\n		+ 31.96 * x4\n		- 6.868 * x2 * x\n		+ 0.4298 * x2\n		+ 0.1191 * x\n		- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n	const mat3 AgXInsetMatrix = mat3(\n		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n	);\n	const mat3 AgXOutsetMatrix = mat3(\n		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n	);\n	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;\n	color *= toneMappingExposure;\n	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n	color = AgXInsetMatrix * color;\n	color = max( color, 1e-10 );	color = log2( color );\n	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n	color = clamp( color, 0.0, 1.0 );\n	color = agxDefaultContrastApprox( color );\n	color = AgXOutsetMatrix * color;\n	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n	color = clamp( color, 0.0, 1.0 );\n	return color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n	const float StartCompression = 0.8 - 0.04;\n	const float Desaturation = 0.15;\n	color *= toneMappingExposure;\n	float x = min( color.r, min( color.g, color.b ) );\n	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n	color -= offset;\n	float peak = max( color.r, max( color.g, color.b ) );\n	if ( peak < StartCompression ) return color;\n	float d = 1. - StartCompression;\n	float newPeak = 1. - d * d / ( peak + d - StartCompression );\n	color *= newPeak / peak;\n	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n	return mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	material.transmission = transmission;\n	material.transmissionAlpha = 1.0;\n	material.thickness = thickness;\n	material.attenuationDistance = attenuationDistance;\n	material.attenuationColor = attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmitted = getIBLVolumeRefraction(\n		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n		material.attenuationColor, material.attenuationDistance );\n	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	float w0( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n	}\n	float w1( float a ) {\n		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n	}\n	float w2( float a ){\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n	}\n	float w3( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * a * a );\n	}\n	float g0( float a ) {\n		return w0( a ) + w1( a );\n	}\n	float g1( float a ) {\n		return w2( a ) + w3( a );\n	}\n	float h0( float a ) {\n		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n	}\n	float h1( float a ) {\n		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n	}\n	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n		uv = uv * texelSize.zw + 0.5;\n		vec2 iuv = floor( uv );\n		vec2 fuv = fract( uv );\n		float g0x = g0( fuv.x );\n		float g1x = g1( fuv.x );\n		float h0x = h0( fuv.x );\n		float h1x = h1( fuv.x );\n		float h0y = h0( fuv.y );\n		float h1y = h1( fuv.y );\n		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n	}\n	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n		vec2 fLodSizeInv = 1.0 / fLodSize;\n		vec2 cLodSizeInv = 1.0 / cLodSize;\n		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n		return mix( fSample, cSample, fract( lod ) );\n	}\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n	}\n	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( isinf( attenuationDistance ) ) {\n			return vec3( 1.0 );\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec4 transmittedLight;\n		vec3 transmittance;\n		#ifdef USE_DISPERSION\n			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n			for ( int i = 0; i < 3; i ++ ) {\n				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n				vec3 refractedRayExit = position + transmissionRay;\n				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n				vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n				refractionCoords += 1.0;\n				refractionCoords /= 2.0;\n				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n				transmittedLight[ i ] = transmissionSample[ i ];\n				transmittedLight.a += transmissionSample.a;\n				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n			}\n			transmittedLight.a /= 3.0;\n		#else\n			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n			vec3 refractedRayExit = position + transmissionRay;\n			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n			vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n			refractionCoords += 1.0;\n			refractionCoords /= 2.0;\n			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n		#endif\n		vec3 attenuatedColor = transmittance * transmittedLight.rgb;\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n	}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	uniform mat3 mapTransform;\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform mat3 alphaMapTransform;\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	uniform mat3 lightMapTransform;\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	uniform mat3 aoMapTransform;\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	uniform mat3 bumpMapTransform;\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	uniform mat3 normalMapTransform;\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	uniform mat3 displacementMapTransform;\n	varying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	uniform mat3 emissiveMapTransform;\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	uniform mat3 metalnessMapTransform;\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	uniform mat3 roughnessMapTransform;\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	uniform mat3 anisotropyMapTransform;\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	uniform mat3 clearcoatMapTransform;\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform mat3 clearcoatNormalMapTransform;\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform mat3 clearcoatRoughnessMapTransform;\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	uniform mat3 sheenColorMapTransform;\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	uniform mat3 sheenRoughnessMapTransform;\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	uniform mat3 iridescenceMapTransform;\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform mat3 iridescenceThicknessMapTransform;\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	uniform mat3 specularMapTransform;\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	uniform mat3 specularColorMapTransform;\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	uniform mat3 specularIntensityMapTransform;\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	vUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_BATCHING\n		worldPosition = batchingMatrix * worldPosition;\n	#endif\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n	uniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n	uniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n	#else\n		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n	gl_FragColor = texColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#include <morphinstance_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#elif DEPTH_PACKING == 3202\n		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n	#elif DEPTH_PACKING == 3203\n		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#include <morphinstance_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_lambert_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef USE_SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULAR_COLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n	#ifdef USE_SPECULAR_INTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n	uniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEEN_COLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	uniform vec2 anisotropyVector;\n	#ifdef USE_ANISOTROPYMAP\n		uniform sampler2D anisotropyMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n	#endif\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n	varying vec2 vUv;\n	uniform mat3 uvTransform;\n#endif\nvoid main() {\n	#ifdef USE_POINTS_UV\n		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	#endif\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	#include <logdepthbuf_fragment>\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix[ 3 ];\n	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}"},rf={common:{diffuse:{value:new td(0xffffff)},opacity:{value:1},map:{value:null},mapTransform:{value:new U},alphaMap:{value:null},alphaMapTransform:{value:new U},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new U}},envmap:{envMap:{value:null},envMapRotation:{value:new U},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new U}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new U}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new U},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new U},normalScale:{value:new P(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new U},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new U}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new U}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new U}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new td(0xffffff)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new td(0xffffff)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new U},alphaTest:{value:0},uvTransform:{value:new U}},sprite:{diffuse:{value:new td(0xffffff)},opacity:{value:1},center:{value:new P(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new U},alphaMap:{value:null},alphaMapTransform:{value:new U},alphaTest:{value:0}}},rm={basic:{uniforms:tq([rf.common,rf.specularmap,rf.envmap,rf.aomap,rf.lightmap,rf.fog]),vertexShader:rp.meshbasic_vert,fragmentShader:rp.meshbasic_frag},lambert:{uniforms:tq([rf.common,rf.specularmap,rf.envmap,rf.aomap,rf.lightmap,rf.emissivemap,rf.bumpmap,rf.normalmap,rf.displacementmap,rf.fog,rf.lights,{emissive:{value:new td(0)}}]),vertexShader:rp.meshlambert_vert,fragmentShader:rp.meshlambert_frag},phong:{uniforms:tq([rf.common,rf.specularmap,rf.envmap,rf.aomap,rf.lightmap,rf.emissivemap,rf.bumpmap,rf.normalmap,rf.displacementmap,rf.fog,rf.lights,{emissive:{value:new td(0)},specular:{value:new td(1118481)},shininess:{value:30}}]),vertexShader:rp.meshphong_vert,fragmentShader:rp.meshphong_frag},standard:{uniforms:tq([rf.common,rf.envmap,rf.aomap,rf.lightmap,rf.emissivemap,rf.bumpmap,rf.normalmap,rf.displacementmap,rf.roughnessmap,rf.metalnessmap,rf.fog,rf.lights,{emissive:{value:new td(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:rp.meshphysical_vert,fragmentShader:rp.meshphysical_frag},toon:{uniforms:tq([rf.common,rf.aomap,rf.lightmap,rf.emissivemap,rf.bumpmap,rf.normalmap,rf.displacementmap,rf.gradientmap,rf.fog,rf.lights,{emissive:{value:new td(0)}}]),vertexShader:rp.meshtoon_vert,fragmentShader:rp.meshtoon_frag},matcap:{uniforms:tq([rf.common,rf.bumpmap,rf.normalmap,rf.displacementmap,rf.fog,{matcap:{value:null}}]),vertexShader:rp.meshmatcap_vert,fragmentShader:rp.meshmatcap_frag},points:{uniforms:tq([rf.points,rf.fog]),vertexShader:rp.points_vert,fragmentShader:rp.points_frag},dashed:{uniforms:tq([rf.common,rf.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:rp.linedashed_vert,fragmentShader:rp.linedashed_frag},depth:{uniforms:tq([rf.common,rf.displacementmap]),vertexShader:rp.depth_vert,fragmentShader:rp.depth_frag},normal:{uniforms:tq([rf.common,rf.bumpmap,rf.normalmap,rf.displacementmap,{opacity:{value:1}}]),vertexShader:rp.meshnormal_vert,fragmentShader:rp.meshnormal_frag},sprite:{uniforms:tq([rf.sprite,rf.fog]),vertexShader:rp.sprite_vert,fragmentShader:rp.sprite_frag},background:{uniforms:{uvTransform:{value:new U},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:rp.background_vert,fragmentShader:rp.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new U}},vertexShader:rp.backgroundCube_vert,fragmentShader:rp.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:rp.cube_vert,fragmentShader:rp.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:rp.equirect_vert,fragmentShader:rp.equirect_frag},distanceRGBA:{uniforms:tq([rf.common,rf.displacementmap,{referencePosition:{value:new I},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:rp.distanceRGBA_vert,fragmentShader:rp.distanceRGBA_frag},shadow:{uniforms:tq([rf.lights,rf.fog,{color:{value:new td(0)},opacity:{value:1}}]),vertexShader:rp.shadow_vert,fragmentShader:rp.shadow_frag}};rm.physical={uniforms:tq([rm.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new U},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new U},clearcoatNormalScale:{value:new P(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new U},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new U},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new U},sheen:{value:0},sheenColor:{value:new td(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new U},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new U},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new U},transmissionSamplerSize:{value:new P},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new U},attenuationDistance:{value:0},attenuationColor:{value:new td(0)},specularColor:{value:new td(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new U},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new U},anisotropyVector:{value:new P},anisotropyMap:{value:null},anisotropyMapTransform:{value:new U}}]),vertexShader:rp.meshphysical_vert,fragmentShader:rp.meshphysical_frag};const rg={r:0,b:0,g:0},rv=new ek,r_=new eP;function ry(e,t,n,i,r,a,s){let o,l,h=new td(0),u=+(!0!==a),c=null,d=0,p=null;function f(e){let i=!0===e.isScene?e.background:null;return i&&i.isTexture&&(i=(e.backgroundBlurriness>0?n:t).get(i)),i}function m(t,n){t.getRGB(rg,tY(e)),i.buffers.color.setClear(rg.r,rg.g,rg.b,n,s)}return{getClearColor:function(){return h},setClearColor:function(e,t=1){h.set(e),m(h,u=t)},getClearAlpha:function(){return u},setClearAlpha:function(e){m(h,u=e)},render:function(t){let n=!1,r=f(t);null===r?m(h,u):r&&r.isColor&&(m(r,1),n=!0);let a=e.xr.getEnvironmentBlendMode();"additive"===a?i.buffers.color.setClear(0,0,0,1,s):"alpha-blend"===a&&i.buffers.color.setClear(0,0,0,0,s),(e.autoClear||n)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil))},addToRenderList:function(t,n){let i=f(n);i&&(i.isCubeTexture||306===i.mapping)?(void 0===l&&((l=new tG(new tj(1,1,1),new tK({name:"BackgroundCubeMaterial",uniforms:tX(rm.backgroundCube.uniforms),vertexShader:rm.backgroundCube.vertexShader,fragmentShader:rm.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1}))).geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(l)),rv.copy(n.backgroundRotation),rv.x*=-1,rv.y*=-1,rv.z*=-1,i.isCubeTexture&&!1===i.isRenderTargetTexture&&(rv.y*=-1,rv.z*=-1),l.material.uniforms.envMap.value=i,l.material.uniforms.flipEnvMap.value=i.isCubeTexture&&!1===i.isRenderTargetTexture?-1:1,l.material.uniforms.backgroundBlurriness.value=n.backgroundBlurriness,l.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,l.material.uniforms.backgroundRotation.value.setFromMatrix4(r_.makeRotationFromEuler(rv)),l.material.toneMapped=G.getTransfer(i.colorSpace)!==x,(c!==i||d!==i.version||p!==e.toneMapping)&&(l.material.needsUpdate=!0,c=i,d=i.version,p=e.toneMapping),l.layers.enableAll(),t.unshift(l,l.geometry,l.material,0,0,null)):i&&i.isTexture&&(void 0===o&&((o=new tG(new io(2,2),new tK({name:"BackgroundMaterial",uniforms:tX(rm.background.uniforms),vertexShader:rm.background.vertexShader,fragmentShader:rm.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(o)),o.material.uniforms.t2D.value=i,o.material.uniforms.backgroundIntensity.value=n.backgroundIntensity,o.material.toneMapped=G.getTransfer(i.colorSpace)!==x,!0===i.matrixAutoUpdate&&i.updateMatrix(),o.material.uniforms.uvTransform.value.copy(i.matrix),(c!==i||d!==i.version||p!==e.toneMapping)&&(o.material.needsUpdate=!0,c=i,d=i.version,p=e.toneMapping),o.layers.enableAll(),t.unshift(o,o.geometry,o.material,0,0,null))},dispose:function(){void 0!==l&&(l.geometry.dispose(),l.material.dispose(),l=void 0),void 0!==o&&(o.geometry.dispose(),o.material.dispose(),o=void 0)}}}function rx(e,t){let n=e.getParameter(e.MAX_VERTEX_ATTRIBS),i={},r=h(null),a=r,s=!1;function o(t){return e.bindVertexArray(t)}function l(t){return e.deleteVertexArray(t)}function h(e){let t=[],i=[],r=[];for(let e=0;e<n;e++)t[e]=0,i[e]=0,r[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:i,attributeDivisors:r,object:e,attributes:{},index:null}}function u(){let e=a.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function c(e){d(e,0)}function d(t,n){let i=a.newAttributes,r=a.enabledAttributes,s=a.attributeDivisors;i[t]=1,0===r[t]&&(e.enableVertexAttribArray(t),r[t]=1),s[t]!==n&&(e.vertexAttribDivisor(t,n),s[t]=n)}function p(){let t=a.newAttributes,n=a.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==t[i]&&(e.disableVertexAttribArray(i),n[i]=0)}function f(t,n,i,r,a,s,o){!0===o?e.vertexAttribIPointer(t,n,i,a,s):e.vertexAttribPointer(t,n,i,r,a,s)}function m(){g(),s=!0,a!==r&&o((a=r).object)}function g(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:function(n,r,l,m,g){let v=!1,_=function(t,n,r){let a=!0===r.wireframe,s=i[t.id];void 0===s&&(s={},i[t.id]=s);let o=s[n.id];void 0===o&&(o={},s[n.id]=o);let l=o[a];return void 0===l&&(l=h(e.createVertexArray()),o[a]=l),l}(m,l,r);a!==_&&o((a=_).object),(v=function(e,t,n,i){let r=a.attributes,s=t.attributes,o=0,l=n.getAttributes();for(let t in l)if(l[t].location>=0){let n=r[t],i=s[t];if(void 0===i&&("instanceMatrix"===t&&e.instanceMatrix&&(i=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(i=e.instanceColor)),void 0===n||n.attribute!==i||i&&n.data!==i.data)return!0;o++}return a.attributesNum!==o||a.index!==i}(n,m,l,g))&&function(e,t,n,i){let r={},s=t.attributes,o=0,l=n.getAttributes();for(let t in l)if(l[t].location>=0){let n=s[t];void 0===n&&("instanceMatrix"===t&&e.instanceMatrix&&(n=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(n=e.instanceColor));let i={};i.attribute=n,n&&n.data&&(i.data=n.data),r[t]=i,o++}a.attributes=r,a.attributesNum=o,a.index=i}(n,m,l,g),null!==g&&t.update(g,e.ELEMENT_ARRAY_BUFFER),(v||s)&&(s=!1,function(n,i,r,a){u();let s=a.attributes,o=r.getAttributes(),l=i.defaultAttributeValues;for(let i in o){let r=o[i];if(r.location>=0){let o=s[i];if(void 0===o&&("instanceMatrix"===i&&n.instanceMatrix&&(o=n.instanceMatrix),"instanceColor"===i&&n.instanceColor&&(o=n.instanceColor)),void 0!==o){let i=o.normalized,s=o.itemSize,l=t.get(o);if(void 0===l)continue;let h=l.buffer,u=l.type,p=l.bytesPerElement,m=u===e.INT||u===e.UNSIGNED_INT||1013===o.gpuType;if(o.isInterleavedBufferAttribute){let t=o.data,l=t.stride,g=o.offset;if(t.isInstancedInterleavedBuffer){for(let e=0;e<r.locationSize;e++)d(r.location+e,t.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=t.meshPerAttribute*t.count)}else for(let e=0;e<r.locationSize;e++)c(r.location+e);e.bindBuffer(e.ARRAY_BUFFER,h);for(let e=0;e<r.locationSize;e++)f(r.location+e,s/r.locationSize,u,i,l*p,(g+s/r.locationSize*e)*p,m)}else{if(o.isInstancedBufferAttribute){for(let e=0;e<r.locationSize;e++)d(r.location+e,o.meshPerAttribute);!0!==n.isInstancedMesh&&void 0===a._maxInstanceCount&&(a._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let e=0;e<r.locationSize;e++)c(r.location+e);e.bindBuffer(e.ARRAY_BUFFER,h);for(let e=0;e<r.locationSize;e++)f(r.location+e,s/r.locationSize,u,i,s*p,s/r.locationSize*e*p,m)}}else if(void 0!==l){let t=l[i];if(void 0!==t)switch(t.length){case 2:e.vertexAttrib2fv(r.location,t);break;case 3:e.vertexAttrib3fv(r.location,t);break;case 4:e.vertexAttrib4fv(r.location,t);break;default:e.vertexAttrib1fv(r.location,t)}}}}p()}(n,r,l,m),null!==g&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t.get(g).buffer))},reset:m,resetDefaultState:g,dispose:function(){for(let e in m(),i){let t=i[e];for(let e in t){let n=t[e];for(let e in n)l(n[e].object),delete n[e];delete t[e]}delete i[e]}},releaseStatesOfGeometry:function(e){if(void 0===i[e.id])return;let t=i[e.id];for(let e in t){let n=t[e];for(let e in n)l(n[e].object),delete n[e];delete t[e]}delete i[e.id]},releaseStatesOfProgram:function(e){for(let t in i){let n=i[t];if(void 0===n[e.id])continue;let r=n[e.id];for(let e in r)l(r[e].object),delete r[e];delete n[e.id]}},initAttributes:u,enableAttribute:c,disableUnusedAttributes:p}}function rb(e,t,n){let i;function r(t,r,a){0!==a&&(e.drawArraysInstanced(i,t,r,a),n.update(r,i,a))}this.setMode=function(e){i=e},this.render=function(t,r){e.drawArrays(i,t,r),n.update(r,i,1)},this.renderInstances=r,this.renderMultiDraw=function(e,r,a){if(0===a)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,e,0,r,0,a);let s=0;for(let e=0;e<a;e++)s+=r[e];n.update(s,i,1)},this.renderMultiDrawInstances=function(e,a,s,o){if(0===s)return;let l=t.get("WEBGL_multi_draw");if(null===l)for(let t=0;t<e.length;t++)r(e[t],a[t],o[t]);else{l.multiDrawArraysInstancedWEBGL(i,e,0,a,0,o,0,s);let t=0;for(let e=0;e<s;e++)t+=a[e]*o[e];n.update(t,i,1)}}}function rM(e,t,n,i){let r;function a(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let s=void 0!==n.precision?n.precision:"highp",o=a(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);let l=!0===n.logarithmicDepthBuffer,h=!0===n.reverseDepthBuffer&&t.has("EXT_clip_control"),u=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),c=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=e.getParameter(e.MAX_TEXTURE_SIZE),p=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),f=e.getParameter(e.MAX_VERTEX_ATTRIBS),m=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),g=e.getParameter(e.MAX_VARYING_VECTORS);return{isWebGL2:!0,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){let n=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:a,textureFormatReadable:function(t){return 1023===t||i.convert(t)===e.getParameter(e.IMPLEMENTATION_COLOR_READ_FORMAT)},textureTypeReadable:function(n){let r=1016===n&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return 1009===n||i.convert(n)===e.getParameter(e.IMPLEMENTATION_COLOR_READ_TYPE)||1015===n||!!r},precision:s,logarithmicDepthBuffer:l,reverseDepthBuffer:h,maxTextures:u,maxVertexTextures:c,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),vertexTextures:c>0,maxSamples:e.getParameter(e.MAX_SAMPLES)}}function rS(e){let t=this,n=null,i=0,r=!1,a=!1,s=new nR,o=new U,l={value:null,needsUpdate:!1};function h(e,n,i,r){let a=null!==e?e.length:0,h=null;if(0!==a){if(h=l.value,!0!==r||null===h){let t=i+4*a,r=n.matrixWorldInverse;o.getNormalMatrix(r),(null===h||h.length<t)&&(h=new Float32Array(t));for(let t=0,n=i;t!==a;++t,n+=4)s.copy(e[t]).applyMatrix4(r,o),s.normal.toArray(h,n),h[n+3]=s.constant}l.value=h,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,h}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t){let n=0!==e.length||t||0!==i||r;return r=t,i=e.length,n},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(e,t){n=h(e,t,0)},this.setState=function(s,o,u){let c=s.clippingPlanes,d=s.clipIntersection,p=s.clipShadows,f=e.get(s);if(r&&null!==c&&0!==c.length&&(!a||p)){let e=a?0:i,t=4*e,r=f.clippingState||null;l.value=r,r=h(c,o,t,u);for(let e=0;e!==t;++e)r[e]=n[e];f.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}else a?h(null):(l.value!==n&&(l.value=n,l.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0)}}function rE(e){let t=new WeakMap;function n(e,t){return 303===t?e.mapping=301:304===t&&(e.mapping=302),e}function i(e){let n=e.target;n.removeEventListener("dispose",i);let r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){let a=r.mapping;if(303===a||304===a)if(t.has(r))return n(t.get(r).texture,r.mapping);else{let a=r.image;if(!a||!(a.height>0))return null;{let s=new t3(a.height);return s.fromEquirectangularTexture(e,r),t.set(r,s),r.addEventListener("dispose",i),n(s.texture,r.mapping)}}}return r},dispose:function(){t=new WeakMap}}}const rT=[.125,.215,.35,.446,.526,.582],rw=new iZ,rA=new td;let rR=null,rC=0,rP=0,rL=!1;const rI=(1+Math.sqrt(5))/2,rN=1/rI,rD=[new I(-rI,rN,0),new I(rI,rN,0),new I(-rN,0,rI),new I(rN,0,rI),new I(0,rI,-rN),new I(0,rI,rN),new I(-1,1,-1),new I(1,1,-1),new I(-1,1,1),new I(1,1,1)],rU=new I;class rO{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100,r={}){let{size:a=256,position:s=rU}=r;rR=this._renderer.getRenderTarget(),rC=this._renderer.getActiveCubeFace(),rP=this._renderer.getActiveMipmapLevel(),rL=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(a);let o=this._allocateTargets();return o.depthBuffer=!0,this._sceneToCubeUV(e,n,i,o,s),t>0&&this._blur(o,0,0,t),this._applyPMREM(o),this._cleanup(o),o}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=rk(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=rz(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(rR,rC,rP),this._renderer.xr.enabled=rL,e.scissorTest=!1,rB(e,0,0,e.width,e.height)}_fromTexture(e,t){301===e.mapping||302===e.mapping?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),rR=this._renderer.getRenderTarget(),rC=this._renderer.getActiveCubeFace(),rP=this._renderer.getActiveMipmapLevel(),rL=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;let n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){let e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:1006,minFilter:1006,generateMipmaps:!1,type:1016,format:1023,colorSpace:_,depthBuffer:!1},i=rF(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){var r;null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=rF(e,t,n);let{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){let t=[],n=[],i=[],r=e,a=e-4+1+rT.length;for(let s=0;s<a;s++){let a=Math.pow(2,r);n.push(a);let o=1/a;s>e-4?o=rT[s-e+4-1]:0===s&&(o=0),i.push(o);let l=1/(a-2),h=-l,u=1+l,c=[h,h,u,h,u,u,h,h,u,u,h,u],d=new Float32Array(108),p=new Float32Array(72),f=new Float32Array(36);for(let e=0;e<6;e++){let t=e%3*2/3-1,n=e>2?0:-1,i=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];d.set(i,18*e),p.set(c,12*e);let r=[e,e,e,e,e,e];f.set(r,6*e)}let m=new tL;m.setAttribute("position",new tx(d,3)),m.setAttribute("uv",new tx(p,2)),m.setAttribute("faceIndex",new tx(f,1)),t.push(m),r>4&&r--}return{lodPlanes:t,sizeLods:n,sigmas:i}}(i)),this._blurMaterial=(r=i,new tK({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:new Float32Array(20)},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:new I(0,1,0)}},vertexShader:rH(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:0,depthTest:!1,depthWrite:!1}))}return i}_compileMaterial(e){let t=new tG(this._lodPlanes[0],e);this._renderer.compile(t,rw)}_sceneToCubeUV(e,t,n,i,r){let a=new t0(90,1,t,n),s=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],l=this._renderer,h=l.autoClear,u=l.toneMapping;l.getClearColor(rA),l.toneMapping=0,l.autoClear=!1;let c=new tg({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),d=new tG(new tj,c),p=!1,f=e.background;f?f.isColor&&(c.color.copy(f),e.background=null,p=!0):(c.color.copy(rA),p=!0);for(let t=0;t<6;t++){let n=t%3;0===n?(a.up.set(0,s[t],0),a.position.set(r.x,r.y,r.z),a.lookAt(r.x+o[t],r.y,r.z)):1===n?(a.up.set(0,0,s[t]),a.position.set(r.x,r.y,r.z),a.lookAt(r.x,r.y+o[t],r.z)):(a.up.set(0,s[t],0),a.position.set(r.x,r.y,r.z),a.lookAt(r.x,r.y,r.z+o[t]));let h=this._cubeSize;rB(i,n*h,t>2?h:0,h,h),l.setRenderTarget(i),p&&l.render(d,a),l.render(e,a)}d.geometry.dispose(),d.material.dispose(),l.toneMapping=u,l.autoClear=h,e.background=f}_textureToCubeUV(e,t){let n=this._renderer,i=301===e.mapping||302===e.mapping;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=rk()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=rz());let r=i?this._cubemapMaterial:this._equirectMaterial,a=new tG(this._lodPlanes[0],r);r.uniforms.envMap.value=e;let s=this._cubeSize;rB(t,0,0,3*s,2*s),n.setRenderTarget(t),n.render(a,rw)}_applyPMREM(e){let t=this._renderer,n=t.autoClear;t.autoClear=!1;let i=this._lodPlanes.length;for(let t=1;t<i;t++){let n=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),r=rD[(i-t-1)%rD.length];this._blur(e,t-1,t,n,r)}t.autoClear=n}_blur(e,t,n,i,r){let a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,s){let o=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");let h=new tG(this._lodPlanes[i],l),u=l.uniforms,c=this._sizeLods[n]-1,d=isFinite(r)?Math.PI/(2*c):2*Math.PI/39,p=r/d,f=isFinite(r)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);let m=[],g=0;for(let e=0;e<20;++e){let t=e/p,n=Math.exp(-t*t/2);m.push(n),0===e?g+=n:e<f&&(g+=2*n)}for(let e=0;e<m.length;e++)m[e]=m[e]/g;u.envMap.value=e.texture,u.samples.value=f,u.weights.value=m,u.latitudinal.value="latitudinal"===a,s&&(u.poleAxis.value=s);let{_lodMax:v}=this;u.dTheta.value=d,u.mipInt.value=v-n;let _=this._sizeLods[i],y=4*(this._cubeSize-_);rB(t,3*_*(i>v-4?i-v+4:0),y,3*_,2*_),o.setRenderTarget(t),o.render(h,rw)}}function rF(e,t,n){let i=new et(e,t,n);return i.texture.mapping=306,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function rB(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function rz(){return new tK({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:rH(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function rk(){return new tK({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:rH(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function rH(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function rV(e){let t=new WeakMap,n=null;function i(e){let n=e.target;n.removeEventListener("dispose",i);let r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){let a=r.mapping,s=303===a||304===a,o=301===a||302===a;if(s||o){let a=t.get(r),l=void 0!==a?a.texture.pmremVersion:0;if(r.isRenderTargetTexture&&r.pmremVersion!==l)return null===n&&(n=new rO(e)),(a=s?n.fromEquirectangular(r,a):n.fromCubemap(r,a)).texture.pmremVersion=r.pmremVersion,t.set(r,a),a.texture;{if(void 0!==a)return a.texture;let l=r.image;return s&&l&&l.height>0||o&&l&&function(e){let t=0;for(let n=0;n<6;n++)void 0!==e[n]&&t++;return 6===t}(l)?(null===n&&(n=new rO(e)),(a=s?n.fromEquirectangular(r):n.fromCubemap(r)).texture.pmremVersion=r.pmremVersion,t.set(r,a),r.addEventListener("dispose",i),a.texture):null}}}return r},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function rG(e){let t={};function n(n){let i;if(void 0!==t[n])return t[n];switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return t[n]=i,i}return{has:function(e){return null!==n(e)},init:function(){n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance"),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture"),n("WEBGL_render_shared_exponent")},get:function(e){let t=n(e);return null===t&&k("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function rW(e,t,n,i){let r={},a=new WeakMap;function s(e){let o=e.target;for(let e in null!==o.index&&t.remove(o.index),o.attributes)t.remove(o.attributes[e]);o.removeEventListener("dispose",s),delete r[o.id];let l=a.get(o);l&&(t.remove(l),a.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(e){let n=[],i=e.index,r=e.attributes.position,s=0;if(null!==i){let e=i.array;s=i.version;for(let t=0,i=e.length;t<i;t+=3){let i=e[t+0],r=e[t+1],a=e[t+2];n.push(i,r,r,a,a,i)}}else{if(void 0===r)return;let e=r.array;s=r.version;for(let t=0,i=e.length/3-1;t<i;t+=3){let e=t+0,i=t+1,r=t+2;n.push(e,i,i,r,r,e)}}let o=new(F(n)?tM:tb)(n,1);o.version=s;let l=a.get(e);l&&t.remove(l),a.set(e,o)}return{get:function(e,t){return!0===r[t.id]||(t.addEventListener("dispose",s),r[t.id]=!0,n.memory.geometries++),t},update:function(n){let i=n.attributes;for(let n in i)t.update(i[n],e.ARRAY_BUFFER)},getWireframeAttribute:function(e){let t=a.get(e);if(t){let n=e.index;null!==n&&t.version<n.version&&o(e)}else o(e);return a.get(e)}}}function rj(e,t,n){let i,r,a;function s(t,s,o){0!==o&&(e.drawElementsInstanced(i,s,r,t*a,o),n.update(s,i,o))}this.setMode=function(e){i=e},this.setIndex=function(e){r=e.type,a=e.bytesPerElement},this.render=function(t,s){e.drawElements(i,s,r,t*a),n.update(s,i,1)},this.renderInstances=s,this.renderMultiDraw=function(e,a,s){if(0===s)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,a,0,r,e,0,s);let o=0;for(let e=0;e<s;e++)o+=a[e];n.update(o,i,1)},this.renderMultiDrawInstances=function(e,o,l,h){if(0===l)return;let u=t.get("WEBGL_multi_draw");if(null===u)for(let t=0;t<e.length;t++)s(e[t]/a,o[t],h[t]);else{u.multiDrawElementsInstancedWEBGL(i,o,0,r,e,0,h,0,l);let t=0;for(let e=0;e<l;e++)t+=o[e]*h[e];n.update(t,i,1)}}}function rX(e){let t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(n,i,r){switch(t.calls++,i){case e.TRIANGLES:t.triangles+=n/3*r;break;case e.LINES:t.lines+=n/2*r;break;case e.LINE_STRIP:t.lines+=r*(n-1);break;case e.LINE_LOOP:t.lines+=r*n;break;case e.POINTS:t.points+=r*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function rq(e,t,n){let i=new WeakMap,r=new Q;return{update:function(a,s,o){let l=a.morphTargetInfluences,h=s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color,u=void 0!==h?h.length:0,c=i.get(s);if(void 0===c||c.count!==u){void 0!==c&&c.texture.dispose();let e=void 0!==s.morphAttributes.position,n=void 0!==s.morphAttributes.normal,a=void 0!==s.morphAttributes.color,o=s.morphAttributes.position||[],l=s.morphAttributes.normal||[],h=s.morphAttributes.color||[],d=0;!0===e&&(d=1),!0===n&&(d=2),!0===a&&(d=3);let p=s.attributes.position.count*d,f=1;p>t.maxTextureSize&&(f=Math.ceil(p/t.maxTextureSize),p=t.maxTextureSize);let m=new Float32Array(p*f*4*u),g=new en(m,p,f,u);g.type=1015,g.needsUpdate=!0;let v=4*d;for(let t=0;t<u;t++){let i=o[t],s=l[t],u=h[t],c=p*f*4*t;for(let t=0;t<i.count;t++){let o=t*v;!0===e&&(r.fromBufferAttribute(i,t),m[c+o+0]=r.x,m[c+o+1]=r.y,m[c+o+2]=r.z,m[c+o+3]=0),!0===n&&(r.fromBufferAttribute(s,t),m[c+o+4]=r.x,m[c+o+5]=r.y,m[c+o+6]=r.z,m[c+o+7]=0),!0===a&&(r.fromBufferAttribute(u,t),m[c+o+8]=r.x,m[c+o+9]=r.y,m[c+o+10]=r.z,m[c+o+11]=4===u.itemSize?r.w:1)}}c={count:u,texture:g,size:new P(p,f)},i.set(s,c),s.addEventListener("dispose",function e(){g.dispose(),i.delete(s),s.removeEventListener("dispose",e)})}if(!0===a.isInstancedMesh&&null!==a.morphTexture)o.getUniforms().setValue(e,"morphTexture",a.morphTexture,n);else{let t=0;for(let e=0;e<l.length;e++)t+=l[e];let n=s.morphTargetsRelative?1:1-t;o.getUniforms().setValue(e,"morphTargetBaseInfluence",n),o.getUniforms().setValue(e,"morphTargetInfluences",l)}o.getUniforms().setValue(e,"morphTargetsTexture",c.texture,n),o.getUniforms().setValue(e,"morphTargetsTextureSize",c.size)}}}function rY(e,t,n,i){let r=new WeakMap;function a(e){let t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(s){let o=i.render.frame,l=s.geometry,h=t.get(s,l);if(r.get(h)!==o&&(t.update(h),r.set(h,o)),s.isInstancedMesh&&(!1===s.hasEventListener("dispose",a)&&s.addEventListener("dispose",a),r.get(s)!==o&&(n.update(s.instanceMatrix,e.ARRAY_BUFFER),null!==s.instanceColor&&n.update(s.instanceColor,e.ARRAY_BUFFER),r.set(s,o))),s.isSkinnedMesh){let e=s.skeleton;r.get(e)!==o&&(e.update(),r.set(e,o))}return h},dispose:function(){r=new WeakMap}}}const rK=new $,rZ=new n0(1,1),rJ=new en,r$=new class extends ${constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},rQ=new t2,r0=[],r1=[],r2=new Float32Array(16),r3=new Float32Array(9),r4=new Float32Array(4);function r5(e,t,n){let i=e[0];if(i<=0||i>0)return e;let r=t*n,a=r0[r];if(void 0===a&&(a=new Float32Array(r),r0[r]=a),0!==t){i.toArray(a,0);for(let i=1,r=0;i!==t;++i)r+=n,e[i].toArray(a,r)}return a}function r6(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function r8(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function r9(e,t){let n=r1[t];void 0===n&&(n=new Int32Array(t),r1[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function r7(e,t){let n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function ae(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(r6(n,t))return;e.uniform2fv(this.addr,t),r8(n,t)}}function at(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(r6(n,t))return;e.uniform3fv(this.addr,t),r8(n,t)}}function an(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(r6(n,t))return;e.uniform4fv(this.addr,t),r8(n,t)}}function ai(e,t){let n=this.cache,i=t.elements;if(void 0===i){if(r6(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),r8(n,t)}else{if(r6(n,i))return;r4.set(i),e.uniformMatrix2fv(this.addr,!1,r4),r8(n,i)}}function ar(e,t){let n=this.cache,i=t.elements;if(void 0===i){if(r6(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),r8(n,t)}else{if(r6(n,i))return;r3.set(i),e.uniformMatrix3fv(this.addr,!1,r3),r8(n,i)}}function aa(e,t){let n=this.cache,i=t.elements;if(void 0===i){if(r6(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),r8(n,t)}else{if(r6(n,i))return;r2.set(i),e.uniformMatrix4fv(this.addr,!1,r2),r8(n,i)}}function as(e,t){let n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function ao(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2i(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(r6(n,t))return;e.uniform2iv(this.addr,t),r8(n,t)}}function al(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3i(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(r6(n,t))return;e.uniform3iv(this.addr,t),r8(n,t)}}function ah(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(r6(n,t))return;e.uniform4iv(this.addr,t),r8(n,t)}}function au(e,t){let n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function ac(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2ui(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(r6(n,t))return;e.uniform2uiv(this.addr,t),r8(n,t)}}function ad(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3ui(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(r6(n,t))return;e.uniform3uiv(this.addr,t),r8(n,t)}}function ap(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(r6(n,t))return;e.uniform4uiv(this.addr,t),r8(n,t)}}function af(e,t,n){let i,r=this.cache,a=n.allocateTextureUnit();r[0]!==a&&(e.uniform1i(this.addr,a),r[0]=a),this.type===e.SAMPLER_2D_SHADOW?(rZ.compareFunction=515,i=rZ):i=rK,n.setTexture2D(t||i,a)}function am(e,t,n){let i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||r$,r)}function ag(e,t,n){let i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(t||rQ,r)}function av(e,t,n){let i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||rJ,r)}function a_(e,t){e.uniform1fv(this.addr,t)}function ay(e,t){let n=r5(t,this.size,2);e.uniform2fv(this.addr,n)}function ax(e,t){let n=r5(t,this.size,3);e.uniform3fv(this.addr,n)}function ab(e,t){let n=r5(t,this.size,4);e.uniform4fv(this.addr,n)}function aM(e,t){let n=r5(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function aS(e,t){let n=r5(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function aE(e,t){let n=r5(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function aT(e,t){e.uniform1iv(this.addr,t)}function aw(e,t){e.uniform2iv(this.addr,t)}function aA(e,t){e.uniform3iv(this.addr,t)}function aR(e,t){e.uniform4iv(this.addr,t)}function aC(e,t){e.uniform1uiv(this.addr,t)}function aP(e,t){e.uniform2uiv(this.addr,t)}function aL(e,t){e.uniform3uiv(this.addr,t)}function aI(e,t){e.uniform4uiv(this.addr,t)}function aN(e,t,n){let i=this.cache,r=t.length,a=r9(n,r);r6(i,a)||(e.uniform1iv(this.addr,a),r8(i,a));for(let e=0;e!==r;++e)n.setTexture2D(t[e]||rK,a[e])}function aD(e,t,n){let i=this.cache,r=t.length,a=r9(n,r);r6(i,a)||(e.uniform1iv(this.addr,a),r8(i,a));for(let e=0;e!==r;++e)n.setTexture3D(t[e]||r$,a[e])}function aU(e,t,n){let i=this.cache,r=t.length,a=r9(n,r);r6(i,a)||(e.uniform1iv(this.addr,a),r8(i,a));for(let e=0;e!==r;++e)n.setTextureCube(t[e]||rQ,a[e])}function aO(e,t,n){let i=this.cache,r=t.length,a=r9(n,r);r6(i,a)||(e.uniform1iv(this.addr,a),r8(i,a));for(let e=0;e!==r;++e)n.setTexture2DArray(t[e]||rJ,a[e])}class aF{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=function(e){switch(e){case 5126:return r7;case 35664:return ae;case 35665:return at;case 35666:return an;case 35674:return ai;case 35675:return ar;case 35676:return aa;case 5124:case 35670:return as;case 35667:case 35671:return ao;case 35668:case 35672:return al;case 35669:case 35673:return ah;case 5125:return au;case 36294:return ac;case 36295:return ad;case 36296:return ap;case 35678:case 36198:case 36298:case 36306:case 35682:return af;case 35679:case 36299:case 36307:return am;case 35680:case 36300:case 36308:case 36293:return ag;case 36289:case 36303:case 36311:case 36292:return av}}(t.type)}}class aB{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=function(e){switch(e){case 5126:return a_;case 35664:return ay;case 35665:return ax;case 35666:return ab;case 35674:return aM;case 35675:return aS;case 35676:return aE;case 5124:case 35670:return aT;case 35667:case 35671:return aw;case 35668:case 35672:return aA;case 35669:case 35673:return aR;case 5125:return aC;case 36294:return aP;case 36295:return aL;case 36296:return aI;case 35678:case 36198:case 36298:case 36306:case 35682:return aN;case 35679:case 36299:case 36307:return aD;case 35680:case 36300:case 36308:case 36293:return aU;case 36289:case 36303:case 36311:case 36292:return aO}}(t.type)}}class az{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){let i=this.seq;for(let r=0,a=i.length;r!==a;++r){let a=i[r];a.setValue(e,t[a.id],n)}}}const ak=/(\w+)(\])?(\[|\.)?/g;function aH(e,t){e.seq.push(t),e.map[t.id]=t}class aV{constructor(e,t){this.seq=[],this.map={};let n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){let n=e.getActiveUniform(t,i),r=e.getUniformLocation(t,n.name);!function(e,t,n){let i=e.name,r=i.length;for(ak.lastIndex=0;;){let a=ak.exec(i),s=ak.lastIndex,o=a[1],l="]"===a[2],h=a[3];if(l&&(o|=0),void 0===h||"["===h&&s+2===r){aH(n,void 0===h?new aF(o,e,t):new aB(o,e,t));break}{let e=n.map[o];void 0===e&&aH(n,e=new az(o)),n=e}}}(n,r,this)}}setValue(e,t,n,i){let r=this.map[t];void 0!==r&&r.setValue(e,n,i)}setOptional(e,t,n){let i=t[n];void 0!==i&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){let a=t[r],s=n[a.id];!1!==s.needsUpdate&&a.setValue(e,s.value,i)}}static seqWithValue(e,t){let n=[];for(let i=0,r=e.length;i!==r;++i){let r=e[i];r.id in t&&n.push(r)}return n}}function aG(e,t,n){let i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}let aW=0;const aj=new U;function aX(e,t,n){let i=e.getShaderParameter(t,e.COMPILE_STATUS),r=e.getShaderInfoLog(t).trim();if(i&&""===r)return"";let a=/ERROR: 0:(\d+)/.exec(r);if(!a)return r;{let i=parseInt(a[1]);return n.toUpperCase()+"\n\n"+r+"\n\n"+function(e,t){let n=e.split("\n"),i=[],r=Math.max(t-6,0),a=Math.min(t+6,n.length);for(let e=r;e<a;e++){let r=e+1;i.push(`${r===t?">":" "} ${r}: ${n[e]}`)}return i.join("\n")}(e.getShaderSource(t),i)}}const aq=new I;function aY(e){return""!==e}function aK(e,t){let n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function aZ(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const aJ=/^[ \t]*#include +<([\w\d./]+)>/gm;function a$(e){return e.replace(aJ,a0)}const aQ=new Map;function a0(e,t){let n=rp[t];if(void 0===n){let e=aQ.get(t);if(void 0!==e)n=rp[e],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,e);else throw Error("Can not resolve #include <"+t+">")}return a$(n)}const a1=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function a2(e){return e.replace(a1,a3)}function a3(e,t,n,i){let r="";for(let e=parseInt(t);e<parseInt(n);e++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return r}function a4(e){let t=`precision ${e.precision} float;
	precision ${e.precision} int;
	precision ${e.precision} sampler2D;
	precision ${e.precision} samplerCube;
	precision ${e.precision} sampler3D;
	precision ${e.precision} sampler2DArray;
	precision ${e.precision} sampler2DShadow;
	precision ${e.precision} samplerCubeShadow;
	precision ${e.precision} sampler2DArrayShadow;
	precision ${e.precision} isampler2D;
	precision ${e.precision} isampler3D;
	precision ${e.precision} isamplerCube;
	precision ${e.precision} isampler2DArray;
	precision ${e.precision} usampler2D;
	precision ${e.precision} usampler3D;
	precision ${e.precision} usamplerCube;
	precision ${e.precision} usampler2DArray;
	`;return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function a5(e,t,n,i){let r,a,s,o,l,h,u=e.getContext(),c=n.defines,d=n.vertexShader,p=n.fragmentShader,f=(l="SHADOWMAP_TYPE_BASIC",1===n.shadowMapType?l="SHADOWMAP_TYPE_PCF":2===n.shadowMapType?l="SHADOWMAP_TYPE_PCF_SOFT":3===n.shadowMapType&&(l="SHADOWMAP_TYPE_VSM"),l),m=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case 301:case 302:t="ENVMAP_TYPE_CUBE";break;case 306:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),g=(h="ENVMAP_MODE_REFLECTION",n.envMap&&302===n.envMapMode&&(h="ENVMAP_MODE_REFRACTION"),h),v=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),_=function(e){let t=e.envMapCubeUVHeight;if(null===t)return null;let n=Math.log2(t)-2;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:1/t,maxMip:n}}(n),M=[n.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",n.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(aY).join("\n"),S=function(e){let t=[];for(let n in e){let i=e[n];!1!==i&&t.push("#define "+n+" "+i)}return t.join("\n")}(c),E=u.createProgram(),T=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?((r=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,S].filter(aY).join("\n")).length>0&&(r+="\n"),(a=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,S].filter(aY).join("\n")).length>0&&(a+="\n")):(r=[a4(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,S,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.batchingColor?"#define USE_BATCHING_COLOR":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+g:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+f:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(aY).join("\n"),a=[a4(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,S,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+m:"",n.envMap?"#define "+g:"",n.envMap?"#define "+v:"",_?"#define CUBEUV_TEXEL_WIDTH "+_.texelWidth:"",_?"#define CUBEUV_TEXEL_HEIGHT "+_.texelHeight:"",_?"#define CUBEUV_MAX_MIP "+_.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.dispersion?"#define USE_DISPERSION":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor||n.batchingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+f:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?rp.tonemapping_pars_fragment:"",0!==n.toneMapping?function(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="Cineon";break;case 4:n="ACESFilmic";break;case 6:n="AgX";break;case 7:n="Neutral";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",rp.colorspace_pars_fragment,function(e,t){let n=function(e){G._getMatrix(aj,G.workingColorSpace,e);let t=`mat3( ${aj.elements.map(e=>e.toFixed(4))} )`;switch(G.getTransfer(e)){case y:return[t,"LinearTransferOETF"];case x:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",e),[t,"LinearTransferOETF"]}}(t);return`vec4 ${e}( vec4 value ) {
	return ${n[1]}( vec4( value.rgb * ${n[0]}, value.a ) );
}`}("linearToOutputTexel",n.outputColorSpace),function(){G.getLuminanceCoefficients(aq);let e=aq.x.toFixed(4),t=aq.y.toFixed(4),n=aq.z.toFixed(4);return`float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( ${e}, ${t}, ${n} );
	return dot( weights, rgb );
}`}(),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(aY).join("\n")),d=aZ(d=aK(d=a$(d),n),n),p=aZ(p=aK(p=a$(p),n),n),d=a2(d),p=a2(p),!0!==n.isRawShaderMaterial&&(T="#version 300 es\n",r=[M,"#define attribute in\n#define varying out\n#define texture2D texture"].join("\n")+"\n"+r,a=["#define varying in",n.glslVersion===b?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===b?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth\n#define texture2D texture\n#define textureCube texture\n#define texture2DProj textureProj\n#define texture2DLodEXT textureLod\n#define texture2DProjLodEXT textureProjLod\n#define textureCubeLodEXT textureLod\n#define texture2DGradEXT textureGrad\n#define texture2DProjGradEXT textureProjGrad\n#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+a);let w=T+r+d,A=T+a+p,R=aG(u,u.VERTEX_SHADER,w),C=aG(u,u.FRAGMENT_SHADER,A);function P(t){if(e.debug.checkShaderErrors){let n=u.getProgramInfoLog(E).trim(),i=u.getShaderInfoLog(R).trim(),s=u.getShaderInfoLog(C).trim(),o=!0,l=!0;if(!1===u.getProgramParameter(E,u.LINK_STATUS))if(o=!1,"function"==typeof e.debug.onShaderError)e.debug.onShaderError(u,E,R,C);else{let e=aX(u,R,"vertex"),i=aX(u,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+u.getError()+" - VALIDATE_STATUS "+u.getProgramParameter(E,u.VALIDATE_STATUS)+"\n\nMaterial Name: "+t.name+"\nMaterial Type: "+t.type+"\n\nProgram Info Log: "+n+"\n"+e+"\n"+i)}else""!==n?console.warn("THREE.WebGLProgram: Program Info Log:",n):(""===i||""===s)&&(l=!1);l&&(t.diagnostics={runnable:o,programLog:n,vertexShader:{log:i,prefix:r},fragmentShader:{log:s,prefix:a}})}u.deleteShader(R),u.deleteShader(C),s=new aV(u,E),o=function(e,t){let n={},i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){let i=e.getActiveAttrib(t,r),a=i.name,s=1;i.type===e.FLOAT_MAT2&&(s=2),i.type===e.FLOAT_MAT3&&(s=3),i.type===e.FLOAT_MAT4&&(s=4),n[a]={type:i.type,location:e.getAttribLocation(t,a),locationSize:s}}return n}(u,E)}u.attachShader(E,R),u.attachShader(E,C),void 0!==n.index0AttributeName?u.bindAttribLocation(E,0,n.index0AttributeName):!0===n.morphTargets&&u.bindAttribLocation(E,0,"position"),u.linkProgram(E),this.getUniforms=function(){return void 0===s&&P(this),s},this.getAttributes=function(){return void 0===o&&P(this),o};let L=!1===n.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===L&&(L=u.getProgramParameter(E,37297)),L},this.destroy=function(){i.releaseStatesOfProgram(this),u.deleteProgram(E),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=aW++,this.cacheKey=t,this.usedTimes=1,this.program=E,this.vertexShader=R,this.fragmentShader=C,this}let a6=0;class a8{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){let t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return!1===a.has(i)&&(a.add(i),i.usedTimes++),!1===a.has(r)&&(a.add(r),r.usedTimes++),this}remove(e){for(let t of this.materialCache.get(e))t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){let t=this.materialCache,n=t.get(e);return void 0===n&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){let t=this.shaderCache,n=t.get(e);return void 0===n&&(n=new a9(e),t.set(e,n)),n}}class a9{constructor(e){this.id=a6++,this.code=e,this.usedTimes=0}}function a7(e,t,n,i,r,a,s){let o=new eH,l=new a8,h=new Set,u=[],c=r.logarithmicDepthBuffer,d=r.vertexTextures,p=r.precision,f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(e){return(h.add(e),0===e)?"uv":`uv${e}`}return{getParameters:function(a,o,u,g,v){let y,b,M,S,E=g.fog,T=v.geometry,w=a.isMeshStandardMaterial?g.environment:null,A=(a.isMeshStandardMaterial?n:t).get(a.envMap||w),R=A&&306===A.mapping?A.image.height:null,C=f[a.type];null!==a.precision&&(p=r.getMaxPrecision(a.precision))!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",p,"instead.");let P=T.morphAttributes.position||T.morphAttributes.normal||T.morphAttributes.color,L=void 0!==P?P.length:0,I=0;if(void 0!==T.morphAttributes.position&&(I=1),void 0!==T.morphAttributes.normal&&(I=2),void 0!==T.morphAttributes.color&&(I=3),C){let e=rm[C];y=e.vertexShader,b=e.fragmentShader}else y=a.vertexShader,b=a.fragmentShader,l.update(a),M=l.getVertexShaderID(a),S=l.getFragmentShaderID(a);let N=e.getRenderTarget(),D=e.state.buffers.depth.getReversed(),U=!0===v.isInstancedMesh,O=!0===v.isBatchedMesh,F=!!a.map,B=!!a.matcap,z=!!A,k=!!a.aoMap,H=!!a.lightMap,V=!!a.bumpMap,W=!!a.normalMap,j=!!a.displacementMap,X=!!a.emissiveMap,q=!!a.metalnessMap,Y=!!a.roughnessMap,K=a.anisotropy>0,Z=a.clearcoat>0,J=a.dispersion>0,$=a.iridescence>0,Q=a.sheen>0,ee=a.transmission>0,et=K&&!!a.anisotropyMap,en=Z&&!!a.clearcoatMap,ei=Z&&!!a.clearcoatNormalMap,er=Z&&!!a.clearcoatRoughnessMap,ea=$&&!!a.iridescenceMap,es=$&&!!a.iridescenceThicknessMap,eo=Q&&!!a.sheenColorMap,el=Q&&!!a.sheenRoughnessMap,eh=!!a.specularMap,eu=!!a.specularColorMap,ec=!!a.specularIntensityMap,ed=ee&&!!a.transmissionMap,ep=ee&&!!a.thicknessMap,ef=!!a.gradientMap,em=!!a.alphaMap,eg=a.alphaTest>0,ev=!!a.alphaHash,e_=!!a.extensions,ey=0;a.toneMapped&&(null===N||!0===N.isXRRenderTarget)&&(ey=e.toneMapping);let ex={shaderID:C,shaderType:a.type,shaderName:a.name,vertexShader:y,fragmentShader:b,defines:a.defines,customVertexShaderID:M,customFragmentShaderID:S,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:p,batching:O,batchingColor:O&&null!==v._colorsTexture,instancing:U,instancingColor:U&&null!==v.instanceColor,instancingMorph:U&&null!==v.morphTexture,supportsVertexTextures:d,outputColorSpace:null===N?e.outputColorSpace:!0===N.isXRRenderTarget?N.texture.colorSpace:_,alphaToCoverage:!!a.alphaToCoverage,map:F,matcap:B,envMap:z,envMapMode:z&&A.mapping,envMapCubeUVHeight:R,aoMap:k,lightMap:H,bumpMap:V,normalMap:W,displacementMap:d&&j,emissiveMap:X,normalMapObjectSpace:W&&1===a.normalMapType,normalMapTangentSpace:W&&0===a.normalMapType,metalnessMap:q,roughnessMap:Y,anisotropy:K,anisotropyMap:et,clearcoat:Z,clearcoatMap:en,clearcoatNormalMap:ei,clearcoatRoughnessMap:er,dispersion:J,iridescence:$,iridescenceMap:ea,iridescenceThicknessMap:es,sheen:Q,sheenColorMap:eo,sheenRoughnessMap:el,specularMap:eh,specularColorMap:eu,specularIntensityMap:ec,transmission:ee,transmissionMap:ed,thicknessMap:ep,gradientMap:ef,opaque:!1===a.transparent&&1===a.blending&&!1===a.alphaToCoverage,alphaMap:em,alphaTest:eg,alphaHash:ev,combine:a.combine,mapUv:F&&m(a.map.channel),aoMapUv:k&&m(a.aoMap.channel),lightMapUv:H&&m(a.lightMap.channel),bumpMapUv:V&&m(a.bumpMap.channel),normalMapUv:W&&m(a.normalMap.channel),displacementMapUv:j&&m(a.displacementMap.channel),emissiveMapUv:X&&m(a.emissiveMap.channel),metalnessMapUv:q&&m(a.metalnessMap.channel),roughnessMapUv:Y&&m(a.roughnessMap.channel),anisotropyMapUv:et&&m(a.anisotropyMap.channel),clearcoatMapUv:en&&m(a.clearcoatMap.channel),clearcoatNormalMapUv:ei&&m(a.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:er&&m(a.clearcoatRoughnessMap.channel),iridescenceMapUv:ea&&m(a.iridescenceMap.channel),iridescenceThicknessMapUv:es&&m(a.iridescenceThicknessMap.channel),sheenColorMapUv:eo&&m(a.sheenColorMap.channel),sheenRoughnessMapUv:el&&m(a.sheenRoughnessMap.channel),specularMapUv:eh&&m(a.specularMap.channel),specularColorMapUv:eu&&m(a.specularColorMap.channel),specularIntensityMapUv:ec&&m(a.specularIntensityMap.channel),transmissionMapUv:ed&&m(a.transmissionMap.channel),thicknessMapUv:ep&&m(a.thicknessMap.channel),alphaMapUv:em&&m(a.alphaMap.channel),vertexTangents:!!T.attributes.tangent&&(W||K),vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!T.attributes.color&&4===T.attributes.color.itemSize,pointsUvs:!0===v.isPoints&&!!T.attributes.uv&&(F||em),fog:!!E,useFog:!0===a.fog,fogExp2:!!E&&E.isFogExp2,flatShading:!0===a.flatShading&&!1===a.wireframe,sizeAttenuation:!0===a.sizeAttenuation,logarithmicDepthBuffer:c,reverseDepthBuffer:D,skinning:!0===v.isSkinnedMesh,morphTargets:void 0!==T.morphAttributes.position,morphNormals:void 0!==T.morphAttributes.normal,morphColors:void 0!==T.morphAttributes.color,morphTargetsCount:L,morphTextureStride:I,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numLightProbes:o.numLightProbes,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&u.length>0,shadowMapType:e.shadowMap.type,toneMapping:ey,decodeVideoTexture:F&&!0===a.map.isVideoTexture&&G.getTransfer(a.map.colorSpace)===x,decodeVideoTextureEmissive:X&&!0===a.emissiveMap.isVideoTexture&&G.getTransfer(a.emissiveMap.colorSpace)===x,premultipliedAlpha:a.premultipliedAlpha,doubleSided:2===a.side,flipSided:1===a.side,useDepthPacking:a.depthPacking>=0,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionClipCullDistance:e_&&!0===a.extensions.clipCullDistance&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(e_&&!0===a.extensions.multiDraw||O)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:a.customProgramCacheKey()};return ex.vertexUv1s=h.has(1),ex.vertexUv2s=h.has(2),ex.vertexUv3s=h.has(3),h.clear(),ex},getProgramCacheKey:function(t){var n,i,r,a;let s=[];if(t.shaderID?s.push(t.shaderID):(s.push(t.customVertexShaderID),s.push(t.customFragmentShaderID)),void 0!==t.defines)for(let e in t.defines)s.push(e),s.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(n=s,i=t,n.push(i.precision),n.push(i.outputColorSpace),n.push(i.envMapMode),n.push(i.envMapCubeUVHeight),n.push(i.mapUv),n.push(i.alphaMapUv),n.push(i.lightMapUv),n.push(i.aoMapUv),n.push(i.bumpMapUv),n.push(i.normalMapUv),n.push(i.displacementMapUv),n.push(i.emissiveMapUv),n.push(i.metalnessMapUv),n.push(i.roughnessMapUv),n.push(i.anisotropyMapUv),n.push(i.clearcoatMapUv),n.push(i.clearcoatNormalMapUv),n.push(i.clearcoatRoughnessMapUv),n.push(i.iridescenceMapUv),n.push(i.iridescenceThicknessMapUv),n.push(i.sheenColorMapUv),n.push(i.sheenRoughnessMapUv),n.push(i.specularMapUv),n.push(i.specularColorMapUv),n.push(i.specularIntensityMapUv),n.push(i.transmissionMapUv),n.push(i.thicknessMapUv),n.push(i.combine),n.push(i.fogExp2),n.push(i.sizeAttenuation),n.push(i.morphTargetsCount),n.push(i.morphAttributeCount),n.push(i.numDirLights),n.push(i.numPointLights),n.push(i.numSpotLights),n.push(i.numSpotLightMaps),n.push(i.numHemiLights),n.push(i.numRectAreaLights),n.push(i.numDirLightShadows),n.push(i.numPointLightShadows),n.push(i.numSpotLightShadows),n.push(i.numSpotLightShadowsWithMaps),n.push(i.numLightProbes),n.push(i.shadowMapType),n.push(i.toneMapping),n.push(i.numClippingPlanes),n.push(i.numClipIntersection),n.push(i.depthPacking),r=s,a=t,o.disableAll(),a.supportsVertexTextures&&o.enable(0),a.instancing&&o.enable(1),a.instancingColor&&o.enable(2),a.instancingMorph&&o.enable(3),a.matcap&&o.enable(4),a.envMap&&o.enable(5),a.normalMapObjectSpace&&o.enable(6),a.normalMapTangentSpace&&o.enable(7),a.clearcoat&&o.enable(8),a.iridescence&&o.enable(9),a.alphaTest&&o.enable(10),a.vertexColors&&o.enable(11),a.vertexAlphas&&o.enable(12),a.vertexUv1s&&o.enable(13),a.vertexUv2s&&o.enable(14),a.vertexUv3s&&o.enable(15),a.vertexTangents&&o.enable(16),a.anisotropy&&o.enable(17),a.alphaHash&&o.enable(18),a.batching&&o.enable(19),a.dispersion&&o.enable(20),a.batchingColor&&o.enable(21),a.gradientMap&&o.enable(22),r.push(o.mask),o.disableAll(),a.fog&&o.enable(0),a.useFog&&o.enable(1),a.flatShading&&o.enable(2),a.logarithmicDepthBuffer&&o.enable(3),a.reverseDepthBuffer&&o.enable(4),a.skinning&&o.enable(5),a.morphTargets&&o.enable(6),a.morphNormals&&o.enable(7),a.morphColors&&o.enable(8),a.premultipliedAlpha&&o.enable(9),a.shadowMapEnabled&&o.enable(10),a.doubleSided&&o.enable(11),a.flipSided&&o.enable(12),a.useDepthPacking&&o.enable(13),a.dithering&&o.enable(14),a.transmission&&o.enable(15),a.sheen&&o.enable(16),a.opaque&&o.enable(17),a.pointsUvs&&o.enable(18),a.decodeVideoTexture&&o.enable(19),a.decodeVideoTextureEmissive&&o.enable(20),a.alphaToCoverage&&o.enable(21),r.push(o.mask),s.push(e.outputColorSpace)),s.push(t.customProgramCacheKey),s.join()},getUniforms:function(e){let t,n=f[e.type];return t=n?tX(rm[n].uniforms):e.uniforms},acquireProgram:function(t,n){let i;for(let e=0,t=u.length;e<t;e++){let t=u[e];if(t.cacheKey===n){i=t,++i.usedTimes;break}}return void 0===i&&(i=new a5(e,n,t,a),u.push(i)),i},releaseProgram:function(e){if(0==--e.usedTimes){let t=u.indexOf(e);u[t]=u[u.length-1],u.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:u,dispose:function(){l.dispose()}}}function se(){let e=new WeakMap;return{has:function(t){return e.has(t)},get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,i){e.get(t)[n]=i},dispose:function(){e=new WeakMap}}}function st(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function sn(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function si(){let e=[],t=0,n=[],i=[],r=[];function a(n,i,r,a,s,o){let l=e[t];return void 0===l?(l={id:n.id,object:n,geometry:i,material:r,groupOrder:a,renderOrder:n.renderOrder,z:s,group:o},e[t]=l):(l.id=n.id,l.object=n,l.geometry=i,l.material=r,l.groupOrder=a,l.renderOrder=n.renderOrder,l.z=s,l.group=o),t++,l}return{opaque:n,transmissive:i,transparent:r,init:function(){t=0,n.length=0,i.length=0,r.length=0},push:function(e,t,s,o,l,h){let u=a(e,t,s,o,l,h);s.transmission>0?i.push(u):!0===s.transparent?r.push(u):n.push(u)},unshift:function(e,t,s,o,l,h){let u=a(e,t,s,o,l,h);s.transmission>0?i.unshift(u):!0===s.transparent?r.unshift(u):n.unshift(u)},finish:function(){for(let n=t,i=e.length;n<i;n++){let t=e[n];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){n.length>1&&n.sort(e||st),i.length>1&&i.sort(t||sn),r.length>1&&r.sort(t||sn)}}}function sr(){let e=new WeakMap;return{get:function(t,n){let i,r=e.get(t);return void 0===r?(i=new si,e.set(t,[i])):n>=r.length?(i=new si,r.push(i)):i=r[n],i},dispose:function(){e=new WeakMap}}}function sa(){let e={};return{get:function(t){let n;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":n={direction:new I,color:new td};break;case"SpotLight":n={position:new I,direction:new I,color:new td,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new I,color:new td,distance:0,decay:0};break;case"HemisphereLight":n={direction:new I,skyColor:new td,groundColor:new td};break;case"RectAreaLight":n={color:new td,position:new I,halfWidth:new I,halfHeight:new I}}return e[t.id]=n,n}}}let ss=0;function so(e,t){return 2*!!t.castShadow-2*!!e.castShadow+ +!!t.map-!!e.map}function sl(e){let t=new sa,n=function(){let e={};return{get:function(t){let n;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new P};break;case"PointLight":n={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new P,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let e=0;e<9;e++)i.probe.push(new I);let r=new I,a=new eP,s=new eP;return{setup:function(r){let a=0,s=0,o=0;for(let e=0;e<9;e++)i.probe[e].set(0,0,0);let l=0,h=0,u=0,c=0,d=0,p=0,f=0,m=0,g=0,v=0,_=0;r.sort(so);for(let e=0,y=r.length;e<y;e++){let y=r[e],x=y.color,b=y.intensity,M=y.distance,S=y.shadow&&y.shadow.map?y.shadow.map.texture:null;if(y.isAmbientLight)a+=x.r*b,s+=x.g*b,o+=x.b*b;else if(y.isLightProbe){for(let e=0;e<9;e++)i.probe[e].addScaledVector(y.sh.coefficients[e],b);_++}else if(y.isDirectionalLight){let e=t.get(y);if(e.color.copy(y.color).multiplyScalar(y.intensity),y.castShadow){let e=y.shadow,t=n.get(y);t.shadowIntensity=e.intensity,t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,i.directionalShadow[l]=t,i.directionalShadowMap[l]=S,i.directionalShadowMatrix[l]=y.shadow.matrix,p++}i.directional[l]=e,l++}else if(y.isSpotLight){let e=t.get(y);e.position.setFromMatrixPosition(y.matrixWorld),e.color.copy(x).multiplyScalar(b),e.distance=M,e.coneCos=Math.cos(y.angle),e.penumbraCos=Math.cos(y.angle*(1-y.penumbra)),e.decay=y.decay,i.spot[u]=e;let r=y.shadow;if(y.map&&(i.spotLightMap[g]=y.map,g++,r.updateMatrices(y),y.castShadow&&v++),i.spotLightMatrix[u]=r.matrix,y.castShadow){let e=n.get(y);e.shadowIntensity=r.intensity,e.shadowBias=r.bias,e.shadowNormalBias=r.normalBias,e.shadowRadius=r.radius,e.shadowMapSize=r.mapSize,i.spotShadow[u]=e,i.spotShadowMap[u]=S,m++}u++}else if(y.isRectAreaLight){let e=t.get(y);e.color.copy(x).multiplyScalar(b),e.halfWidth.set(.5*y.width,0,0),e.halfHeight.set(0,.5*y.height,0),i.rectArea[c]=e,c++}else if(y.isPointLight){let e=t.get(y);if(e.color.copy(y.color).multiplyScalar(y.intensity),e.distance=y.distance,e.decay=y.decay,y.castShadow){let e=y.shadow,t=n.get(y);t.shadowIntensity=e.intensity,t.shadowBias=e.bias,t.shadowNormalBias=e.normalBias,t.shadowRadius=e.radius,t.shadowMapSize=e.mapSize,t.shadowCameraNear=e.camera.near,t.shadowCameraFar=e.camera.far,i.pointShadow[h]=t,i.pointShadowMap[h]=S,i.pointShadowMatrix[h]=y.shadow.matrix,f++}i.point[h]=e,h++}else if(y.isHemisphereLight){let e=t.get(y);e.skyColor.copy(y.color).multiplyScalar(b),e.groundColor.copy(y.groundColor).multiplyScalar(b),i.hemi[d]=e,d++}}c>0&&(!0===e.has("OES_texture_float_linear")?(i.rectAreaLTC1=rf.LTC_FLOAT_1,i.rectAreaLTC2=rf.LTC_FLOAT_2):(i.rectAreaLTC1=rf.LTC_HALF_1,i.rectAreaLTC2=rf.LTC_HALF_2)),i.ambient[0]=a,i.ambient[1]=s,i.ambient[2]=o;let y=i.hash;(y.directionalLength!==l||y.pointLength!==h||y.spotLength!==u||y.rectAreaLength!==c||y.hemiLength!==d||y.numDirectionalShadows!==p||y.numPointShadows!==f||y.numSpotShadows!==m||y.numSpotMaps!==g||y.numLightProbes!==_)&&(i.directional.length=l,i.spot.length=u,i.rectArea.length=c,i.point.length=h,i.hemi.length=d,i.directionalShadow.length=p,i.directionalShadowMap.length=p,i.pointShadow.length=f,i.pointShadowMap.length=f,i.spotShadow.length=m,i.spotShadowMap.length=m,i.directionalShadowMatrix.length=p,i.pointShadowMatrix.length=f,i.spotLightMatrix.length=m+g-v,i.spotLightMap.length=g,i.numSpotLightShadowsWithMaps=v,i.numLightProbes=_,y.directionalLength=l,y.pointLength=h,y.spotLength=u,y.rectAreaLength=c,y.hemiLength=d,y.numDirectionalShadows=p,y.numPointShadows=f,y.numSpotShadows=m,y.numSpotMaps=g,y.numLightProbes=_,i.version=ss++)},setupView:function(e,t){let n=0,o=0,l=0,h=0,u=0,c=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){let d=e[t];if(d.isDirectionalLight){let e=i.directional[n];e.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(c),n++}else if(d.isSpotLight){let e=i.spot[l];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(c),e.direction.setFromMatrixPosition(d.matrixWorld),r.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(r),e.direction.transformDirection(c),l++}else if(d.isRectAreaLight){let e=i.rectArea[h];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(c),s.identity(),a.copy(d.matrixWorld),a.premultiply(c),s.extractRotation(a),e.halfWidth.set(.5*d.width,0,0),e.halfHeight.set(0,.5*d.height,0),e.halfWidth.applyMatrix4(s),e.halfHeight.applyMatrix4(s),h++}else if(d.isPointLight){let e=i.point[o];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(c),o++}else if(d.isHemisphereLight){let e=i.hemi[u];e.direction.setFromMatrixPosition(d.matrixWorld),e.direction.transformDirection(c),u++}}},state:i}}function sh(e){let t=new sl(e),n=[],i=[],r={lightsArray:n,shadowsArray:i,camera:null,lights:t,transmissionRenderTarget:{}};return{init:function(e){r.camera=e,n.length=0,i.length=0},state:r,setupLights:function(){t.setup(n)},setupLightsView:function(e){t.setupView(n,e)},pushLight:function(e){n.push(e)},pushShadow:function(e){i.push(e)}}}function su(e){let t=new WeakMap;return{get:function(n,i=0){let r,a=t.get(n);return void 0===a?(r=new sh(e),t.set(n,[r])):i>=a.length?(r=new sh(e),a.push(r)):r=a[i],r},dispose:function(){t=new WeakMap}}}function sc(e,t,n){let i=new nI,r=new P,a=new P,s=new Q,o=new iu({depthPacking:3201}),l=new ic,h={},u=n.maxTextureSize,c={0:1,1:0,2:2},d=new tK({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new P},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;let f=new tL;f.setAttribute("position",new tx(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let m=new tG(f,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let v=this.type;function _(t,n,i,r){let a=null,s=!0===i.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==s)a=s;else if(a=!0===i.isPointLight?l:o,e.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0||!0===n.alphaToCoverage){let e=a.uuid,t=n.uuid,i=h[e];void 0===i&&(i={},h[e]=i);let r=i[t];void 0===r&&(r=a.clone(),i[t]=r,n.addEventListener("dispose",y)),a=r}return a.visible=n.visible,a.wireframe=n.wireframe,3===r?a.side=null!==n.shadowSide?n.shadowSide:n.side:a.side=null!==n.shadowSide?n.shadowSide:c[n.side],a.alphaMap=n.alphaMap,a.alphaTest=!0===n.alphaToCoverage?.5:n.alphaTest,a.map=n.map,a.clipShadows=n.clipShadows,a.clippingPlanes=n.clippingPlanes,a.clipIntersection=n.clipIntersection,a.displacementMap=n.displacementMap,a.displacementScale=n.displacementScale,a.displacementBias=n.displacementBias,a.wireframeLinewidth=n.wireframeLinewidth,a.linewidth=n.linewidth,!0===i.isPointLight&&!0===a.isMeshDistanceMaterial&&(e.properties.get(a).light=i),a}function y(e){for(let t in e.target.removeEventListener("dispose",y),h){let n=h[t],i=e.target.uuid;i in n&&(n[i].dispose(),delete n[i])}}this.render=function(n,o,l){if(!1===g.enabled||!1===g.autoUpdate&&!1===g.needsUpdate||0===n.length)return;let h=e.getRenderTarget(),c=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),y=e.state;y.setBlending(0),y.buffers.color.setClear(1,1,1,1),y.buffers.depth.setTest(!0),y.setScissorTest(!1);let x=3!==v&&3===this.type,b=3===v&&3!==this.type;for(let h=0,c=n.length;h<c;h++){let c=n[h],f=c.shadow;if(void 0===f){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===f.autoUpdate&&!1===f.needsUpdate)continue;r.copy(f.mapSize);let g=f.getFrameExtents();if(r.multiply(g),a.copy(f.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(a.x=Math.floor(u/g.x),r.x=a.x*g.x,f.mapSize.x=a.x),r.y>u&&(a.y=Math.floor(u/g.y),r.y=a.y*g.y,f.mapSize.y=a.y)),null===f.map||!0===x||!0===b){let e=3!==this.type?{minFilter:1003,magFilter:1003}:{};null!==f.map&&f.map.dispose(),f.map=new et(r.x,r.y,e),f.map.texture.name=c.name+".shadowMap",f.camera.updateProjectionMatrix()}e.setRenderTarget(f.map),e.clear();let v=f.getViewportCount();for(let n=0;n<v;n++){let r=f.getViewport(n);s.set(a.x*r.x,a.y*r.y,a.x*r.z,a.y*r.w),y.viewport(s),f.updateMatrices(c,n),i=f.getFrustum(),function n(r,a,s,o,l){if(!1===r.visible)return;if(r.layers.test(a.layers)&&(r.isMesh||r.isLine||r.isPoints)&&(r.castShadow||r.receiveShadow&&3===l)&&(!r.frustumCulled||i.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,r.matrixWorld);let n=t.update(r),i=r.material;if(Array.isArray(i)){let t=n.groups;for(let h=0,u=t.length;h<u;h++){let u=t[h],c=i[u.materialIndex];if(c&&c.visible){let t=_(r,c,o,l);r.onBeforeShadow(e,r,a,s,n,t,u),e.renderBufferDirect(s,null,n,t,r,u),r.onAfterShadow(e,r,a,s,n,t,u)}}}else if(i.visible){let t=_(r,i,o,l);r.onBeforeShadow(e,r,a,s,n,t,null),e.renderBufferDirect(s,null,n,t,r,null),r.onAfterShadow(e,r,a,s,n,t,null)}}let h=r.children;for(let e=0,t=h.length;e<t;e++)n(h[e],a,s,o,l)}(o,l,f.camera,c,this.type)}!0!==f.isPointLightShadow&&3===this.type&&function(n,i){let a=t.update(m);d.defines.VSM_SAMPLES!==n.blurSamples&&(d.defines.VSM_SAMPLES=n.blurSamples,p.defines.VSM_SAMPLES=n.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new et(r.x,r.y)),d.uniforms.shadow_pass.value=n.map.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(i,null,a,d,m,null),p.uniforms.shadow_pass.value=n.mapPass.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(i,null,a,p,m,null)}(f,l),f.needsUpdate=!1}v=this.type,g.needsUpdate=!1,e.setRenderTarget(h,c,f)}}const sd={0:1,2:6,4:7,3:5,1:0,6:2,7:4,5:3};function sp(e,t){let n=new function(){let t=!1,n=new Q,i=null,r=new Q(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,a,s,o){!0===o&&(t*=s,i*=s,a*=s),n.set(t,i,a,s),!1===r.equals(n)&&(e.clearColor(t,i,a,s),r.copy(n))},reset:function(){t=!1,i=null,r.set(-1,0,0,0)}}},i=new function(){let n=!1,i=!1,r=null,a=null,s=null;return{setReversed:function(e){if(i!==e){let n=t.get("EXT_clip_control");e?n.clipControlEXT(n.LOWER_LEFT_EXT,n.ZERO_TO_ONE_EXT):n.clipControlEXT(n.LOWER_LEFT_EXT,n.NEGATIVE_ONE_TO_ONE_EXT),i=e;let r=s;s=null,this.setClear(r)}},getReversed:function(){return i},setTest:function(t){t?z(e.DEPTH_TEST):k(e.DEPTH_TEST)},setMask:function(t){r===t||n||(e.depthMask(t),r=t)},setFunc:function(t){if(i&&(t=sd[t]),a!==t){switch(t){case 0:e.depthFunc(e.NEVER);break;case 1:e.depthFunc(e.ALWAYS);break;case 2:e.depthFunc(e.LESS);break;case 3:default:e.depthFunc(e.LEQUAL);break;case 4:e.depthFunc(e.EQUAL);break;case 5:e.depthFunc(e.GEQUAL);break;case 6:e.depthFunc(e.GREATER);break;case 7:e.depthFunc(e.NOTEQUAL)}a=t}},setLocked:function(e){n=e},setClear:function(t){s!==t&&(i&&(t=1-t),e.clearDepth(t),s=t)},reset:function(){n=!1,r=null,a=null,s=null,i=!1}}},r=new function(){let t=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,h=null;return{setTest:function(n){t||(n?z(e.STENCIL_TEST):k(e.STENCIL_TEST))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,s){(i!==t||r!==n||a!==s)&&(e.stencilFunc(t,n,s),i=t,r=n,a=s)},setOp:function(t,n,i){(s!==t||o!==n||l!==i)&&(e.stencilOp(t,n,i),s=t,o=n,l=i)},setLocked:function(e){t=e},setClear:function(t){h!==t&&(e.clearStencil(t),h=t)},reset:function(){t=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,h=null}}},a=new WeakMap,s=new WeakMap,o={},l={},h=new WeakMap,u=[],c=null,d=!1,p=null,f=null,m=null,g=null,v=null,_=null,y=null,x=new td(0,0,0),b=0,M=!1,S=null,E=null,T=null,w=null,A=null,R=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),C=!1,P=e.getParameter(e.VERSION);-1!==P.indexOf("WebGL")?C=parseFloat(/^WebGL (\d)/.exec(P)[1])>=1:-1!==P.indexOf("OpenGL ES")&&(C=parseFloat(/^OpenGL ES (\d)/.exec(P)[1])>=2);let L=null,I={},N=e.getParameter(e.SCISSOR_BOX),D=e.getParameter(e.VIEWPORT),U=new Q().fromArray(N),O=new Q().fromArray(D);function F(t,n,i,r){let a=new Uint8Array(4),s=e.createTexture();e.bindTexture(t,s),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let s=0;s<i;s++)t===e.TEXTURE_3D||t===e.TEXTURE_2D_ARRAY?e.texImage3D(n,0,e.RGBA,1,1,r,0,e.RGBA,e.UNSIGNED_BYTE,a):e.texImage2D(n+s,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,a);return s}let B={};function z(t){!0!==o[t]&&(e.enable(t),o[t]=!0)}function k(t){!1!==o[t]&&(e.disable(t),o[t]=!1)}B[e.TEXTURE_2D]=F(e.TEXTURE_2D,e.TEXTURE_2D,1),B[e.TEXTURE_CUBE_MAP]=F(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),B[e.TEXTURE_2D_ARRAY]=F(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),B[e.TEXTURE_3D]=F(e.TEXTURE_3D,e.TEXTURE_3D,1,1),n.setClear(0,0,0,1),i.setClear(1),r.setClear(0),z(e.DEPTH_TEST),i.setFunc(3),W(!1),j(1),z(e.CULL_FACE),G(0);let H={100:e.FUNC_ADD,101:e.FUNC_SUBTRACT,102:e.FUNC_REVERSE_SUBTRACT};H[103]=e.MIN,H[104]=e.MAX;let V={200:e.ZERO,201:e.ONE,202:e.SRC_COLOR,204:e.SRC_ALPHA,210:e.SRC_ALPHA_SATURATE,208:e.DST_COLOR,206:e.DST_ALPHA,203:e.ONE_MINUS_SRC_COLOR,205:e.ONE_MINUS_SRC_ALPHA,209:e.ONE_MINUS_DST_COLOR,207:e.ONE_MINUS_DST_ALPHA,211:e.CONSTANT_COLOR,212:e.ONE_MINUS_CONSTANT_COLOR,213:e.CONSTANT_ALPHA,214:e.ONE_MINUS_CONSTANT_ALPHA};function G(t,n,i,r,a,s,o,l,h,u){if(0===t){!0===d&&(k(e.BLEND),d=!1);return}if(!1===d&&(z(e.BLEND),d=!0),5!==t){if(t!==p||u!==M){if((100!==f||100!==v)&&(e.blendEquation(e.FUNC_ADD),f=100,v=100),u)switch(t){case 1:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.ONE,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFuncSeparate(e.DST_COLOR,e.ONE_MINUS_SRC_ALPHA,e.ZERO,e.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE,e.ONE,e.ONE);break;case 3:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case 4:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}m=null,g=null,_=null,y=null,x.set(0,0,0),b=0,p=t,M=u}return}a=a||n,s=s||i,o=o||r,(n!==f||a!==v)&&(e.blendEquationSeparate(H[n],H[a]),f=n,v=a),(i!==m||r!==g||s!==_||o!==y)&&(e.blendFuncSeparate(V[i],V[r],V[s],V[o]),m=i,g=r,_=s,y=o),(!1===l.equals(x)||h!==b)&&(e.blendColor(l.r,l.g,l.b,h),x.copy(l),b=h),p=t,M=!1}function W(t){S!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),S=t)}function j(t){0!==t?(z(e.CULL_FACE),t!==E&&(1===t?e.cullFace(e.BACK):2===t?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):k(e.CULL_FACE),E=t}function X(t,n,i){t?(z(e.POLYGON_OFFSET_FILL),(w!==n||A!==i)&&(e.polygonOffset(n,i),w=n,A=i)):k(e.POLYGON_OFFSET_FILL)}return{buffers:{color:n,depth:i,stencil:r},enable:z,disable:k,bindFramebuffer:function(t,n){return l[t]!==n&&(e.bindFramebuffer(t,n),l[t]=n,t===e.DRAW_FRAMEBUFFER&&(l[e.FRAMEBUFFER]=n),t===e.FRAMEBUFFER&&(l[e.DRAW_FRAMEBUFFER]=n),!0)},drawBuffers:function(t,n){let i=u,r=!1;if(t){void 0===(i=h.get(n))&&(i=[],h.set(n,i));let a=t.textures;if(i.length!==a.length||i[0]!==e.COLOR_ATTACHMENT0){for(let t=0,n=a.length;t<n;t++)i[t]=e.COLOR_ATTACHMENT0+t;i.length=a.length,r=!0}}else i[0]!==e.BACK&&(i[0]=e.BACK,r=!0);r&&e.drawBuffers(i)},useProgram:function(t){return c!==t&&(e.useProgram(t),c=t,!0)},setBlending:G,setMaterial:function(t,a){2===t.side?k(e.CULL_FACE):z(e.CULL_FACE);let s=1===t.side;a&&(s=!s),W(s),1===t.blending&&!1===t.transparent?G(0):G(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.blendColor,t.blendAlpha,t.premultipliedAlpha),i.setFunc(t.depthFunc),i.setTest(t.depthTest),i.setMask(t.depthWrite),n.setMask(t.colorWrite);let o=t.stencilWrite;r.setTest(o),o&&(r.setMask(t.stencilWriteMask),r.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),r.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),X(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?z(e.SAMPLE_ALPHA_TO_COVERAGE):k(e.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:W,setCullFace:j,setLineWidth:function(t){t!==T&&(C&&e.lineWidth(t),T=t)},setPolygonOffset:X,setScissorTest:function(t){t?z(e.SCISSOR_TEST):k(e.SCISSOR_TEST)},activeTexture:function(t){void 0===t&&(t=e.TEXTURE0+R-1),L!==t&&(e.activeTexture(t),L=t)},bindTexture:function(t,n,i){void 0===i&&(i=null===L?e.TEXTURE0+R-1:L);let r=I[i];void 0===r&&(r={type:void 0,texture:void 0},I[i]=r),(r.type!==t||r.texture!==n)&&(L!==i&&(e.activeTexture(i),L=i),e.bindTexture(t,n||B[t]),r.type=t,r.texture=n)},unbindTexture:function(){let t=I[L];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexImage3D:function(){try{e.compressedTexImage3D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},updateUBOMapping:function(t,n){let i=s.get(n);void 0===i&&(i=new WeakMap,s.set(n,i));let r=i.get(t);void 0===r&&(r=e.getUniformBlockIndex(n,t.name),i.set(t,r))},uniformBlockBinding:function(t,n){let i=s.get(n).get(t);a.get(n)!==i&&(e.uniformBlockBinding(n,i,t.__bindingPointIndex),a.set(n,i))},texStorage2D:function(){try{e.texStorage2D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D(...arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===U.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),U.copy(t))},viewport:function(t){!1===O.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),O.copy(t))},reset:function(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.blendColor(0,0,0,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),i.setReversed(!1),e.clearDepth(1),e.stencilMask(0xffffffff),e.stencilFunc(e.ALWAYS,0,0xffffffff),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),o={},L=null,I={},l={},h=new WeakMap,u=[],c=null,d=!1,p=null,f=null,m=null,g=null,v=null,_=null,y=null,x=new td(0,0,0),b=0,M=!1,S=null,E=null,T=null,w=null,A=null,U.set(0,0,e.canvas.width,e.canvas.height),O.set(0,0,e.canvas.width,e.canvas.height),n.reset(),i.reset(),r.reset()}}}function sf(e,t,n,i,r,a,s){let o,l=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,h="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),u=new P,c=new WeakMap,d=new WeakMap,p=!1;try{p="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function f(e,t){return p?new OffscreenCanvas(e,t):B("canvas")}function m(e,t,n){let i=1,r=Y(e);if((r.width>n||r.height>n)&&(i=n/Math.max(r.width,r.height)),i<1)if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof VideoFrame&&e instanceof VideoFrame){let n=Math.floor(i*r.width),a=Math.floor(i*r.height);void 0===o&&(o=f(n,a));let s=t?f(n,a):o;return s.width=n,s.height=a,s.getContext("2d").drawImage(e,0,0,n,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+r.width+"x"+r.height+") to ("+n+"x"+a+")."),s}else"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+r.width+"x"+r.height+").");return e}function g(e){return e.generateMipmaps}function v(t){e.generateMipmap(t)}function b(n,i,r,a,s=!1){if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let o=i;if(i===e.RED&&(r===e.FLOAT&&(o=e.R32F),r===e.HALF_FLOAT&&(o=e.R16F),r===e.UNSIGNED_BYTE&&(o=e.R8)),i===e.RED_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.R8UI),r===e.UNSIGNED_SHORT&&(o=e.R16UI),r===e.UNSIGNED_INT&&(o=e.R32UI),r===e.BYTE&&(o=e.R8I),r===e.SHORT&&(o=e.R16I),r===e.INT&&(o=e.R32I)),i===e.RG&&(r===e.FLOAT&&(o=e.RG32F),r===e.HALF_FLOAT&&(o=e.RG16F),r===e.UNSIGNED_BYTE&&(o=e.RG8)),i===e.RG_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.RG8UI),r===e.UNSIGNED_SHORT&&(o=e.RG16UI),r===e.UNSIGNED_INT&&(o=e.RG32UI),r===e.BYTE&&(o=e.RG8I),r===e.SHORT&&(o=e.RG16I),r===e.INT&&(o=e.RG32I)),i===e.RGB_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.RGB8UI),r===e.UNSIGNED_SHORT&&(o=e.RGB16UI),r===e.UNSIGNED_INT&&(o=e.RGB32UI),r===e.BYTE&&(o=e.RGB8I),r===e.SHORT&&(o=e.RGB16I),r===e.INT&&(o=e.RGB32I)),i===e.RGBA_INTEGER&&(r===e.UNSIGNED_BYTE&&(o=e.RGBA8UI),r===e.UNSIGNED_SHORT&&(o=e.RGBA16UI),r===e.UNSIGNED_INT&&(o=e.RGBA32UI),r===e.BYTE&&(o=e.RGBA8I),r===e.SHORT&&(o=e.RGBA16I),r===e.INT&&(o=e.RGBA32I)),i===e.RGB&&r===e.UNSIGNED_INT_5_9_9_9_REV&&(o=e.RGB9_E5),i===e.RGBA){let t=s?y:G.getTransfer(a);r===e.FLOAT&&(o=e.RGBA32F),r===e.HALF_FLOAT&&(o=e.RGBA16F),r===e.UNSIGNED_BYTE&&(o=t===x?e.SRGB8_ALPHA8:e.RGBA8),r===e.UNSIGNED_SHORT_4_4_4_4&&(o=e.RGBA4),r===e.UNSIGNED_SHORT_5_5_5_1&&(o=e.RGB5_A1)}return(o===e.R16F||o===e.R32F||o===e.RG16F||o===e.RG32F||o===e.RGBA16F||o===e.RGBA32F)&&t.get("EXT_color_buffer_float"),o}function M(t,n){let i;return t?null===n||1014===n||1020===n?i=e.DEPTH24_STENCIL8:1015===n?i=e.DEPTH32F_STENCIL8:1012===n&&(i=e.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):null===n||1014===n||1020===n?i=e.DEPTH_COMPONENT24:1015===n?i=e.DEPTH_COMPONENT32F:1012===n&&(i=e.DEPTH_COMPONENT16),i}function S(e,t){return!0===g(e)||e.isFramebufferTexture&&1003!==e.minFilter&&1006!==e.minFilter?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function E(e){let t=e.target;t.removeEventListener("dispose",E),function(e){let t=i.get(e);if(void 0===t.__webglInit)return;let n=e.source,r=d.get(n);if(r){let i=r[t.__cacheKey];i.usedTimes--,0===i.usedTimes&&w(e),0===Object.keys(r).length&&d.delete(n)}i.remove(e)}(t),t.isVideoTexture&&c.delete(t)}function T(t){let n=t.target;n.removeEventListener("dispose",T),function(t){let n=i.get(t);if(t.depthTexture&&(t.depthTexture.dispose(),i.remove(t.depthTexture)),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++){if(Array.isArray(n.__webglFramebuffer[t]))for(let i=0;i<n.__webglFramebuffer[t].length;i++)e.deleteFramebuffer(n.__webglFramebuffer[t][i]);else e.deleteFramebuffer(n.__webglFramebuffer[t]);n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer[t])}else{if(Array.isArray(n.__webglFramebuffer))for(let t=0;t<n.__webglFramebuffer.length;t++)e.deleteFramebuffer(n.__webglFramebuffer[t]);else e.deleteFramebuffer(n.__webglFramebuffer);if(n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&e.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer)for(let t=0;t<n.__webglColorRenderbuffer.length;t++)n.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(n.__webglColorRenderbuffer[t]);n.__webglDepthRenderbuffer&&e.deleteRenderbuffer(n.__webglDepthRenderbuffer)}let r=t.textures;for(let t=0,n=r.length;t<n;t++){let n=i.get(r[t]);n.__webglTexture&&(e.deleteTexture(n.__webglTexture),s.memory.textures--),i.remove(r[t])}i.remove(t)}(n)}function w(t){let n=i.get(t);e.deleteTexture(n.__webglTexture);let r=t.source,a=d.get(r);delete a[n.__cacheKey],s.memory.textures--}let A=0;function R(t,r){let a=i.get(t);if(t.isVideoTexture&&function(e){let t=s.render.frame;c.get(e)!==t&&(c.set(e,t),e.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&a.__version!==t.version){let e=t.image;if(null===e)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==e.complete)return void O(a,t,r);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(e.TEXTURE_2D,a.__webglTexture,e.TEXTURE0+r)}let C={1e3:e.REPEAT,1001:e.CLAMP_TO_EDGE,1002:e.MIRRORED_REPEAT},L={1003:e.NEAREST,1004:e.NEAREST_MIPMAP_NEAREST,1005:e.NEAREST_MIPMAP_LINEAR,1006:e.LINEAR,1007:e.LINEAR_MIPMAP_NEAREST,1008:e.LINEAR_MIPMAP_LINEAR},I={512:e.NEVER,519:e.ALWAYS,513:e.LESS,515:e.LEQUAL,514:e.EQUAL,518:e.GEQUAL,516:e.GREATER,517:e.NOTEQUAL};function N(n,a){if((1015===a.type&&!1===t.has("OES_texture_float_linear")&&(1006===a.magFilter||1007===a.magFilter||1005===a.magFilter||1008===a.magFilter||1006===a.minFilter||1007===a.minFilter||1005===a.minFilter||1008===a.minFilter)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),e.texParameteri(n,e.TEXTURE_WRAP_S,C[a.wrapS]),e.texParameteri(n,e.TEXTURE_WRAP_T,C[a.wrapT]),(n===e.TEXTURE_3D||n===e.TEXTURE_2D_ARRAY)&&e.texParameteri(n,e.TEXTURE_WRAP_R,C[a.wrapR]),e.texParameteri(n,e.TEXTURE_MAG_FILTER,L[a.magFilter]),e.texParameteri(n,e.TEXTURE_MIN_FILTER,L[a.minFilter]),a.compareFunction&&(e.texParameteri(n,e.TEXTURE_COMPARE_MODE,e.COMPARE_REF_TO_TEXTURE),e.texParameteri(n,e.TEXTURE_COMPARE_FUNC,I[a.compareFunction])),!0===t.has("EXT_texture_filter_anisotropic"))&&1003!==a.magFilter&&(1005===a.minFilter||1008===a.minFilter)&&(1015!==a.type||!1!==t.has("OES_texture_float_linear"))&&(a.anisotropy>1||i.get(a).__currentAnisotropy)){let s=t.get("EXT_texture_filter_anisotropic");e.texParameterf(n,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy}}function D(t,n){let i=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",E));let r=n.source,a=d.get(r);void 0===a&&(a={},d.set(r,a));let o=function(e){let t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.colorSpace),t.join()}(n);if(o!==t.__cacheKey){void 0===a[o]&&(a[o]={texture:e.createTexture(),usedTimes:0},s.memory.textures++,i=!0),a[o].usedTimes++;let r=a[t.__cacheKey];void 0!==r&&(a[t.__cacheKey].usedTimes--,0===r.usedTimes&&w(n)),t.__cacheKey=o,t.__webglTexture=a[o].texture}return i}function U(e,t,n){return Math.floor(Math.floor(e/n)/t)}function O(t,s,o){let l=e.TEXTURE_2D;(s.isDataArrayTexture||s.isCompressedArrayTexture)&&(l=e.TEXTURE_2D_ARRAY),s.isData3DTexture&&(l=e.TEXTURE_3D);let h=D(t,s),u=s.source;n.bindTexture(l,t.__webglTexture,e.TEXTURE0+o);let c=i.get(u);if(u.version!==c.__version||!0===h){let t;n.activeTexture(e.TEXTURE0+o);let i=G.getPrimaries(G.workingColorSpace),d=""===s.colorSpace?null:G.getPrimaries(s.colorSpace),p=""===s.colorSpace||i===d?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,s.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,s.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,s.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,p);let f=m(s.image,!1,r.maxTextureSize);f=q(s,f);let _=a.convert(s.format,s.colorSpace),y=a.convert(s.type),x=b(s.internalFormat,_,y,s.colorSpace,s.isVideoTexture);N(l,s);let E=s.mipmaps,T=!0!==s.isVideoTexture,w=void 0===c.__version||!0===h,A=u.dataReady,R=S(s,f);if(s.isDepthTexture)x=M(1027===s.format,s.type),w&&(T?n.texStorage2D(e.TEXTURE_2D,1,x,f.width,f.height):n.texImage2D(e.TEXTURE_2D,0,x,f.width,f.height,0,_,y,null));else if(s.isDataTexture)if(E.length>0){T&&w&&n.texStorage2D(e.TEXTURE_2D,R,x,E[0].width,E[0].height);for(let i=0,r=E.length;i<r;i++)t=E[i],T?A&&n.texSubImage2D(e.TEXTURE_2D,i,0,0,t.width,t.height,_,y,t.data):n.texImage2D(e.TEXTURE_2D,i,x,t.width,t.height,0,_,y,t.data);s.generateMipmaps=!1}else T?(w&&n.texStorage2D(e.TEXTURE_2D,R,x,f.width,f.height),A&&function(t,i,r,a){let s=t.updateRanges;if(0===s.length)n.texSubImage2D(e.TEXTURE_2D,0,0,0,i.width,i.height,r,a,i.data);else{s.sort((e,t)=>e.start-t.start);let o=0;for(let e=1;e<s.length;e++){let t=s[o],n=s[e],r=t.start+t.count,a=U(n.start,i.width,4),l=U(t.start,i.width,4);n.start<=r+1&&a===l&&U(n.start+n.count-1,i.width,4)===a?t.count=Math.max(t.count,n.start+n.count-t.start):s[++o]=n}s.length=o+1;let l=e.getParameter(e.UNPACK_ROW_LENGTH),h=e.getParameter(e.UNPACK_SKIP_PIXELS),u=e.getParameter(e.UNPACK_SKIP_ROWS);e.pixelStorei(e.UNPACK_ROW_LENGTH,i.width);for(let t=0,o=s.length;t<o;t++){let o=s[t],l=Math.floor(o.start/4),h=Math.ceil(o.count/4),u=l%i.width,c=Math.floor(l/i.width);e.pixelStorei(e.UNPACK_SKIP_PIXELS,u),e.pixelStorei(e.UNPACK_SKIP_ROWS,c),n.texSubImage2D(e.TEXTURE_2D,0,u,c,h,1,r,a,i.data)}t.clearUpdateRanges(),e.pixelStorei(e.UNPACK_ROW_LENGTH,l),e.pixelStorei(e.UNPACK_SKIP_PIXELS,h),e.pixelStorei(e.UNPACK_SKIP_ROWS,u)}}(s,f,_,y)):n.texImage2D(e.TEXTURE_2D,0,x,f.width,f.height,0,_,y,f.data);else if(s.isCompressedTexture)if(s.isCompressedArrayTexture){T&&w&&n.texStorage3D(e.TEXTURE_2D_ARRAY,R,x,E[0].width,E[0].height,f.depth);for(let i=0,r=E.length;i<r;i++)if(t=E[i],1023!==s.format)if(null!==_)if(T){if(A)if(s.layerUpdates.size>0){let r=ru(t.width,t.height,s.format,s.type);for(let a of s.layerUpdates){let s=t.data.subarray(a*r/t.data.BYTES_PER_ELEMENT,(a+1)*r/t.data.BYTES_PER_ELEMENT);n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,i,0,0,a,t.width,t.height,1,_,s)}s.clearLayerUpdates()}else n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,i,0,0,0,t.width,t.height,f.depth,_,t.data)}else n.compressedTexImage3D(e.TEXTURE_2D_ARRAY,i,x,t.width,t.height,f.depth,0,t.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else T?A&&n.texSubImage3D(e.TEXTURE_2D_ARRAY,i,0,0,0,t.width,t.height,f.depth,_,y,t.data):n.texImage3D(e.TEXTURE_2D_ARRAY,i,x,t.width,t.height,f.depth,0,_,y,t.data)}else{T&&w&&n.texStorage2D(e.TEXTURE_2D,R,x,E[0].width,E[0].height);for(let i=0,r=E.length;i<r;i++)t=E[i],1023!==s.format?null!==_?T?A&&n.compressedTexSubImage2D(e.TEXTURE_2D,i,0,0,t.width,t.height,_,t.data):n.compressedTexImage2D(e.TEXTURE_2D,i,x,t.width,t.height,0,t.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):T?A&&n.texSubImage2D(e.TEXTURE_2D,i,0,0,t.width,t.height,_,y,t.data):n.texImage2D(e.TEXTURE_2D,i,x,t.width,t.height,0,_,y,t.data)}else if(s.isDataArrayTexture)if(T){if(w&&n.texStorage3D(e.TEXTURE_2D_ARRAY,R,x,f.width,f.height,f.depth),A)if(s.layerUpdates.size>0){let t=ru(f.width,f.height,s.format,s.type);for(let i of s.layerUpdates){let r=f.data.subarray(i*t/f.data.BYTES_PER_ELEMENT,(i+1)*t/f.data.BYTES_PER_ELEMENT);n.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,i,f.width,f.height,1,_,y,r)}s.clearLayerUpdates()}else n.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,f.width,f.height,f.depth,_,y,f.data)}else n.texImage3D(e.TEXTURE_2D_ARRAY,0,x,f.width,f.height,f.depth,0,_,y,f.data);else if(s.isData3DTexture)T?(w&&n.texStorage3D(e.TEXTURE_3D,R,x,f.width,f.height,f.depth),A&&n.texSubImage3D(e.TEXTURE_3D,0,0,0,0,f.width,f.height,f.depth,_,y,f.data)):n.texImage3D(e.TEXTURE_3D,0,x,f.width,f.height,f.depth,0,_,y,f.data);else if(s.isFramebufferTexture){if(w)if(T)n.texStorage2D(e.TEXTURE_2D,R,x,f.width,f.height);else{let t=f.width,i=f.height;for(let r=0;r<R;r++)n.texImage2D(e.TEXTURE_2D,r,x,t,i,0,_,y,null),t>>=1,i>>=1}}else if(E.length>0){if(T&&w){let t=Y(E[0]);n.texStorage2D(e.TEXTURE_2D,R,x,t.width,t.height)}for(let i=0,r=E.length;i<r;i++)t=E[i],T?A&&n.texSubImage2D(e.TEXTURE_2D,i,0,0,_,y,t):n.texImage2D(e.TEXTURE_2D,i,x,_,y,t);s.generateMipmaps=!1}else if(T){if(w){let t=Y(f);n.texStorage2D(e.TEXTURE_2D,R,x,t.width,t.height)}A&&n.texSubImage2D(e.TEXTURE_2D,0,0,0,_,y,f)}else n.texImage2D(e.TEXTURE_2D,0,x,_,y,f);g(s)&&v(l),c.__version=u.version,s.onUpdate&&s.onUpdate(s)}t.__version=s.version}function F(t,r,s,o,h,u){let c=a.convert(s.format,s.colorSpace),d=a.convert(s.type),p=b(s.internalFormat,c,d,s.colorSpace),f=i.get(r),m=i.get(s);if(m.__renderTarget=r,!f.__hasExternalTextures){let t=Math.max(1,r.width>>u),i=Math.max(1,r.height>>u);h===e.TEXTURE_3D||h===e.TEXTURE_2D_ARRAY?n.texImage3D(h,u,p,t,i,r.depth,0,c,d,null):n.texImage2D(h,u,p,t,i,0,c,d,null)}n.bindFramebuffer(e.FRAMEBUFFER,t),X(r)?l.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,o,h,m.__webglTexture,0,j(r)):(h===e.TEXTURE_2D||h>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&h<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,o,h,m.__webglTexture,u),n.bindFramebuffer(e.FRAMEBUFFER,null)}function z(t,n,i){if(e.bindRenderbuffer(e.RENDERBUFFER,t),n.depthBuffer){let r=n.depthTexture,a=r&&r.isDepthTexture?r.type:null,s=M(n.stencilBuffer,a),o=n.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,h=j(n);X(n)?l.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,h,s,n.width,n.height):i?e.renderbufferStorageMultisample(e.RENDERBUFFER,h,s,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,s,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,o,e.RENDERBUFFER,t)}else{let t=n.textures;for(let r=0;r<t.length;r++){let s=t[r],o=a.convert(s.format,s.colorSpace),h=a.convert(s.type),u=b(s.internalFormat,o,h,s.colorSpace),c=j(n);i&&!1===X(n)?e.renderbufferStorageMultisample(e.RENDERBUFFER,c,u,n.width,n.height):X(n)?l.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,c,u,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,u,n.width,n.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function k(t,r){if(r&&r.isWebGLCubeRenderTarget)throw Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(e.FRAMEBUFFER,t),!(r.depthTexture&&r.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");let a=i.get(r.depthTexture);a.__renderTarget=r,a.__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),R(r.depthTexture,0);let s=a.__webglTexture,o=j(r);if(1026===r.depthTexture.format)X(r)?l.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,s,0,o):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,s,0);else if(1027===r.depthTexture.format)X(r)?l.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,s,0,o):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,s,0);else throw Error("Unknown depthTexture format")}function H(t){let r=i.get(t),a=!0===t.isWebGLCubeRenderTarget;if(r.__boundDepthTexture!==t.depthTexture){let e=t.depthTexture;if(r.__depthDisposeCallback&&r.__depthDisposeCallback(),e){let t=()=>{delete r.__boundDepthTexture,delete r.__depthDisposeCallback,e.removeEventListener("dispose",t)};e.addEventListener("dispose",t),r.__depthDisposeCallback=t}r.__boundDepthTexture=e}if(t.depthTexture&&!r.__autoAllocateDepthBuffer){if(a)throw Error("target.depthTexture not supported in Cube render targets");let e=t.texture.mipmaps;e&&e.length>0?k(r.__webglFramebuffer[0],t):k(r.__webglFramebuffer,t)}else if(a){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)if(n.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer[i]),void 0===r.__webglDepthbuffer[i])r.__webglDepthbuffer[i]=e.createRenderbuffer(),z(r.__webglDepthbuffer[i],t,!1);else{let n=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,a=r.__webglDepthbuffer[i];e.bindRenderbuffer(e.RENDERBUFFER,a),e.framebufferRenderbuffer(e.FRAMEBUFFER,n,e.RENDERBUFFER,a)}}else{let i=t.texture.mipmaps;if(i&&i.length>0?n.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer[0]):n.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer),void 0===r.__webglDepthbuffer)r.__webglDepthbuffer=e.createRenderbuffer(),z(r.__webglDepthbuffer,t,!1);else{let n=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,i=r.__webglDepthbuffer;e.bindRenderbuffer(e.RENDERBUFFER,i),e.framebufferRenderbuffer(e.FRAMEBUFFER,n,e.RENDERBUFFER,i)}}n.bindFramebuffer(e.FRAMEBUFFER,null)}let V=[],W=[];function j(e){return Math.min(r.maxSamples,e.samples)}function X(e){let n=i.get(e);return e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function q(e,t){let n=e.colorSpace,i=e.format,r=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||n!==_&&""!==n&&(G.getTransfer(n)===x?(1023!==i||1009!==r)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",n)),t}function Y(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement?(u.width=e.naturalWidth||e.width,u.height=e.naturalHeight||e.height):"undefined"!=typeof VideoFrame&&e instanceof VideoFrame?(u.width=e.displayWidth,u.height=e.displayHeight):(u.width=e.width,u.height=e.height),u}this.allocateTextureUnit=function(){let e=A;return e>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+r.maxTextures),A+=1,e},this.resetTextureUnits=function(){A=0},this.setTexture2D=R,this.setTexture2DArray=function(t,r){let a=i.get(t);if(t.version>0&&a.__version!==t.version)return void O(a,t,r);n.bindTexture(e.TEXTURE_2D_ARRAY,a.__webglTexture,e.TEXTURE0+r)},this.setTexture3D=function(t,r){let a=i.get(t);if(t.version>0&&a.__version!==t.version)return void O(a,t,r);n.bindTexture(e.TEXTURE_3D,a.__webglTexture,e.TEXTURE0+r)},this.setTextureCube=function(t,s){let o=i.get(t);if(t.version>0&&o.__version!==t.version)return void function(t,s,o){if(6!==s.image.length)return;let l=D(t,s),h=s.source;n.bindTexture(e.TEXTURE_CUBE_MAP,t.__webglTexture,e.TEXTURE0+o);let u=i.get(h);if(h.version!==u.__version||!0===l){let t;n.activeTexture(e.TEXTURE0+o);let i=G.getPrimaries(G.workingColorSpace),c=""===s.colorSpace?null:G.getPrimaries(s.colorSpace),d=""===s.colorSpace||i===c?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,s.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,s.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,s.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,d);let p=s.isCompressedTexture||s.image[0].isCompressedTexture,f=s.image[0]&&s.image[0].isDataTexture,_=[];for(let e=0;e<6;e++)p||f?_[e]=f?s.image[e].image:s.image[e]:_[e]=m(s.image[e],!0,r.maxCubemapSize),_[e]=q(s,_[e]);let y=_[0],x=a.convert(s.format,s.colorSpace),M=a.convert(s.type),E=b(s.internalFormat,x,M,s.colorSpace),T=!0!==s.isVideoTexture,w=void 0===u.__version||!0===l,A=h.dataReady,R=S(s,y);if(N(e.TEXTURE_CUBE_MAP,s),p){T&&w&&n.texStorage2D(e.TEXTURE_CUBE_MAP,R,E,y.width,y.height);for(let i=0;i<6;i++){t=_[i].mipmaps;for(let r=0;r<t.length;r++){let a=t[r];1023!==s.format?null!==x?T?A&&n.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+i,r,0,0,a.width,a.height,x,a.data):n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+i,r,E,a.width,a.height,0,a.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):T?A&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+i,r,0,0,a.width,a.height,x,M,a.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+i,r,E,a.width,a.height,0,x,M,a.data)}}}else{if(t=s.mipmaps,T&&w){t.length>0&&R++;let i=Y(_[0]);n.texStorage2D(e.TEXTURE_CUBE_MAP,R,E,i.width,i.height)}for(let i=0;i<6;i++)if(f){T?A&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,0,0,_[i].width,_[i].height,x,M,_[i].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,E,_[i].width,_[i].height,0,x,M,_[i].data);for(let r=0;r<t.length;r++){let a=t[r].image[i].image;T?A&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+i,r+1,0,0,a.width,a.height,x,M,a.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+i,r+1,E,a.width,a.height,0,x,M,a.data)}}else{T?A&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,0,0,x,M,_[i]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,E,x,M,_[i]);for(let r=0;r<t.length;r++){let a=t[r];T?A&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+i,r+1,0,0,x,M,a.image[i]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+i,r+1,E,x,M,a.image[i])}}}g(s)&&v(e.TEXTURE_CUBE_MAP),u.__version=h.version,s.onUpdate&&s.onUpdate(s)}t.__version=s.version}(o,t,s);n.bindTexture(e.TEXTURE_CUBE_MAP,o.__webglTexture,e.TEXTURE0+s)},this.rebindTextures=function(t,n,r){let a=i.get(t);void 0!==n&&F(a.__webglFramebuffer,t,t.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,0),void 0!==r&&H(t)},this.setupRenderTarget=function(t){let r=t.texture,o=i.get(t),l=i.get(r);t.addEventListener("dispose",T);let h=t.textures,u=!0===t.isWebGLCubeRenderTarget,c=h.length>1;if(!c&&(void 0===l.__webglTexture&&(l.__webglTexture=e.createTexture()),l.__version=r.version,s.memory.textures++),u){o.__webglFramebuffer=[];for(let t=0;t<6;t++)if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer[t]=[];for(let n=0;n<r.mipmaps.length;n++)o.__webglFramebuffer[t][n]=e.createFramebuffer()}else o.__webglFramebuffer[t]=e.createFramebuffer()}else{if(r.mipmaps&&r.mipmaps.length>0){o.__webglFramebuffer=[];for(let t=0;t<r.mipmaps.length;t++)o.__webglFramebuffer[t]=e.createFramebuffer()}else o.__webglFramebuffer=e.createFramebuffer();if(c)for(let t=0,n=h.length;t<n;t++){let n=i.get(h[t]);void 0===n.__webglTexture&&(n.__webglTexture=e.createTexture(),s.memory.textures++)}if(t.samples>0&&!1===X(t)){o.__webglMultisampledFramebuffer=e.createFramebuffer(),o.__webglColorRenderbuffer=[],n.bindFramebuffer(e.FRAMEBUFFER,o.__webglMultisampledFramebuffer);for(let n=0;n<h.length;n++){let i=h[n];o.__webglColorRenderbuffer[n]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,o.__webglColorRenderbuffer[n]);let r=a.convert(i.format,i.colorSpace),s=a.convert(i.type),l=b(i.internalFormat,r,s,i.colorSpace,!0===t.isXRRenderTarget),u=j(t);e.renderbufferStorageMultisample(e.RENDERBUFFER,u,l,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+n,e.RENDERBUFFER,o.__webglColorRenderbuffer[n])}e.bindRenderbuffer(e.RENDERBUFFER,null),t.depthBuffer&&(o.__webglDepthRenderbuffer=e.createRenderbuffer(),z(o.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(e.FRAMEBUFFER,null)}}if(u){n.bindTexture(e.TEXTURE_CUBE_MAP,l.__webglTexture),N(e.TEXTURE_CUBE_MAP,r);for(let n=0;n<6;n++)if(r.mipmaps&&r.mipmaps.length>0)for(let i=0;i<r.mipmaps.length;i++)F(o.__webglFramebuffer[n][i],t,r,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n,i);else F(o.__webglFramebuffer[n],t,r,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0);g(r)&&v(e.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(c){for(let r=0,a=h.length;r<a;r++){let a=h[r],s=i.get(a);n.bindTexture(e.TEXTURE_2D,s.__webglTexture),N(e.TEXTURE_2D,a),F(o.__webglFramebuffer,t,a,e.COLOR_ATTACHMENT0+r,e.TEXTURE_2D,0),g(a)&&v(e.TEXTURE_2D)}n.unbindTexture()}else{let i=e.TEXTURE_2D;if((t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(i=t.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY),n.bindTexture(i,l.__webglTexture),N(i,r),r.mipmaps&&r.mipmaps.length>0)for(let n=0;n<r.mipmaps.length;n++)F(o.__webglFramebuffer[n],t,r,e.COLOR_ATTACHMENT0,i,n);else F(o.__webglFramebuffer,t,r,e.COLOR_ATTACHMENT0,i,0);g(r)&&v(i),n.unbindTexture()}t.depthBuffer&&H(t)},this.updateRenderTargetMipmap=function(t){let r=t.textures;for(let a=0,s=r.length;a<s;a++){let s=r[a];if(g(s)){let r=t.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:t.isWebGL3DRenderTarget?e.TEXTURE_3D:t.isWebGLArrayRenderTarget||t.isCompressedArrayTexture?e.TEXTURE_2D_ARRAY:e.TEXTURE_2D,a=i.get(s).__webglTexture;n.bindTexture(r,a),v(r),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(t.samples>0){if(!1===X(t)){let r=t.textures,a=t.width,s=t.height,o=e.COLOR_BUFFER_BIT,l=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,u=i.get(t),c=r.length>1;if(c)for(let t=0;t<r.length;t++)n.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,null),n.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,null,0);n.bindFramebuffer(e.READ_FRAMEBUFFER,u.__webglMultisampledFramebuffer);let d=t.texture.mipmaps;d&&d.length>0?n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglFramebuffer[0]):n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglFramebuffer);for(let n=0;n<r.length;n++){if(t.resolveDepthBuffer&&(t.depthBuffer&&(o|=e.DEPTH_BUFFER_BIT),t.stencilBuffer&&t.resolveStencilBuffer&&(o|=e.STENCIL_BUFFER_BIT)),c){e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,u.__webglColorRenderbuffer[n]);let t=i.get(r[n]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)}e.blitFramebuffer(0,0,a,s,0,0,a,s,o,e.NEAREST),!0===h&&(V.length=0,W.length=0,V.push(e.COLOR_ATTACHMENT0+n),t.depthBuffer&&!1===t.resolveDepthBuffer&&(V.push(l),W.push(l),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,W)),e.invalidateFramebuffer(e.READ_FRAMEBUFFER,V))}if(n.bindFramebuffer(e.READ_FRAMEBUFFER,null),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),c)for(let t=0;t<r.length;t++){n.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,u.__webglColorRenderbuffer[t]);let a=i.get(r[t]).__webglTexture;n.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,a,0)}n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglMultisampledFramebuffer)}else if(t.depthBuffer&&!1===t.resolveDepthBuffer&&h){let n=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT;e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[n])}}},this.setupDepthRenderbuffer=H,this.setupFrameBufferTexture=F,this.useMultisampledRTT=X}function sm(e,t){return{convert:function(n,i=""){let r,a=G.getTransfer(i);if(1009===n)return e.UNSIGNED_BYTE;if(1017===n)return e.UNSIGNED_SHORT_4_4_4_4;if(1018===n)return e.UNSIGNED_SHORT_5_5_5_1;if(35902===n)return e.UNSIGNED_INT_5_9_9_9_REV;if(1010===n)return e.BYTE;if(1011===n)return e.SHORT;if(1012===n)return e.UNSIGNED_SHORT;if(1013===n)return e.INT;if(1014===n)return e.UNSIGNED_INT;if(1015===n)return e.FLOAT;if(1016===n)return e.HALF_FLOAT;if(1021===n)return e.ALPHA;if(1022===n)return e.RGB;if(1023===n)return e.RGBA;if(1026===n)return e.DEPTH_COMPONENT;if(1027===n)return e.DEPTH_STENCIL;if(1028===n)return e.RED;if(1029===n)return e.RED_INTEGER;if(1030===n)return e.RG;if(1031===n)return e.RG_INTEGER;if(1033===n)return e.RGBA_INTEGER;if(33776===n||33777===n||33778===n||33779===n)if(a===x){if(null===(r=t.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(33776===n)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(33777===n)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(33778===n)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(33779===n)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(r=t.get("WEBGL_compressed_texture_s3tc")))return null;if(33776===n)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===n)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===n)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===n)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===n||35841===n||35842===n||35843===n){if(null===(r=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(35840===n)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===n)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===n)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===n)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===n||37492===n||37496===n){if(null===(r=t.get("WEBGL_compressed_texture_etc")))return null;if(36196===n||37492===n)return a===x?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(37496===n)return a===x?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(37808===n||37809===n||37810===n||37811===n||37812===n||37813===n||37814===n||37815===n||37816===n||37817===n||37818===n||37819===n||37820===n||37821===n){if(null===(r=t.get("WEBGL_compressed_texture_astc")))return null;if(37808===n)return a===x?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===n)return a===x?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===n)return a===x?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===n)return a===x?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===n)return a===x?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===n)return a===x?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===n)return a===x?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===n)return a===x?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===n)return a===x?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===n)return a===x?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===n)return a===x?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===n)return a===x?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===n)return a===x?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===n)return a===x?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===n||36494===n||36495===n){if(null===(r=t.get("EXT_texture_compression_bptc")))return null;if(36492===n)return a===x?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(36494===n)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(36495===n)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(36283===n||36284===n||36285===n||36286===n){if(null===(r=t.get("EXT_texture_compression_rgtc")))return null;if(36492===n)return r.COMPRESSED_RED_RGTC1_EXT;if(36284===n)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===n)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===n)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return 1020===n?e.UNSIGNED_INT_24_8:void 0!==e[n]?e[n]:null}}}const sg=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,sv=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class s_{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(null===this.texture){let i=new $;e.properties.get(i).__webglTexture=t.texture,(t.depthNear!==n.depthNear||t.depthFar!==n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}getMesh(e){if(null!==this.texture&&null===this.mesh){let t=e.cameras[0].viewport,n=new tK({vertexShader:sg,fragmentShader:sv,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new tG(new io(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class sy extends M{constructor(e,t){super();let n=this,i=null,r=1,a=null,s="local-floor",o=1,l=null,h=null,u=null,c=null,d=null,p=null,f=new s_,m=t.getContextAttributes(),g=null,v=null,_=[],y=[],x=new P,b=null,M=new t0;M.viewport=new Q;let S=new t0;S.viewport=new Q;let E=[M,S],w=new i2,A=null,R=null;function C(e){let t=y.indexOf(e.inputSource);if(-1===t)return;let n=_[t];void 0!==n&&(n.update(e.inputSource,e.frame,l||a),n.dispatchEvent({type:e.type,data:e.inputSource}))}function L(){i.removeEventListener("select",C),i.removeEventListener("selectstart",C),i.removeEventListener("selectend",C),i.removeEventListener("squeeze",C),i.removeEventListener("squeezestart",C),i.removeEventListener("squeezeend",C),i.removeEventListener("end",L),i.removeEventListener("inputsourceschange",N);for(let e=0;e<_.length;e++){let t=y[e];null!==t&&(y[e]=null,_[e].disconnect(t))}A=null,R=null,f.reset(),e.setRenderTarget(g),d=null,c=null,u=null,i=null,v=null,B.stop(),n.isPresenting=!1,e.setPixelRatio(b),e.setSize(x.width,x.height,!1),n.dispatchEvent({type:"sessionend"})}function N(e){for(let t=0;t<e.removed.length;t++){let n=e.removed[t],i=y.indexOf(n);i>=0&&(y[i]=null,_[i].disconnect(n))}for(let t=0;t<e.added.length;t++){let n=e.added[t],i=y.indexOf(n);if(-1===i){for(let e=0;e<_.length;e++)if(e>=y.length){y.push(n),i=e;break}else if(null===y[e]){y[e]=n,i=e;break}if(-1===i)break}let r=_[i];r&&r.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=_[e];return void 0===t&&(t=new t6,_[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=_[e];return void 0===t&&(t=new t6,_[e]=t),t.getGripSpace()},this.getHand=function(e){let t=_[e];return void 0===t&&(t=new t6,_[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){r=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){s=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(e){l=e},this.getBaseLayer=function(){return null!==c?c:d},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(h){if(null!==(i=h)){if(g=e.getRenderTarget(),i.addEventListener("select",C),i.addEventListener("selectstart",C),i.addEventListener("selectend",C),i.addEventListener("squeeze",C),i.addEventListener("squeezestart",C),i.addEventListener("squeezeend",C),i.addEventListener("end",L),i.addEventListener("inputsourceschange",N),!0!==m.xrCompatible&&await t.makeXRCompatible(),b=e.getPixelRatio(),e.getSize(x),"undefined"!=typeof XRWebGLBinding&&"createProjectionLayer"in XRWebGLBinding.prototype){let n=null,a=null,s=null;m.depth&&(s=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,n=m.stencil?1027:1026,a=m.stencil?1020:1014);let o={colorFormat:t.RGBA8,depthFormat:s,scaleFactor:r};c=(u=new XRWebGLBinding(i,t)).createProjectionLayer(o),i.updateRenderState({layers:[c]}),e.setPixelRatio(1),e.setSize(c.textureWidth,c.textureHeight,!1),v=new et(c.textureWidth,c.textureHeight,{format:1023,type:1009,depthTexture:new n0(c.textureWidth,c.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:4*!!m.antialias,resolveDepthBuffer:!1===c.ignoreDepthValues,resolveStencilBuffer:!1===c.ignoreDepthValues})}else{let n={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(i,t,n),i.updateRenderState({baseLayer:d}),e.setPixelRatio(1),e.setSize(d.framebufferWidth,d.framebufferHeight,!1),v=new et(d.framebufferWidth,d.framebufferHeight,{format:1023,type:1009,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil,resolveDepthBuffer:!1===d.ignoreDepthValues,resolveStencilBuffer:!1===d.ignoreDepthValues})}v.isXRRenderTarget=!0,this.setFoveation(o),l=null,a=await i.requestReferenceSpace(s),B.setContext(i),B.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==i)return i.environmentBlendMode},this.getDepthTexture=function(){return f.getDepthTexture()};let D=new I,U=new I;function O(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){var t,n,r;if(null===i)return;let a=e.near,s=e.far;null!==f.texture&&(f.depthNear>0&&(a=f.depthNear),f.depthFar>0&&(s=f.depthFar)),w.near=S.near=M.near=a,w.far=S.far=M.far=s,(A!==w.near||R!==w.far)&&(i.updateRenderState({depthNear:w.near,depthFar:w.far}),A=w.near,R=w.far),M.layers.mask=2|e.layers.mask,S.layers.mask=4|e.layers.mask,w.layers.mask=M.layers.mask|S.layers.mask;let o=e.parent,l=w.cameras;O(w,o);for(let e=0;e<l.length;e++)O(l[e],o);2===l.length?function(e,t,n){D.setFromMatrixPosition(t.matrixWorld),U.setFromMatrixPosition(n.matrixWorld);let i=D.distanceTo(U),r=t.projectionMatrix.elements,a=n.projectionMatrix.elements,s=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],h=(r[9]-1)/r[5],u=(r[8]-1)/r[0],c=(a[8]+1)/a[0],d=i/(-u+c),p=-(d*u);if(t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(p),e.translateZ(d),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),-1===r[10])e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse);else{let t=s+d,n=o+d;e.projectionMatrix.makePerspective(s*u-p,s*c+(i-p),l*o/n*t,h*o/n*t,t,n),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}}(w,M,S):w.projectionMatrix.copy(M.projectionMatrix),t=e,n=w,null===(r=o)?t.matrix.copy(n.matrixWorld):(t.matrix.copy(r.matrixWorld),t.matrix.invert(),t.matrix.multiply(n.matrixWorld)),t.matrix.decompose(t.position,t.quaternion,t.scale),t.updateMatrixWorld(!0),t.projectionMatrix.copy(n.projectionMatrix),t.projectionMatrixInverse.copy(n.projectionMatrixInverse),t.isPerspectiveCamera&&(t.fov=2*T*Math.atan(1/t.projectionMatrix.elements[5]),t.zoom=1)},this.getCamera=function(){return w},this.getFoveation=function(){if(null!==c||null!==d)return o},this.setFoveation=function(e){o=e,null!==c&&(c.fixedFoveation=e),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=e)},this.hasDepthSensing=function(){return null!==f.texture},this.getDepthSensingMesh=function(){return f.getMesh(w)};let F=null,B=new rc;B.setAnimationLoop(function(t,r){if(h=r.getViewerPose(l||a),p=r,null!==h){let t=h.views;null!==d&&(e.setRenderTargetFramebuffer(v,d.framebuffer),e.setRenderTarget(v));let n=!1;t.length!==w.cameras.length&&(w.cameras.length=0,n=!0);for(let i=0;i<t.length;i++){let r=t[i],a=null;if(null!==d)a=d.getViewport(r);else{let t=u.getViewSubImage(c,r);a=t.viewport,0===i&&(e.setRenderTargetTextures(v,t.colorTexture,t.depthStencilTexture),e.setRenderTarget(v))}let s=E[i];void 0===s&&((s=new t0).layers.enable(i),s.viewport=new Q,E[i]=s),s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.quaternion,s.scale),s.projectionMatrix.fromArray(r.projectionMatrix),s.projectionMatrixInverse.copy(s.projectionMatrix).invert(),s.viewport.set(a.x,a.y,a.width,a.height),0===i&&(w.matrix.copy(s.matrix),w.matrix.decompose(w.position,w.quaternion,w.scale)),!0===n&&w.cameras.push(s)}let r=i.enabledFeatures;if(r&&r.includes("depth-sensing")&&"gpu-optimized"==i.depthUsage&&u){let n=u.getDepthInformation(t[0]);n&&n.isValid&&n.texture&&f.init(e,n,i.renderState)}}for(let e=0;e<_.length;e++){let t=y[e],n=_[e];null!==t&&void 0!==n&&n.update(t,r,l||a)}F&&F(t,r),r.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:r}),p=null}),this.setAnimationLoop=function(e){F=e},this.dispose=function(){}}}const sx=new ek,sb=new eP;function sM(e,t){function n(e,t){!0===e.matrixAutoUpdate&&e.updateMatrix(),t.value.copy(e.matrix)}function i(e,i){e.opacity.value=i.opacity,i.color&&e.diffuse.value.copy(i.color),i.emissive&&e.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(e.map.value=i.map,n(i.map,e.mapTransform)),i.alphaMap&&(e.alphaMap.value=i.alphaMap,n(i.alphaMap,e.alphaMapTransform)),i.bumpMap&&(e.bumpMap.value=i.bumpMap,n(i.bumpMap,e.bumpMapTransform),e.bumpScale.value=i.bumpScale,1===i.side&&(e.bumpScale.value*=-1)),i.normalMap&&(e.normalMap.value=i.normalMap,n(i.normalMap,e.normalMapTransform),e.normalScale.value.copy(i.normalScale),1===i.side&&e.normalScale.value.negate()),i.displacementMap&&(e.displacementMap.value=i.displacementMap,n(i.displacementMap,e.displacementMapTransform),e.displacementScale.value=i.displacementScale,e.displacementBias.value=i.displacementBias),i.emissiveMap&&(e.emissiveMap.value=i.emissiveMap,n(i.emissiveMap,e.emissiveMapTransform)),i.specularMap&&(e.specularMap.value=i.specularMap,n(i.specularMap,e.specularMapTransform)),i.alphaTest>0&&(e.alphaTest.value=i.alphaTest);let r=t.get(i),a=r.envMap,s=r.envMapRotation;a&&(e.envMap.value=a,sx.copy(s),sx.x*=-1,sx.y*=-1,sx.z*=-1,a.isCubeTexture&&!1===a.isRenderTargetTexture&&(sx.y*=-1,sx.z*=-1),e.envMapRotation.value.setFromMatrix4(sb.makeRotationFromEuler(sx)),e.flipEnvMap.value=a.isCubeTexture&&!1===a.isRenderTargetTexture?-1:1,e.reflectivity.value=i.reflectivity,e.ior.value=i.ior,e.refractionRatio.value=i.refractionRatio),i.lightMap&&(e.lightMap.value=i.lightMap,e.lightMapIntensity.value=i.lightMapIntensity,n(i.lightMap,e.lightMapTransform)),i.aoMap&&(e.aoMap.value=i.aoMap,e.aoMapIntensity.value=i.aoMapIntensity,n(i.aoMap,e.aoMapTransform))}return{refreshFogUniforms:function(t,n){n.color.getRGB(t.fogColor.value,tY(e)),n.isFog?(t.fogNear.value=n.near,t.fogFar.value=n.far):n.isFogExp2&&(t.fogDensity.value=n.density)},refreshMaterialUniforms:function(e,r,a,s,o){var l,h,u,c,d,p,f,m,g,v,_,y,x,b,M,S,E,T,w,A,R;r.isMeshBasicMaterial||r.isMeshLambertMaterial?i(e,r):r.isMeshToonMaterial?(i(e,r),l=e,(h=r).gradientMap&&(l.gradientMap.value=h.gradientMap)):r.isMeshPhongMaterial?(i(e,r),u=e,c=r,u.specular.value.copy(c.specular),u.shininess.value=Math.max(c.shininess,1e-4)):r.isMeshStandardMaterial?(i(e,r),d=e,p=r,d.metalness.value=p.metalness,p.metalnessMap&&(d.metalnessMap.value=p.metalnessMap,n(p.metalnessMap,d.metalnessMapTransform)),d.roughness.value=p.roughness,p.roughnessMap&&(d.roughnessMap.value=p.roughnessMap,n(p.roughnessMap,d.roughnessMapTransform)),p.envMap&&(d.envMapIntensity.value=p.envMapIntensity),r.isMeshPhysicalMaterial&&(f=e,m=r,g=o,f.ior.value=m.ior,m.sheen>0&&(f.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),f.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(f.sheenColorMap.value=m.sheenColorMap,n(m.sheenColorMap,f.sheenColorMapTransform)),m.sheenRoughnessMap&&(f.sheenRoughnessMap.value=m.sheenRoughnessMap,n(m.sheenRoughnessMap,f.sheenRoughnessMapTransform))),m.clearcoat>0&&(f.clearcoat.value=m.clearcoat,f.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(f.clearcoatMap.value=m.clearcoatMap,n(m.clearcoatMap,f.clearcoatMapTransform)),m.clearcoatRoughnessMap&&(f.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap,n(m.clearcoatRoughnessMap,f.clearcoatRoughnessMapTransform)),m.clearcoatNormalMap&&(f.clearcoatNormalMap.value=m.clearcoatNormalMap,n(m.clearcoatNormalMap,f.clearcoatNormalMapTransform),f.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),1===m.side&&f.clearcoatNormalScale.value.negate())),m.dispersion>0&&(f.dispersion.value=m.dispersion),m.iridescence>0&&(f.iridescence.value=m.iridescence,f.iridescenceIOR.value=m.iridescenceIOR,f.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],f.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(f.iridescenceMap.value=m.iridescenceMap,n(m.iridescenceMap,f.iridescenceMapTransform)),m.iridescenceThicknessMap&&(f.iridescenceThicknessMap.value=m.iridescenceThicknessMap,n(m.iridescenceThicknessMap,f.iridescenceThicknessMapTransform))),m.transmission>0&&(f.transmission.value=m.transmission,f.transmissionSamplerMap.value=g.texture,f.transmissionSamplerSize.value.set(g.width,g.height),m.transmissionMap&&(f.transmissionMap.value=m.transmissionMap,n(m.transmissionMap,f.transmissionMapTransform)),f.thickness.value=m.thickness,m.thicknessMap&&(f.thicknessMap.value=m.thicknessMap,n(m.thicknessMap,f.thicknessMapTransform)),f.attenuationDistance.value=m.attenuationDistance,f.attenuationColor.value.copy(m.attenuationColor)),m.anisotropy>0&&(f.anisotropyVector.value.set(m.anisotropy*Math.cos(m.anisotropyRotation),m.anisotropy*Math.sin(m.anisotropyRotation)),m.anisotropyMap&&(f.anisotropyMap.value=m.anisotropyMap,n(m.anisotropyMap,f.anisotropyMapTransform))),f.specularIntensity.value=m.specularIntensity,f.specularColor.value.copy(m.specularColor),m.specularColorMap&&(f.specularColorMap.value=m.specularColorMap,n(m.specularColorMap,f.specularColorMapTransform)),m.specularIntensityMap&&(f.specularIntensityMap.value=m.specularIntensityMap,n(m.specularIntensityMap,f.specularIntensityMapTransform)))):r.isMeshMatcapMaterial?(i(e,r),v=e,(_=r).matcap&&(v.matcap.value=_.matcap)):r.isMeshDepthMaterial?i(e,r):r.isMeshDistanceMaterial?(i(e,r),function(e,n){let i=t.get(n).light;e.referencePosition.value.setFromMatrixPosition(i.matrixWorld),e.nearDistance.value=i.shadow.camera.near,e.farDistance.value=i.shadow.camera.far}(e,r)):r.isMeshNormalMaterial?i(e,r):r.isLineBasicMaterial?(y=e,x=r,y.diffuse.value.copy(x.color),y.opacity.value=x.opacity,x.map&&(y.map.value=x.map,n(x.map,y.mapTransform)),r.isLineDashedMaterial&&(b=e,M=r,b.dashSize.value=M.dashSize,b.totalSize.value=M.dashSize+M.gapSize,b.scale.value=M.scale)):r.isPointsMaterial?(S=e,E=r,T=a,w=s,S.diffuse.value.copy(E.color),S.opacity.value=E.opacity,S.size.value=E.size*T,S.scale.value=.5*w,E.map&&(S.map.value=E.map,n(E.map,S.uvTransform)),E.alphaMap&&(S.alphaMap.value=E.alphaMap,n(E.alphaMap,S.alphaMapTransform)),E.alphaTest>0&&(S.alphaTest.value=E.alphaTest)):r.isSpriteMaterial?(A=e,R=r,A.diffuse.value.copy(R.color),A.opacity.value=R.opacity,A.rotation.value=R.rotation,R.map&&(A.map.value=R.map,n(R.map,A.mapTransform)),R.alphaMap&&(A.alphaMap.value=R.alphaMap,n(R.alphaMap,A.alphaMapTransform)),R.alphaTest>0&&(A.alphaTest.value=R.alphaTest)):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function sS(e,t,n,i){let r={},a={},s=[],o=e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS);function l(e){let t={boundary:0,storage:0};return"number"==typeof e||"boolean"==typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),t}function h(t){let n=t.target;n.removeEventListener("dispose",h);let i=s.indexOf(n.__bindingPointIndex);s.splice(i,1),e.deleteBuffer(r[n.id]),delete r[n.id],delete a[n.id]}return{bind:function(e,t){let n=t.program;i.uniformBlockBinding(e,n)},update:function(n,u){let c=r[n.id];void 0===c&&(function(e){let t=e.uniforms,n=0;for(let e=0,i=t.length;e<i;e++){let i=Array.isArray(t[e])?t[e]:[t[e]];for(let e=0,t=i.length;e<t;e++){let t=i[e],r=Array.isArray(t.value)?t.value:[t.value];for(let e=0,i=r.length;e<i;e++){let i=l(r[e]),a=n%16,s=a%i.boundary,o=a+s;n+=s,0!==o&&16-o<i.storage&&(n+=16-o),t.__data=new Float32Array(i.storage/Float32Array.BYTES_PER_ELEMENT),t.__offset=n,n+=i.storage}}}let i=n%16;i>0&&(n+=16-i),e.__size=n,e.__cache={}}(n),c=function(t){let n=function(){for(let e=0;e<o;e++)if(-1===s.indexOf(e))return s.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=n;let i=e.createBuffer(),r=t.__size,a=t.usage;return e.bindBuffer(e.UNIFORM_BUFFER,i),e.bufferData(e.UNIFORM_BUFFER,r,a),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,n,i),i}(n),r[n.id]=c,n.addEventListener("dispose",h));let d=u.program;i.updateUBOMapping(n,d);let p=t.render.frame;a[n.id]!==p&&(function(t){let n=r[t.id],i=t.uniforms,a=t.__cache;e.bindBuffer(e.UNIFORM_BUFFER,n);for(let t=0,n=i.length;t<n;t++){let n=Array.isArray(i[t])?i[t]:[i[t]];for(let i=0,r=n.length;i<r;i++){let r=n[i];if(!0===function(e,t,n,i){let r=e.value,a=t+"_"+n;if(void 0===i[a])return"number"==typeof r||"boolean"==typeof r?i[a]=r:i[a]=r.clone(),!0;{let e=i[a];if("number"==typeof r||"boolean"==typeof r){if(e!==r)return i[a]=r,!0}else if(!1===e.equals(r))return e.copy(r),!0}return!1}(r,t,i,a)){let t=r.__offset,n=Array.isArray(r.value)?r.value:[r.value],i=0;for(let a=0;a<n.length;a++){let s=n[a],o=l(s);"number"==typeof s||"boolean"==typeof s?(r.__data[0]=s,e.bufferSubData(e.UNIFORM_BUFFER,t+i,r.__data)):s.isMatrix3?(r.__data[0]=s.elements[0],r.__data[1]=s.elements[1],r.__data[2]=s.elements[2],r.__data[3]=0,r.__data[4]=s.elements[3],r.__data[5]=s.elements[4],r.__data[6]=s.elements[5],r.__data[7]=0,r.__data[8]=s.elements[6],r.__data[9]=s.elements[7],r.__data[10]=s.elements[8],r.__data[11]=0):(s.toArray(r.__data,i),i+=o.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,t,r.__data)}}}e.bindBuffer(e.UNIFORM_BUFFER,null)}(n),a[n.id]=p)},dispose:function(){for(let t in r)e.deleteBuffer(r[t]);s=[],r={},a={}}}}class sE{constructor(e={}){let t,n,i,r,a,s,o,l,h,u,c,d,p,f,m,g,y,x,b,M,S,E,T,w,A,{canvas:R=function(){let e=B("canvas");return e.style.display="block",e}(),context:C=null,depth:P=!0,stencil:L=!1,alpha:N=!1,antialias:D=!1,premultipliedAlpha:U=!0,preserveDrawingBuffer:O=!1,powerPreference:F="default",failIfMajorPerformanceCaveat:z=!1,reverseDepthBuffer:H=!1}=e;if(this.isWebGLRenderer=!0,null!==C){if("undefined"!=typeof WebGLRenderingContext&&C instanceof WebGLRenderingContext)throw Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");t=C.getContextAttributes().alpha}else t=N;let V=new Uint32Array(4),W=new Int32Array(4),j=null,X=null,q=[],Y=[];this.domElement=R,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=0,this.toneMappingExposure=1,this.transmissionResolutionScale=1;let K=this,Z=!1;this._outputColorSpace=v;let J=0,$=0,ee=null,en=-1,ei=null,er=new Q,ea=new Q,es=null,eo=new td(0),el=0,eh=R.width,eu=R.height,ec=1,ed=null,ep=null,ef=new Q(0,0,eh,eu),em=new Q(0,0,eh,eu),eg=!1,ev=new nI,e_=!1,ey=!1,ex=new eP,eb=new eP,eM=new I,eS=new Q,eE={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0},eT=!1;function ew(){return null===ee?ec:1}let eA=C;function eR(e,t){return R.getContext(e,t)}try{if("setAttribute"in R&&R.setAttribute("data-engine","three.js r178"),R.addEventListener("webglcontextlost",eI,!1),R.addEventListener("webglcontextrestored",eN,!1),R.addEventListener("webglcontextcreationerror",eD,!1),null===eA){let e="webgl2";if(eA=eR(e,{alpha:!0,depth:P,stencil:L,antialias:D,premultipliedAlpha:U,preserveDrawingBuffer:O,powerPreference:F,failIfMajorPerformanceCaveat:z}),null===eA)if(eR(e))throw Error("Error creating WebGL context with your selected attributes.");else throw Error("Error creating WebGL context.")}}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function eC(){(n=new rG(eA)).init(),T=new sm(eA,n),i=new rM(eA,n,e,T),r=new sp(eA,n),i.reverseDepthBuffer&&H&&r.buffers.depth.setReversed(!0),a=new rX(eA),s=new se,o=new sf(eA,n,r,s,i,T,a),l=new rE(K),h=new rV(K),u=new rd(eA),w=new rx(eA,u),c=new rW(eA,u,a,w),d=new rY(eA,c,u,a),M=new rq(eA,i,o),y=new rS(s),p=new a7(K,l,h,n,i,w,y),f=new sM(K,s),m=new sr,g=new su(n),b=new ry(K,l,h,r,d,t,U),x=new sc(K,d,i),A=new sS(eA,a,i,r),S=new rb(eA,n,a),E=new rj(eA,n,a),a.programs=p.programs,K.capabilities=i,K.extensions=n,K.properties=s,K.renderLists=m,K.shadowMap=x,K.state=r,K.info=a}eC();let eL=new sy(K,eA);function eI(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),Z=!0}function eN(){console.log("THREE.WebGLRenderer: Context Restored."),Z=!1;let e=a.autoReset,t=x.enabled,n=x.autoUpdate,i=x.needsUpdate,r=x.type;eC(),a.autoReset=e,x.enabled=t,x.autoUpdate=n,x.needsUpdate=i,x.type=r}function eD(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function eU(e){var t;let n=e.target;n.removeEventListener("dispose",eU),function(e){let t=s.get(e).programs;void 0!==t&&(t.forEach(function(e){p.releaseProgram(e)}),e.isShaderMaterial&&p.releaseShaderCache(e))}(t=n),s.remove(t)}function eO(e,t,n){!0===e.transparent&&2===e.side&&!1===e.forceSinglePass?(e.side=1,e.needsUpdate=!0,eX(e,t,n),e.side=0,e.needsUpdate=!0,eX(e,t,n),e.side=2):eX(e,t,n)}this.xr=eL,this.getContext=function(){return eA},this.getContextAttributes=function(){return eA.getContextAttributes()},this.forceContextLoss=function(){let e=n.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){let e=n.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return ec},this.setPixelRatio=function(e){void 0!==e&&(ec=e,this.setSize(eh,eu,!1))},this.getSize=function(e){return e.set(eh,eu)},this.setSize=function(e,t,n=!0){if(eL.isPresenting)return void console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");eh=e,eu=t,R.width=Math.floor(e*ec),R.height=Math.floor(t*ec),!0===n&&(R.style.width=e+"px",R.style.height=t+"px"),this.setViewport(0,0,e,t)},this.getDrawingBufferSize=function(e){return e.set(eh*ec,eu*ec).floor()},this.setDrawingBufferSize=function(e,t,n){eh=e,eu=t,ec=n,R.width=Math.floor(e*n),R.height=Math.floor(t*n),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(er)},this.getViewport=function(e){return e.copy(ef)},this.setViewport=function(e,t,n,i){e.isVector4?ef.set(e.x,e.y,e.z,e.w):ef.set(e,t,n,i),r.viewport(er.copy(ef).multiplyScalar(ec).round())},this.getScissor=function(e){return e.copy(em)},this.setScissor=function(e,t,n,i){e.isVector4?em.set(e.x,e.y,e.z,e.w):em.set(e,t,n,i),r.scissor(ea.copy(em).multiplyScalar(ec).round())},this.getScissorTest=function(){return eg},this.setScissorTest=function(e){r.setScissorTest(eg=e)},this.setOpaqueSort=function(e){ed=e},this.setTransparentSort=function(e){ep=e},this.getClearColor=function(e){return e.copy(b.getClearColor())},this.setClearColor=function(){b.setClearColor(...arguments)},this.getClearAlpha=function(){return b.getClearAlpha()},this.setClearAlpha=function(){b.setClearAlpha(...arguments)},this.clear=function(e=!0,t=!0,n=!0){let i=0;if(e){let e=!1;if(null!==ee){let t=ee.texture.format;e=1033===t||1031===t||1029===t}if(e){let e=ee.texture.type,t=1009===e||1014===e||1012===e||1020===e||1017===e||1018===e,n=b.getClearColor(),i=b.getClearAlpha(),r=n.r,a=n.g,s=n.b;t?(V[0]=r,V[1]=a,V[2]=s,V[3]=i,eA.clearBufferuiv(eA.COLOR,0,V)):(W[0]=r,W[1]=a,W[2]=s,W[3]=i,eA.clearBufferiv(eA.COLOR,0,W))}else i|=eA.COLOR_BUFFER_BIT}t&&(i|=eA.DEPTH_BUFFER_BIT),n&&(i|=eA.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(0xffffffff)),eA.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){R.removeEventListener("webglcontextlost",eI,!1),R.removeEventListener("webglcontextrestored",eN,!1),R.removeEventListener("webglcontextcreationerror",eD,!1),b.dispose(),m.dispose(),g.dispose(),s.dispose(),l.dispose(),h.dispose(),d.dispose(),w.dispose(),A.dispose(),p.dispose(),eL.dispose(),eL.removeEventListener("sessionstart",eB),eL.removeEventListener("sessionend",ez),ek.stop()},this.renderBufferDirect=function(e,t,a,d,p,m){let g;null===t&&(t=eE);let v=p.isMesh&&0>p.matrixWorld.determinant(),x=function(e,t,n,a,u){var c,d;!0!==t.isScene&&(t=eE),o.resetTextureUnits();let p=t.fog,m=a.isMeshStandardMaterial?t.environment:null,g=null===ee?K.outputColorSpace:!0===ee.isXRRenderTarget?ee.texture.colorSpace:_,v=(a.isMeshStandardMaterial?h:l).get(a.envMap||m),x=!0===a.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,b=!!n.attributes.tangent&&(!!a.normalMap||a.anisotropy>0),S=!!n.morphAttributes.position,E=!!n.morphAttributes.normal,T=!!n.morphAttributes.color,w=0;a.toneMapped&&(null===ee||!0===ee.isXRRenderTarget)&&(w=K.toneMapping);let R=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,C=void 0!==R?R.length:0,P=s.get(a),L=X.state.lights;if(!0===e_&&(!0===ey||e!==ei)){let t=e===ei&&a.id===en;y.setState(a,e,t)}let I=!1;a.version===P.__version?P.needsLights&&P.lightsStateVersion!==L.state.version||P.outputColorSpace!==g||u.isBatchedMesh&&!1===P.batching?I=!0:u.isBatchedMesh||!0!==P.batching?u.isBatchedMesh&&!0===P.batchingColor&&null===u.colorTexture||u.isBatchedMesh&&!1===P.batchingColor&&null!==u.colorTexture||u.isInstancedMesh&&!1===P.instancing?I=!0:u.isInstancedMesh||!0!==P.instancing?u.isSkinnedMesh&&!1===P.skinning?I=!0:u.isSkinnedMesh||!0!==P.skinning?u.isInstancedMesh&&!0===P.instancingColor&&null===u.instanceColor||u.isInstancedMesh&&!1===P.instancingColor&&null!==u.instanceColor||u.isInstancedMesh&&!0===P.instancingMorph&&null===u.morphTexture||u.isInstancedMesh&&!1===P.instancingMorph&&null!==u.morphTexture||P.envMap!==v||!0===a.fog&&P.fog!==p||void 0!==P.numClippingPlanes&&(P.numClippingPlanes!==y.numPlanes||P.numIntersection!==y.numIntersection)||P.vertexAlphas!==x||P.vertexTangents!==b||P.morphTargets!==S||P.morphNormals!==E||P.morphColors!==T||P.toneMapping!==w?I=!0:P.morphTargetsCount!==C&&(I=!0):I=!0:I=!0:I=!0:(I=!0,P.__version=a.version);let N=P.currentProgram;!0===I&&(N=eX(a,t,u));let D=!1,U=!1,O=!1,F=N.getUniforms(),B=P.uniforms;if(r.useProgram(N.program)&&(D=!0,U=!0,O=!0),a.id!==en&&(en=a.id,U=!0),D||ei!==e){if(r.buffers.depth.getReversed()){ex.copy(e.projectionMatrix);let t=ex.elements;t[2]=.5*t[2]+.5*t[3],t[6]=.5*t[6]+.5*t[7],t[10]=.5*t[10]+.5*t[11],t[14]=.5*t[14]+.5*t[15];let n=ex.elements;-1===n[11]?(n[10]=-n[10]-1,n[14]=-n[14]):(n[10]=-n[10],n[14]=-n[14]+1),F.setValue(eA,"projectionMatrix",ex)}else F.setValue(eA,"projectionMatrix",e.projectionMatrix);F.setValue(eA,"viewMatrix",e.matrixWorldInverse);let t=F.map.cameraPosition;void 0!==t&&t.setValue(eA,eM.setFromMatrixPosition(e.matrixWorld)),i.logarithmicDepthBuffer&&F.setValue(eA,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),(a.isMeshPhongMaterial||a.isMeshToonMaterial||a.isMeshLambertMaterial||a.isMeshBasicMaterial||a.isMeshStandardMaterial||a.isShaderMaterial)&&F.setValue(eA,"isOrthographic",!0===e.isOrthographicCamera),ei!==e&&(ei=e,U=!0,O=!0)}if(u.isSkinnedMesh){F.setOptional(eA,u,"bindMatrix"),F.setOptional(eA,u,"bindMatrixInverse");let e=u.skeleton;e&&(null===e.boneTexture&&e.computeBoneTexture(),F.setValue(eA,"boneTexture",e.boneTexture,o))}u.isBatchedMesh&&(F.setOptional(eA,u,"batchingTexture"),F.setValue(eA,"batchingTexture",u._matricesTexture,o),F.setOptional(eA,u,"batchingIdTexture"),F.setValue(eA,"batchingIdTexture",u._indirectTexture,o),F.setOptional(eA,u,"batchingColorTexture"),null!==u._colorsTexture&&F.setValue(eA,"batchingColorTexture",u._colorsTexture,o));let z=n.morphAttributes;if((void 0!==z.position||void 0!==z.normal||void 0!==z.color)&&M.update(u,n,N),(U||P.receiveShadow!==u.receiveShadow)&&(P.receiveShadow=u.receiveShadow,F.setValue(eA,"receiveShadow",u.receiveShadow)),a.isMeshGouraudMaterial&&null!==a.envMap&&(B.envMap.value=v,B.flipEnvMap.value=v.isCubeTexture&&!1===v.isRenderTargetTexture?-1:1),a.isMeshStandardMaterial&&null===a.envMap&&null!==t.environment&&(B.envMapIntensity.value=t.environmentIntensity),U&&(F.setValue(eA,"toneMappingExposure",K.toneMappingExposure),P.needsLights&&(c=B,d=O,c.ambientLightColor.needsUpdate=d,c.lightProbe.needsUpdate=d,c.directionalLights.needsUpdate=d,c.directionalLightShadows.needsUpdate=d,c.pointLights.needsUpdate=d,c.pointLightShadows.needsUpdate=d,c.spotLights.needsUpdate=d,c.spotLightShadows.needsUpdate=d,c.rectAreaLights.needsUpdate=d,c.hemisphereLights.needsUpdate=d),p&&!0===a.fog&&f.refreshFogUniforms(B,p),f.refreshMaterialUniforms(B,a,ec,eu,X.state.transmissionRenderTarget[e.id]),aV.upload(eA,eq(P),B,o)),a.isShaderMaterial&&!0===a.uniformsNeedUpdate&&(aV.upload(eA,eq(P),B,o),a.uniformsNeedUpdate=!1),a.isSpriteMaterial&&F.setValue(eA,"center",u.center),F.setValue(eA,"modelViewMatrix",u.modelViewMatrix),F.setValue(eA,"normalMatrix",u.normalMatrix),F.setValue(eA,"modelMatrix",u.matrixWorld),a.isShaderMaterial||a.isRawShaderMaterial){let e=a.uniformsGroups;for(let t=0,n=e.length;t<n;t++){let n=e[t];A.update(n,N),A.bind(n,N)}}return N}(e,t,a,d,p);r.setMaterial(d,v);let b=a.index,T=1;if(!0===d.wireframe){if(void 0===(b=c.getWireframeAttribute(a)))return;T=2}let R=a.drawRange,C=a.attributes.position,P=R.start*T,L=(R.start+R.count)*T;null!==m&&(P=Math.max(P,m.start*T),L=Math.min(L,(m.start+m.count)*T)),null!==b?(P=Math.max(P,0),L=Math.min(L,b.count)):null!=C&&(P=Math.max(P,0),L=Math.min(L,C.count));let I=L-P;if(I<0||I===1/0)return;w.setup(p,d,x,a,b);let N=S;if(null!==b&&(g=u.get(b),(N=E).setIndex(g)),p.isMesh)!0===d.wireframe?(r.setLineWidth(d.wireframeLinewidth*ew()),N.setMode(eA.LINES)):N.setMode(eA.TRIANGLES);else if(p.isLine){let e=d.linewidth;void 0===e&&(e=1),r.setLineWidth(e*ew()),p.isLineSegments?N.setMode(eA.LINES):p.isLineLoop?N.setMode(eA.LINE_LOOP):N.setMode(eA.LINE_STRIP)}else p.isPoints?N.setMode(eA.POINTS):p.isSprite&&N.setMode(eA.TRIANGLES);if(p.isBatchedMesh)if(null!==p._multiDrawInstances)k("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),N.renderMultiDrawInstances(p._multiDrawStarts,p._multiDrawCounts,p._multiDrawCount,p._multiDrawInstances);else if(n.get("WEBGL_multi_draw"))N.renderMultiDraw(p._multiDrawStarts,p._multiDrawCounts,p._multiDrawCount);else{let e=p._multiDrawStarts,t=p._multiDrawCounts,n=p._multiDrawCount,i=b?u.get(b).bytesPerElement:1,r=s.get(d).currentProgram.getUniforms();for(let a=0;a<n;a++)r.setValue(eA,"_gl_DrawID",a),N.render(e[a]/i,t[a])}else if(p.isInstancedMesh)N.renderInstances(P,I,p.count);else if(a.isInstancedBufferGeometry){let e=void 0!==a._maxInstanceCount?a._maxInstanceCount:1/0,t=Math.min(a.instanceCount,e);N.renderInstances(P,I,t)}else N.render(P,I)},this.compile=function(e,t,n=null){null===n&&(n=e),(X=g.get(n)).init(t),Y.push(X),n.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(X.pushLight(e),e.castShadow&&X.pushShadow(e))}),e!==n&&e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(X.pushLight(e),e.castShadow&&X.pushShadow(e))}),X.setupLights();let i=new Set;return e.traverse(function(e){if(!(e.isMesh||e.isPoints||e.isLine||e.isSprite))return;let t=e.material;if(t)if(Array.isArray(t))for(let r=0;r<t.length;r++){let a=t[r];eO(a,n,e),i.add(a)}else eO(t,n,e),i.add(t)}),X=Y.pop(),i},this.compileAsync=function(e,t,i=null){let r=this.compile(e,t,i);return new Promise(t=>{function i(){if(r.forEach(function(e){s.get(e).currentProgram.isReady()&&r.delete(e)}),0===r.size)return void t(e);setTimeout(i,10)}null!==n.get("KHR_parallel_shader_compile")?i():setTimeout(i,10)})};let eF=null;function eB(){ek.stop()}function ez(){ek.start()}let ek=new rc;function eH(e,t,n,i){if(!1===e.visible)return;if(e.layers.test(t.layers)){if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)X.pushLight(e),e.castShadow&&X.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||ev.intersectsSprite(e)){i&&eS.setFromMatrixPosition(e.matrixWorld).applyMatrix4(eb);let t=d.update(e),r=e.material;r.visible&&j.push(e,t,r,n,eS.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||ev.intersectsObject(e))){let t=d.update(e),r=e.material;if(i&&(void 0!==e.boundingSphere?(null===e.boundingSphere&&e.computeBoundingSphere(),eS.copy(e.boundingSphere.center)):(null===t.boundingSphere&&t.computeBoundingSphere(),eS.copy(t.boundingSphere.center)),eS.applyMatrix4(e.matrixWorld).applyMatrix4(eb)),Array.isArray(r)){let i=t.groups;for(let a=0,s=i.length;a<s;a++){let s=i[a],o=r[s.materialIndex];o&&o.visible&&j.push(e,t,o,n,eS.z,s)}}else r.visible&&j.push(e,t,r,n,eS.z,null)}}let r=e.children;for(let e=0,a=r.length;e<a;e++)eH(r[e],t,n,i)}function eV(e,t,n,i){let a=e.opaque,s=e.transmissive,o=e.transparent;X.setupLightsView(n),!0===e_&&y.setGlobalState(K.clippingPlanes,n),i&&r.viewport(er.copy(i)),a.length>0&&eW(a,t,n),s.length>0&&eW(s,t,n),o.length>0&&eW(o,t,n),r.buffers.depth.setTest(!0),r.buffers.depth.setMask(!0),r.buffers.color.setMask(!0),r.setPolygonOffset(!1)}function eG(e,t,i,r){if(null!==(!0===i.isScene?i.overrideMaterial:null))return;void 0===X.state.transmissionRenderTarget[r.id]&&(X.state.transmissionRenderTarget[r.id]=new et(1,1,{generateMipmaps:!0,type:n.has("EXT_color_buffer_half_float")||n.has("EXT_color_buffer_float")?1016:1009,minFilter:1008,samples:4,stencilBuffer:L,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:G.workingColorSpace}));let a=X.state.transmissionRenderTarget[r.id],s=r.viewport||er;a.setSize(s.z*K.transmissionResolutionScale,s.w*K.transmissionResolutionScale);let l=K.getRenderTarget(),h=K.getActiveCubeFace(),u=K.getActiveMipmapLevel();K.setRenderTarget(a),K.getClearColor(eo),(el=K.getClearAlpha())<1&&K.setClearColor(0xffffff,.5),K.clear(),eT&&b.render(i);let c=K.toneMapping;K.toneMapping=0;let d=r.viewport;if(void 0!==r.viewport&&(r.viewport=void 0),X.setupLightsView(r),!0===e_&&y.setGlobalState(K.clippingPlanes,r),eW(e,i,r),o.updateMultisampleRenderTarget(a),o.updateRenderTargetMipmap(a),!1===n.has("WEBGL_multisampled_render_to_texture")){let e=!1;for(let n=0,a=t.length;n<a;n++){let a=t[n],s=a.object,o=a.geometry,l=a.material,h=a.group;if(2===l.side&&s.layers.test(r.layers)){let t=l.side;l.side=1,l.needsUpdate=!0,ej(s,i,r,o,l,h),l.side=t,l.needsUpdate=!0,e=!0}}!0===e&&(o.updateMultisampleRenderTarget(a),o.updateRenderTargetMipmap(a))}K.setRenderTarget(l,h,u),K.setClearColor(eo,el),void 0!==d&&(r.viewport=d),K.toneMapping=c}function eW(e,t,n){let i=!0===t.isScene?t.overrideMaterial:null;for(let r=0,a=e.length;r<a;r++){let a=e[r],s=a.object,o=a.geometry,l=a.group,h=a.material;!0===h.allowOverride&&null!==i&&(h=i),s.layers.test(n.layers)&&ej(s,t,n,o,h,l)}}function ej(e,t,n,i,r,a){e.onBeforeRender(K,t,n,i,r,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),r.onBeforeRender(K,t,n,i,e,a),!0===r.transparent&&2===r.side&&!1===r.forceSinglePass?(r.side=1,r.needsUpdate=!0,K.renderBufferDirect(n,t,i,r,e,a),r.side=0,r.needsUpdate=!0,K.renderBufferDirect(n,t,i,r,e,a),r.side=2):K.renderBufferDirect(n,t,i,r,e,a),e.onAfterRender(K,t,n,i,r,a)}function eX(e,t,n){var i;!0!==t.isScene&&(t=eE);let r=s.get(e),a=X.state.lights,o=X.state.shadowsArray,u=a.state.version,c=p.getParameters(e,a.state,o,t,n),d=p.getProgramCacheKey(c),f=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?h:l).get(e.envMap||r.environment),r.envMapRotation=null!==r.environment&&null===e.envMap?t.environmentRotation:e.envMapRotation,void 0===f&&(e.addEventListener("dispose",eU),r.programs=f=new Map);let m=f.get(d);if(void 0!==m){if(r.currentProgram===m&&r.lightsStateVersion===u)return eY(e,c),m}else c.uniforms=p.getUniforms(e),e.onBeforeCompile(c,K),m=p.acquireProgram(c,d),f.set(d,m),r.uniforms=c.uniforms;let g=r.uniforms;return(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(g.clippingPlanes=y.uniform),eY(e,c),r.needsLights=(i=e).isMeshLambertMaterial||i.isMeshToonMaterial||i.isMeshPhongMaterial||i.isMeshStandardMaterial||i.isShadowMaterial||i.isShaderMaterial&&!0===i.lights,r.lightsStateVersion=u,r.needsLights&&(g.ambientLightColor.value=a.state.ambient,g.lightProbe.value=a.state.probe,g.directionalLights.value=a.state.directional,g.directionalLightShadows.value=a.state.directionalShadow,g.spotLights.value=a.state.spot,g.spotLightShadows.value=a.state.spotShadow,g.rectAreaLights.value=a.state.rectArea,g.ltc_1.value=a.state.rectAreaLTC1,g.ltc_2.value=a.state.rectAreaLTC2,g.pointLights.value=a.state.point,g.pointLightShadows.value=a.state.pointShadow,g.hemisphereLights.value=a.state.hemi,g.directionalShadowMap.value=a.state.directionalShadowMap,g.directionalShadowMatrix.value=a.state.directionalShadowMatrix,g.spotShadowMap.value=a.state.spotShadowMap,g.spotLightMatrix.value=a.state.spotLightMatrix,g.spotLightMap.value=a.state.spotLightMap,g.pointShadowMap.value=a.state.pointShadowMap,g.pointShadowMatrix.value=a.state.pointShadowMatrix),r.currentProgram=m,r.uniformsList=null,m}function eq(e){if(null===e.uniformsList){let t=e.currentProgram.getUniforms();e.uniformsList=aV.seqWithValue(t.seq,e.uniforms)}return e.uniformsList}function eY(e,t){let n=s.get(e);n.outputColorSpace=t.outputColorSpace,n.batching=t.batching,n.batchingColor=t.batchingColor,n.instancing=t.instancing,n.instancingColor=t.instancingColor,n.instancingMorph=t.instancingMorph,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}ek.setAnimationLoop(function(e){eF&&eF(e)}),"undefined"!=typeof self&&ek.setContext(self),this.setAnimationLoop=function(e){eF=e,eL.setAnimationLoop(e),null===e?ek.stop():ek.start()},eL.addEventListener("sessionstart",eB),eL.addEventListener("sessionend",ez),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===Z)return;if(!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===eL.enabled&&!0===eL.isPresenting&&(!0===eL.cameraAutoUpdate&&eL.updateCamera(t),t=eL.getCamera()),!0===e.isScene&&e.onBeforeRender(K,e,t,ee),(X=g.get(e,Y.length)).init(t),Y.push(X),eb.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ev.setFromProjectionMatrix(eb),ey=this.localClippingEnabled,e_=y.init(this.clippingPlanes,ey),(j=m.get(e,q.length)).init(),q.push(j),!0===eL.enabled&&!0===eL.isPresenting){let e=K.xr.getDepthSensingMesh();null!==e&&eH(e,t,-1/0,K.sortObjects)}eH(e,t,0,K.sortObjects),j.finish(),!0===K.sortObjects&&j.sort(ed,ep),(eT=!1===eL.enabled||!1===eL.isPresenting||!1===eL.hasDepthSensing())&&b.addToRenderList(j,e),this.info.render.frame++,!0===e_&&y.beginShadows();let n=X.state.shadowsArray;x.render(n,e,t),!0===e_&&y.endShadows(),!0===this.info.autoReset&&this.info.reset();let i=j.opaque,r=j.transmissive;if(X.setupLights(),t.isArrayCamera){let n=t.cameras;if(r.length>0)for(let t=0,a=n.length;t<a;t++)eG(i,r,e,n[t]);eT&&b.render(e);for(let t=0,i=n.length;t<i;t++){let i=n[t];eV(j,e,i,i.viewport)}}else r.length>0&&eG(i,r,e,t),eT&&b.render(e),eV(j,e,t);null!==ee&&0===$&&(o.updateMultisampleRenderTarget(ee),o.updateRenderTargetMipmap(ee)),!0===e.isScene&&e.onAfterRender(K,e,t),w.resetDefaultState(),en=-1,ei=null,Y.pop(),Y.length>0?(X=Y[Y.length-1],!0===e_&&y.setGlobalState(K.clippingPlanes,X.state.camera)):X=null,q.pop(),j=q.length>0?q[q.length-1]:null},this.getActiveCubeFace=function(){return J},this.getActiveMipmapLevel=function(){return $},this.getRenderTarget=function(){return ee},this.setRenderTargetTextures=function(e,t,n){let i=s.get(e);i.__autoAllocateDepthBuffer=!1===e.resolveDepthBuffer,!1===i.__autoAllocateDepthBuffer&&(i.__useRenderToTexture=!1),s.get(e.texture).__webglTexture=t,s.get(e.depthTexture).__webglTexture=i.__autoAllocateDepthBuffer?void 0:n,i.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(e,t){let n=s.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t};let eK=eA.createFramebuffer();this.setRenderTarget=function(e,t=0,n=0){ee=e,J=t,$=n;let i=!0,a=null,l=!1,h=!1;if(e){let u=s.get(e);if(void 0!==u.__useDefaultFramebuffer)r.bindFramebuffer(eA.FRAMEBUFFER,null),i=!1;else if(void 0===u.__webglFramebuffer)o.setupRenderTarget(e);else if(u.__hasExternalTextures)o.rebindTextures(e,s.get(e.texture).__webglTexture,s.get(e.depthTexture).__webglTexture);else if(e.depthBuffer){let t=e.depthTexture;if(u.__boundDepthTexture!==t){if(null!==t&&s.has(t)&&(e.width!==t.image.width||e.height!==t.image.height))throw Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");o.setupDepthRenderbuffer(e)}}let c=e.texture;(c.isData3DTexture||c.isDataArrayTexture||c.isCompressedArrayTexture)&&(h=!0);let d=s.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(a=Array.isArray(d[t])?d[t][n]:d[t],l=!0):a=e.samples>0&&!1===o.useMultisampledRTT(e)?s.get(e).__webglMultisampledFramebuffer:Array.isArray(d)?d[n]:d,er.copy(e.viewport),ea.copy(e.scissor),es=e.scissorTest}else er.copy(ef).multiplyScalar(ec).floor(),ea.copy(em).multiplyScalar(ec).floor(),es=eg;if(0!==n&&(a=eK),r.bindFramebuffer(eA.FRAMEBUFFER,a)&&i&&r.drawBuffers(e,a),r.viewport(er),r.scissor(ea),r.setScissorTest(es),l){let i=s.get(e.texture);eA.framebufferTexture2D(eA.FRAMEBUFFER,eA.COLOR_ATTACHMENT0,eA.TEXTURE_CUBE_MAP_POSITIVE_X+t,i.__webglTexture,n)}else if(h){let i=s.get(e.texture);eA.framebufferTextureLayer(eA.FRAMEBUFFER,eA.COLOR_ATTACHMENT0,i.__webglTexture,n,t)}else if(null!==e&&0!==n){let t=s.get(e.texture);eA.framebufferTexture2D(eA.FRAMEBUFFER,eA.COLOR_ATTACHMENT0,eA.TEXTURE_2D,t.__webglTexture,n)}en=-1},this.readRenderTargetPixels=function(e,t,n,a,o,l,h,u=0){if(!(e&&e.isWebGLRenderTarget))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let c=s.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==h&&(c=c[h]),c){r.bindFramebuffer(eA.FRAMEBUFFER,c);try{let r=e.textures[u],s=r.format,h=r.type;if(!i.textureFormatReadable(s))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!i.textureTypeReadable(h))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");t>=0&&t<=e.width-a&&n>=0&&n<=e.height-o&&(e.textures.length>1&&eA.readBuffer(eA.COLOR_ATTACHMENT0+u),eA.readPixels(t,n,a,o,T.convert(s),T.convert(h),l))}finally{let e=null!==ee?s.get(ee).__webglFramebuffer:null;r.bindFramebuffer(eA.FRAMEBUFFER,e)}}},this.readRenderTargetPixelsAsync=async function(e,t,n,a,o,l,h,u=0){if(!(e&&e.isWebGLRenderTarget))throw Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let c=s.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==h&&(c=c[h]),c)if(t>=0&&t<=e.width-a&&n>=0&&n<=e.height-o){var d;r.bindFramebuffer(eA.FRAMEBUFFER,c);let h=e.textures[u],p=h.format,f=h.type;if(!i.textureFormatReadable(p))throw Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!i.textureTypeReadable(f))throw Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");let m=eA.createBuffer();eA.bindBuffer(eA.PIXEL_PACK_BUFFER,m),eA.bufferData(eA.PIXEL_PACK_BUFFER,l.byteLength,eA.STREAM_READ),e.textures.length>1&&eA.readBuffer(eA.COLOR_ATTACHMENT0+u),eA.readPixels(t,n,a,o,T.convert(p),T.convert(f),0);let g=null!==ee?s.get(ee).__webglFramebuffer:null;r.bindFramebuffer(eA.FRAMEBUFFER,g);let v=eA.fenceSync(eA.SYNC_GPU_COMMANDS_COMPLETE,0);return eA.flush(),await (d=eA,new Promise(function(e,t){setTimeout(function n(){switch(d.clientWaitSync(v,d.SYNC_FLUSH_COMMANDS_BIT,0)){case d.WAIT_FAILED:t();break;case d.TIMEOUT_EXPIRED:setTimeout(n,4);break;default:e()}},4)})),eA.bindBuffer(eA.PIXEL_PACK_BUFFER,m),eA.getBufferSubData(eA.PIXEL_PACK_BUFFER,0,l),eA.deleteBuffer(m),eA.deleteSync(v),l}else throw Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(e,t=null,n=0){let i=Math.pow(2,-n),a=Math.floor(e.image.width*i),s=Math.floor(e.image.height*i),l=null!==t?t.x:0,h=null!==t?t.y:0;o.setTexture2D(e,0),eA.copyTexSubImage2D(eA.TEXTURE_2D,n,0,0,l,h,a,s),r.unbindTexture()};let eZ=eA.createFramebuffer(),eJ=eA.createFramebuffer();this.copyTextureToTexture=function(e,t,n=null,i=null,a=0,l=null){let h,u,c,d,p,f,m,g,v,_;null===l&&(0!==a?(k("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),l=a,a=0):l=0);let y=e.isCompressedTexture?e.mipmaps[l]:e.image;if(null!==n)h=n.max.x-n.min.x,u=n.max.y-n.min.y,c=n.isBox3?n.max.z-n.min.z:1,d=n.min.x,p=n.min.y,f=n.isBox3?n.min.z:0;else{let t=Math.pow(2,-a);h=Math.floor(y.width*t),u=Math.floor(y.height*t),c=e.isDataArrayTexture?y.depth:e.isData3DTexture?Math.floor(y.depth*t):1,d=0,p=0,f=0}null!==i?(m=i.x,g=i.y,v=i.z):(m=0,g=0,v=0);let x=T.convert(t.format),b=T.convert(t.type);t.isData3DTexture?(o.setTexture3D(t,0),_=eA.TEXTURE_3D):t.isDataArrayTexture||t.isCompressedArrayTexture?(o.setTexture2DArray(t,0),_=eA.TEXTURE_2D_ARRAY):(o.setTexture2D(t,0),_=eA.TEXTURE_2D),eA.pixelStorei(eA.UNPACK_FLIP_Y_WEBGL,t.flipY),eA.pixelStorei(eA.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),eA.pixelStorei(eA.UNPACK_ALIGNMENT,t.unpackAlignment);let M=eA.getParameter(eA.UNPACK_ROW_LENGTH),S=eA.getParameter(eA.UNPACK_IMAGE_HEIGHT),E=eA.getParameter(eA.UNPACK_SKIP_PIXELS),w=eA.getParameter(eA.UNPACK_SKIP_ROWS),A=eA.getParameter(eA.UNPACK_SKIP_IMAGES);eA.pixelStorei(eA.UNPACK_ROW_LENGTH,y.width),eA.pixelStorei(eA.UNPACK_IMAGE_HEIGHT,y.height),eA.pixelStorei(eA.UNPACK_SKIP_PIXELS,d),eA.pixelStorei(eA.UNPACK_SKIP_ROWS,p),eA.pixelStorei(eA.UNPACK_SKIP_IMAGES,f);let R=e.isDataArrayTexture||e.isData3DTexture,C=t.isDataArrayTexture||t.isData3DTexture;if(e.isDepthTexture){let n=s.get(e),i=s.get(t),o=s.get(n.__renderTarget),_=s.get(i.__renderTarget);r.bindFramebuffer(eA.READ_FRAMEBUFFER,o.__webglFramebuffer),r.bindFramebuffer(eA.DRAW_FRAMEBUFFER,_.__webglFramebuffer);for(let n=0;n<c;n++)R&&(eA.framebufferTextureLayer(eA.READ_FRAMEBUFFER,eA.COLOR_ATTACHMENT0,s.get(e).__webglTexture,a,f+n),eA.framebufferTextureLayer(eA.DRAW_FRAMEBUFFER,eA.COLOR_ATTACHMENT0,s.get(t).__webglTexture,l,v+n)),eA.blitFramebuffer(d,p,h,u,m,g,h,u,eA.DEPTH_BUFFER_BIT,eA.NEAREST);r.bindFramebuffer(eA.READ_FRAMEBUFFER,null),r.bindFramebuffer(eA.DRAW_FRAMEBUFFER,null)}else if(0!==a||e.isRenderTargetTexture||s.has(e)){let n=s.get(e),i=s.get(t);r.bindFramebuffer(eA.READ_FRAMEBUFFER,eZ),r.bindFramebuffer(eA.DRAW_FRAMEBUFFER,eJ);for(let e=0;e<c;e++)R?eA.framebufferTextureLayer(eA.READ_FRAMEBUFFER,eA.COLOR_ATTACHMENT0,n.__webglTexture,a,f+e):eA.framebufferTexture2D(eA.READ_FRAMEBUFFER,eA.COLOR_ATTACHMENT0,eA.TEXTURE_2D,n.__webglTexture,a),C?eA.framebufferTextureLayer(eA.DRAW_FRAMEBUFFER,eA.COLOR_ATTACHMENT0,i.__webglTexture,l,v+e):eA.framebufferTexture2D(eA.DRAW_FRAMEBUFFER,eA.COLOR_ATTACHMENT0,eA.TEXTURE_2D,i.__webglTexture,l),0!==a?eA.blitFramebuffer(d,p,h,u,m,g,h,u,eA.COLOR_BUFFER_BIT,eA.NEAREST):C?eA.copyTexSubImage3D(_,l,m,g,v+e,d,p,h,u):eA.copyTexSubImage2D(_,l,m,g,d,p,h,u);r.bindFramebuffer(eA.READ_FRAMEBUFFER,null),r.bindFramebuffer(eA.DRAW_FRAMEBUFFER,null)}else C?e.isDataTexture||e.isData3DTexture?eA.texSubImage3D(_,l,m,g,v,h,u,c,x,b,y.data):t.isCompressedArrayTexture?eA.compressedTexSubImage3D(_,l,m,g,v,h,u,c,x,y.data):eA.texSubImage3D(_,l,m,g,v,h,u,c,x,b,y):e.isDataTexture?eA.texSubImage2D(eA.TEXTURE_2D,l,m,g,h,u,x,b,y.data):e.isCompressedTexture?eA.compressedTexSubImage2D(eA.TEXTURE_2D,l,m,g,y.width,y.height,x,y.data):eA.texSubImage2D(eA.TEXTURE_2D,l,m,g,h,u,x,b,y);eA.pixelStorei(eA.UNPACK_ROW_LENGTH,M),eA.pixelStorei(eA.UNPACK_IMAGE_HEIGHT,S),eA.pixelStorei(eA.UNPACK_SKIP_PIXELS,E),eA.pixelStorei(eA.UNPACK_SKIP_ROWS,w),eA.pixelStorei(eA.UNPACK_SKIP_IMAGES,A),0===l&&t.generateMipmaps&&eA.generateMipmap(_),r.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n=null,i=null,r=0){return k('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(e,t,n,i,r)},this.initRenderTarget=function(e){void 0===s.get(e).__webglFramebuffer&&o.setupRenderTarget(e)},this.initTexture=function(e){e.isCubeTexture?o.setTextureCube(e,0):e.isData3DTexture?o.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?o.setTexture2DArray(e,0):o.setTexture2D(e,0),r.unbindTexture()},this.resetState=function(){J=0,$=0,ee=null,r.reset(),w.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return 2e3}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;let t=this.getContext();t.drawingBufferColorSpace=G._getDrawingBufferColorSpace(e),t.unpackColorSpace=G._getUnpackColorSpace()}}class sT{constructor(e){void 0===e&&(e=[0,0,0,0,0,0,0,0,0]),this.elements=e}identity(){let e=this.elements;e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1}setZero(){let e=this.elements;e[0]=0,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=0,e[6]=0,e[7]=0,e[8]=0}setTrace(e){let t=this.elements;t[0]=e.x,t[4]=e.y,t[8]=e.z}getTrace(e){void 0===e&&(e=new sA);let t=this.elements;return e.x=t[0],e.y=t[4],e.z=t[8],e}vmult(e,t){void 0===t&&(t=new sA);let n=this.elements,i=e.x,r=e.y,a=e.z;return t.x=n[0]*i+n[1]*r+n[2]*a,t.y=n[3]*i+n[4]*r+n[5]*a,t.z=n[6]*i+n[7]*r+n[8]*a,t}smult(e){for(let t=0;t<this.elements.length;t++)this.elements[t]*=e}mmult(e,t){void 0===t&&(t=new sT);let n=this.elements,i=e.elements,r=t.elements,a=n[0],s=n[1],o=n[2],l=n[3],h=n[4],u=n[5],c=n[6],d=n[7],p=n[8],f=i[0],m=i[1],g=i[2],v=i[3],_=i[4],y=i[5],x=i[6],b=i[7],M=i[8];return r[0]=a*f+s*v+o*x,r[1]=a*m+s*_+o*b,r[2]=a*g+s*y+o*M,r[3]=l*f+h*v+u*x,r[4]=l*m+h*_+u*b,r[5]=l*g+h*y+u*M,r[6]=c*f+d*v+p*x,r[7]=c*m+d*_+p*b,r[8]=c*g+d*y+p*M,t}scale(e,t){void 0===t&&(t=new sT);let n=this.elements,i=t.elements;for(let t=0;3!==t;t++)i[3*t+0]=e.x*n[3*t+0],i[3*t+1]=e.y*n[3*t+1],i[3*t+2]=e.z*n[3*t+2];return t}solve(e,t){let n,i,r,a;void 0===t&&(t=new sA);let s=[];for(n=0;n<12;n++)s.push(0);for(n=0;n<3;n++)for(i=0;i<3;i++)s[n+4*i]=this.elements[n+3*i];s[3]=e.x,s[7]=e.y,s[11]=e.z;let o=3;do{if(0===s[(n=3-o)+4*n]){for(i=n+1;i<3;i++)if(0!==s[n+4*i]){r=4;do a=4-r,s[a+4*n]+=s[a+4*i];while(--r)break}}if(0!==s[n+4*n])for(i=n+1;i<3;i++){let e=s[n+4*i]/s[n+4*n];r=4;do s[(a=4-r)+4*i]=a<=n?0:s[a+4*i]-s[a+4*n]*e;while(--r)}}while(--o)if(t.z=s[11]/s[10],t.y=(s[7]-s[6]*t.z)/s[5],t.x=(s[3]-s[2]*t.z-s[1]*t.y)/s[0],isNaN(t.x)||isNaN(t.y)||isNaN(t.z)||t.x===1/0||t.y===1/0||t.z===1/0)throw`Could not solve equation! Got x=[${t.toString()}], b=[${e.toString()}], A=[${this.toString()}]`;return t}e(e,t,n){if(void 0===n)return this.elements[t+3*e];this.elements[t+3*e]=n}copy(e){for(let t=0;t<e.elements.length;t++)this.elements[t]=e.elements[t];return this}toString(){let e="";for(let t=0;t<9;t++)e+=this.elements[t]+",";return e}reverse(e){let t,n,i,r;for(void 0===e&&(e=new sT),t=0;t<3;t++)for(n=0;n<3;n++)sw[t+6*n]=this.elements[t+3*n];sw[3]=1,sw[9]=0,sw[15]=0,sw[4]=0,sw[10]=1,sw[16]=0,sw[5]=0,sw[11]=0,sw[17]=1;let a=3;do{if(0===sw[(t=3-a)+6*t]){for(n=t+1;n<3;n++)if(0!==sw[t+6*n]){i=6;do r=6-i,sw[r+6*t]+=sw[r+6*n];while(--i)break}}if(0!==sw[t+6*t])for(n=t+1;n<3;n++){let e=sw[t+6*n]/sw[t+6*t];i=6;do sw[(r=6-i)+6*n]=r<=t?0:sw[r+6*n]-sw[r+6*t]*e;while(--i)}}while(--a)t=2;do{n=t-1;do{let e=sw[t+6*n]/sw[t+6*t];i=6;do sw[(r=6-i)+6*n]=sw[r+6*n]-sw[r+6*t]*e;while(--i)}while(n--)}while(--t)t=2;do{let e=1/sw[t+6*t];i=6;do sw[(r=6-i)+6*t]=sw[r+6*t]*e;while(--i)}while(t--)t=2;do{n=2;do{if(isNaN(r=sw[3+n+6*t])||r===1/0)throw`Could not reverse! A=[${this.toString()}]`;e.e(t,n,r)}while(n--)}while(t--)return e}setRotationFromQuaternion(e){let t=e.x,n=e.y,i=e.z,r=e.w,a=t+t,s=n+n,o=i+i,l=t*a,h=t*s,u=t*o,c=n*s,d=n*o,p=i*o,f=r*a,m=r*s,g=r*o,v=this.elements;return v[0]=1-(c+p),v[1]=h-g,v[2]=u+m,v[3]=h+g,v[4]=1-(l+p),v[5]=d-f,v[6]=u-m,v[7]=d+f,v[8]=1-(l+c),this}transpose(e){let t;void 0===e&&(e=new sT);let n=this.elements,i=e.elements;return i[0]=n[0],i[4]=n[4],i[8]=n[8],t=n[1],i[1]=n[3],i[3]=t,t=n[2],i[2]=n[6],i[6]=t,t=n[5],i[5]=n[7],i[7]=t,e}}const sw=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class sA{constructor(e,t,n){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),this.x=e,this.y=t,this.z=n}cross(e,t){void 0===t&&(t=new sA);let n=e.x,i=e.y,r=e.z,a=this.x,s=this.y,o=this.z;return t.x=s*r-o*i,t.y=o*n-a*r,t.z=a*i-s*n,t}set(e,t,n){return this.x=e,this.y=t,this.z=n,this}setZero(){this.x=this.y=this.z=0}vadd(e,t){if(!t)return new sA(this.x+e.x,this.y+e.y,this.z+e.z);t.x=e.x+this.x,t.y=e.y+this.y,t.z=e.z+this.z}vsub(e,t){if(!t)return new sA(this.x-e.x,this.y-e.y,this.z-e.z);t.x=this.x-e.x,t.y=this.y-e.y,t.z=this.z-e.z}crossmat(){return new sT([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){let e=this.x,t=this.y,n=this.z,i=Math.sqrt(e*e+t*t+n*n);if(i>0){let e=1/i;this.x*=e,this.y*=e,this.z*=e}else this.x=0,this.y=0,this.z=0;return i}unit(e){void 0===e&&(e=new sA);let t=this.x,n=this.y,i=this.z,r=Math.sqrt(t*t+n*n+i*i);return r>0?(r=1/r,e.x=t*r,e.y=n*r,e.z=i*r):(e.x=1,e.y=0,e.z=0),e}length(){let e=this.x,t=this.y,n=this.z;return Math.sqrt(e*e+t*t+n*n)}lengthSquared(){return this.dot(this)}distanceTo(e){let t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,s=e.z;return Math.sqrt((r-t)*(r-t)+(a-n)*(a-n)+(s-i)*(s-i))}distanceSquared(e){let t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,s=e.z;return(r-t)*(r-t)+(a-n)*(a-n)+(s-i)*(s-i)}scale(e,t){void 0===t&&(t=new sA);let n=this.x,i=this.y,r=this.z;return t.x=e*n,t.y=e*i,t.z=e*r,t}vmul(e,t){return void 0===t&&(t=new sA),t.x=e.x*this.x,t.y=e.y*this.y,t.z=e.z*this.z,t}addScaledVector(e,t,n){return void 0===n&&(n=new sA),n.x=this.x+e*t.x,n.y=this.y+e*t.y,n.z=this.z+e*t.z,n}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}isZero(){return 0===this.x&&0===this.y&&0===this.z}negate(e){return void 0===e&&(e=new sA),e.x=-this.x,e.y=-this.y,e.z=-this.z,e}tangents(e,t){let n=this.length();if(n>0){let i=1/n;sR.set(this.x*i,this.y*i,this.z*i),.9>Math.abs(sR.x)?sC.set(1,0,0):sC.set(0,1,0),sR.cross(sC,e),sR.cross(e,t)}else e.set(1,0,0),t.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}lerp(e,t,n){let i=this.x,r=this.y,a=this.z;n.x=i+(e.x-i)*t,n.y=r+(e.y-r)*t,n.z=a+(e.z-a)*t}almostEquals(e,t){return void 0===t&&(t=1e-6),!(Math.abs(this.x-e.x)>t||Math.abs(this.y-e.y)>t||Math.abs(this.z-e.z)>t)}almostZero(e){return void 0===e&&(e=1e-6),!(Math.abs(this.x)>e||Math.abs(this.y)>e||Math.abs(this.z)>e)}isAntiparallelTo(e,t){return this.negate(sP),sP.almostEquals(e,t)}clone(){return new sA(this.x,this.y,this.z)}}sA.ZERO=new sA(0,0,0),sA.UNIT_X=new sA(1,0,0),sA.UNIT_Y=new sA(0,1,0),sA.UNIT_Z=new sA(0,0,1);const sR=new sA,sC=new sA,sP=new sA;class sL{constructor(e){void 0===e&&(e={}),this.lowerBound=new sA,this.upperBound=new sA,e.lowerBound&&this.lowerBound.copy(e.lowerBound),e.upperBound&&this.upperBound.copy(e.upperBound)}setFromPoints(e,t,n,i){let r=this.lowerBound,a=this.upperBound;r.copy(e[0]),n&&n.vmult(r,r),a.copy(r);for(let t=1;t<e.length;t++){let i=e[t];n&&(n.vmult(i,sI),i=sI),i.x>a.x&&(a.x=i.x),i.x<r.x&&(r.x=i.x),i.y>a.y&&(a.y=i.y),i.y<r.y&&(r.y=i.y),i.z>a.z&&(a.z=i.z),i.z<r.z&&(r.z=i.z)}return t&&(t.vadd(r,r),t.vadd(a,a)),i&&(r.x-=i,r.y-=i,r.z-=i,a.x+=i,a.y+=i,a.z+=i),this}copy(e){return this.lowerBound.copy(e.lowerBound),this.upperBound.copy(e.upperBound),this}clone(){return new sL().copy(this)}extend(e){this.lowerBound.x=Math.min(this.lowerBound.x,e.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,e.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,e.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,e.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,e.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,e.upperBound.z)}overlaps(e){let t=this.lowerBound,n=this.upperBound,i=e.lowerBound,r=e.upperBound,a=i.x<=n.x&&n.x<=r.x||t.x<=r.x&&r.x<=n.x,s=i.y<=n.y&&n.y<=r.y||t.y<=r.y&&r.y<=n.y,o=i.z<=n.z&&n.z<=r.z||t.z<=r.z&&r.z<=n.z;return a&&s&&o}volume(){let e=this.lowerBound,t=this.upperBound;return(t.x-e.x)*(t.y-e.y)*(t.z-e.z)}contains(e){let t=this.lowerBound,n=this.upperBound,i=e.lowerBound,r=e.upperBound;return t.x<=i.x&&n.x>=r.x&&t.y<=i.y&&n.y>=r.y&&t.z<=i.z&&n.z>=r.z}getCorners(e,t,n,i,r,a,s,o){let l=this.lowerBound,h=this.upperBound;e.copy(l),t.set(h.x,l.y,l.z),n.set(h.x,h.y,l.z),i.set(l.x,h.y,h.z),r.set(h.x,l.y,h.z),a.set(l.x,h.y,l.z),s.set(l.x,l.y,h.z),o.copy(h)}toLocalFrame(e,t){let n=sN[0],i=sN[1],r=sN[2],a=sN[3],s=sN[4],o=sN[5],l=sN[6],h=sN[7];this.getCorners(n,i,r,a,s,o,l,h);for(let t=0;8!==t;t++){let n=sN[t];e.pointToLocal(n,n)}return t.setFromPoints(sN)}toWorldFrame(e,t){let n=sN[0],i=sN[1],r=sN[2],a=sN[3],s=sN[4],o=sN[5],l=sN[6],h=sN[7];this.getCorners(n,i,r,a,s,o,l,h);for(let t=0;8!==t;t++){let n=sN[t];e.pointToWorld(n,n)}return t.setFromPoints(sN)}overlapsRay(e){let{direction:t,from:n}=e,i=1/t.x,r=1/t.y,a=1/t.z,s=(this.lowerBound.x-n.x)*i,o=(this.upperBound.x-n.x)*i,l=(this.lowerBound.y-n.y)*r,h=(this.upperBound.y-n.y)*r,u=(this.lowerBound.z-n.z)*a,c=(this.upperBound.z-n.z)*a,d=Math.max(Math.max(Math.min(s,o),Math.min(l,h)),Math.min(u,c)),p=Math.min(Math.min(Math.max(s,o),Math.max(l,h)),Math.max(u,c));return!(p<0)&&!(d>p)}}const sI=new sA,sN=[new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA];class sD{constructor(){this.matrix=[]}get(e,t){let{index:n}=e,{index:i}=t;if(i>n){let e=i;i=n,n=e}return this.matrix[(n*(n+1)>>1)+i-1]}set(e,t,n){let{index:i}=e,{index:r}=t;if(r>i){let e=r;r=i,i=e}this.matrix[(i*(i+1)>>1)+r-1]=+!!n}reset(){for(let e=0,t=this.matrix.length;e!==t;e++)this.matrix[e]=0}setNumObjects(e){this.matrix.length=e*(e-1)>>1}}class sU{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let n=this._listeners;return void 0===n[e]&&(n[e]=[]),n[e].includes(t)||n[e].push(t),this}hasEventListener(e,t){if(void 0===this._listeners)return!1;let n=this._listeners;return!!(void 0!==n[e]&&n[e].includes(t))}hasAnyEventListener(e){return void 0!==this._listeners&&void 0!==this._listeners[e]}removeEventListener(e,t){if(void 0===this._listeners)return this;let n=this._listeners;if(void 0===n[e])return this;let i=n[e].indexOf(t);return -1!==i&&n[e].splice(i,1),this}dispatchEvent(e){if(void 0===this._listeners)return this;let t=this._listeners[e.type];if(void 0!==t){e.target=this;for(let n=0,i=t.length;n<i;n++)t[n].call(this,e)}return this}}class sO{constructor(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=0),void 0===i&&(i=1),this.x=e,this.y=t,this.z=n,this.w=i}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(e,t){let n=Math.sin(.5*t);return this.x=e.x*n,this.y=e.y*n,this.z=e.z*n,this.w=Math.cos(.5*t),this}toAxisAngle(e){void 0===e&&(e=new sA),this.normalize();let t=2*Math.acos(this.w),n=Math.sqrt(1-this.w*this.w);return n<.001?(e.x=this.x,e.y=this.y,e.z=this.z):(e.x=this.x/n,e.y=this.y/n,e.z=this.z/n),[e,t]}setFromVectors(e,t){if(e.isAntiparallelTo(t))e.tangents(sF,sB),this.setFromAxisAngle(sF,Math.PI);else{let n=e.cross(t);this.x=n.x,this.y=n.y,this.z=n.z,this.w=Math.sqrt(e.length()**2*t.length()**2)+e.dot(t),this.normalize()}return this}mult(e,t){void 0===t&&(t=new sO);let n=this.x,i=this.y,r=this.z,a=this.w,s=e.x,o=e.y,l=e.z,h=e.w;return t.x=n*h+a*s+i*l-r*o,t.y=i*h+a*o+r*s-n*l,t.z=r*h+a*l+n*o-i*s,t.w=a*h-n*s-i*o-r*l,t}inverse(e){void 0===e&&(e=new sO);let t=this.x,n=this.y,i=this.z,r=this.w;this.conjugate(e);let a=1/(t*t+n*n+i*i+r*r);return e.x*=a,e.y*=a,e.z*=a,e.w*=a,e}conjugate(e){return void 0===e&&(e=new sO),e.x=-this.x,e.y=-this.y,e.z=-this.z,e.w=this.w,e}normalize(){let e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===e?(this.x=0,this.y=0,this.z=0,this.w=0):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}normalizeFast(){let e=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return 0===e?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}vmult(e,t){void 0===t&&(t=new sA);let n=e.x,i=e.y,r=e.z,a=this.x,s=this.y,o=this.z,l=this.w,h=l*n+s*r-o*i,u=l*i+o*n-a*r,c=l*r+a*i-s*n,d=-a*n-s*i-o*r;return t.x=h*l+-(d*a)+-(u*o)- -(c*s),t.y=u*l+-(d*s)+-(c*a)- -(h*o),t.z=c*l+-(d*o)+-(h*s)- -(u*a),t}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}toEuler(e,t){let n,i,r;void 0===t&&(t="YZX");let a=this.x,s=this.y,o=this.z,l=this.w;if("YZX"===t){let e=a*s+o*l;if(e>.499&&(n=2*Math.atan2(a,l),i=Math.PI/2,r=0),e<-.499&&(n=-2*Math.atan2(a,l),i=-Math.PI/2,r=0),void 0===n){let t=o*o;n=Math.atan2(2*s*l-2*a*o,1-s*s*2-2*t),i=Math.asin(2*e),r=Math.atan2(2*a*l-2*s*o,1-a*a*2-2*t)}}else throw Error(`Euler order ${t} not supported yet.`);e.y=n,e.z=i,e.x=r}setFromEuler(e,t,n,i){void 0===i&&(i="XYZ");let r=Math.cos(e/2),a=Math.cos(t/2),s=Math.cos(n/2),o=Math.sin(e/2),l=Math.sin(t/2),h=Math.sin(n/2);return"XYZ"===i?(this.x=o*a*s+r*l*h,this.y=r*l*s-o*a*h,this.z=r*a*h+o*l*s,this.w=r*a*s-o*l*h):"YXZ"===i?(this.x=o*a*s+r*l*h,this.y=r*l*s-o*a*h,this.z=r*a*h-o*l*s,this.w=r*a*s+o*l*h):"ZXY"===i?(this.x=o*a*s-r*l*h,this.y=r*l*s+o*a*h,this.z=r*a*h+o*l*s,this.w=r*a*s-o*l*h):"ZYX"===i?(this.x=o*a*s-r*l*h,this.y=r*l*s+o*a*h,this.z=r*a*h-o*l*s,this.w=r*a*s+o*l*h):"YZX"===i?(this.x=o*a*s+r*l*h,this.y=r*l*s+o*a*h,this.z=r*a*h-o*l*s,this.w=r*a*s-o*l*h):"XZY"===i&&(this.x=o*a*s-r*l*h,this.y=r*l*s-o*a*h,this.z=r*a*h+o*l*s,this.w=r*a*s+o*l*h),this}clone(){return new sO(this.x,this.y,this.z,this.w)}slerp(e,t,n){let i,r,a,s,o;void 0===n&&(n=new sO);let l=this.x,h=this.y,u=this.z,c=this.w,d=e.x,p=e.y,f=e.z,m=e.w;return(r=l*d+h*p+u*f+c*m)<0&&(r=-r,d=-d,p=-p,f=-f,m=-m),1-r>1e-6?(a=Math.sin(i=Math.acos(r)),s=Math.sin((1-t)*i)/a,o=Math.sin(t*i)/a):(s=1-t,o=t),n.x=s*l+o*d,n.y=s*h+o*p,n.z=s*u+o*f,n.w=s*c+o*m,n}integrate(e,t,n,i){void 0===i&&(i=new sO);let r=e.x*n.x,a=e.y*n.y,s=e.z*n.z,o=this.x,l=this.y,h=this.z,u=this.w,c=.5*t;return i.x+=c*(r*u+a*h-s*l),i.y+=c*(a*u+s*o-r*h),i.z+=c*(s*u+r*l-a*o),i.w+=c*(-r*o-a*l-s*h),i}}const sF=new sA,sB=new sA;class sz{constructor(e){void 0===e&&(e={}),this.id=sz.idCounter++,this.type=e.type||0,this.boundingSphereRadius=0,this.collisionResponse=!e.collisionResponse||e.collisionResponse,this.collisionFilterGroup=void 0!==e.collisionFilterGroup?e.collisionFilterGroup:1,this.collisionFilterMask=void 0!==e.collisionFilterMask?e.collisionFilterMask:-1,this.material=e.material?e.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(e,t){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(e,t,n,i){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}sz.idCounter=0,sz.types={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class sk{constructor(e){void 0===e&&(e={}),this.position=new sA,this.quaternion=new sO,e.position&&this.position.copy(e.position),e.quaternion&&this.quaternion.copy(e.quaternion)}pointToLocal(e,t){return sk.pointToLocalFrame(this.position,this.quaternion,e,t)}pointToWorld(e,t){return sk.pointToWorldFrame(this.position,this.quaternion,e,t)}vectorToWorldFrame(e,t){return void 0===t&&(t=new sA),this.quaternion.vmult(e,t),t}static pointToLocalFrame(e,t,n,i){return void 0===i&&(i=new sA),n.vsub(e,i),t.conjugate(sH),sH.vmult(i,i),i}static pointToWorldFrame(e,t,n,i){return void 0===i&&(i=new sA),t.vmult(n,i),i.vadd(e,i),i}static vectorToWorldFrame(e,t,n){return void 0===n&&(n=new sA),e.vmult(t,n),n}static vectorToLocalFrame(e,t,n,i){return void 0===i&&(i=new sA),t.w*=-1,t.vmult(n,i),t.w*=-1,i}}const sH=new sO;class sV extends sz{constructor(e){void 0===e&&(e={});let{vertices:t=[],faces:n=[],normals:i=[],axes:r,boundingSphereRadius:a}=e;super({type:sz.types.CONVEXPOLYHEDRON}),this.vertices=t,this.faces=n,this.faceNormals=i,0===this.faceNormals.length&&this.computeNormals(),a?this.boundingSphereRadius=a:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=r?r.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){let e=this.faces,t=this.vertices,n=this.uniqueEdges;n.length=0;let i=new sA;for(let r=0;r!==e.length;r++){let a=e[r],s=a.length;for(let e=0;e!==s;e++){let r=(e+1)%s;t[a[e]].vsub(t[a[r]],i),i.normalize();let o=!1;for(let e=0;e!==n.length;e++)if(n[e].almostEquals(i)||n[e].almostEquals(i)){o=!0;break}o||n.push(i.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let e=0;e<this.faces.length;e++){for(let t=0;t<this.faces[e].length;t++)if(!this.vertices[this.faces[e][t]])throw Error(`Vertex ${this.faces[e][t]} not found!`);let t=this.faceNormals[e]||new sA;this.getFaceNormal(e,t),t.negate(t),this.faceNormals[e]=t;let n=this.vertices[this.faces[e][0]];if(0>t.dot(n)){console.error(`.faceNormals[${e}] = Vec3(${t.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let t=0;t<this.faces[e].length;t++)console.warn(`.vertices[${this.faces[e][t]}] = Vec3(${this.vertices[this.faces[e][t]].toString()})`)}}}getFaceNormal(e,t){let n=this.faces[e],i=this.vertices[n[0]],r=this.vertices[n[1]],a=this.vertices[n[2]];sV.computeNormal(i,r,a,t)}static computeNormal(e,t,n,i){let r=new sA,a=new sA;t.vsub(e,a),n.vsub(t,r),r.cross(a,i),i.isZero()||i.normalize()}clipAgainstHull(e,t,n,i,r,a,s,o,l){let h=new sA,u=-1,c=-Number.MAX_VALUE;for(let e=0;e<n.faces.length;e++){h.copy(n.faceNormals[e]),r.vmult(h,h);let t=h.dot(a);t>c&&(c=t,u=e)}let d=[];for(let e=0;e<n.faces[u].length;e++){let t=n.vertices[n.faces[u][e]],a=new sA;a.copy(t),r.vmult(a,a),i.vadd(a,a),d.push(a)}u>=0&&this.clipFaceAgainstHull(a,e,t,d,s,o,l)}findSeparatingAxis(e,t,n,i,r,a,s,o){let l=new sA,h=new sA,u=new sA,c=new sA,d=new sA,p=new sA,f=Number.MAX_VALUE;if(this.uniqueAxes)for(let s=0;s!==this.uniqueAxes.length;s++){n.vmult(this.uniqueAxes[s],l);let o=this.testSepAxis(l,e,t,n,i,r);if(!1===o)return!1;o<f&&(f=o,a.copy(l))}else{let o=s?s.length:this.faces.length;for(let h=0;h<o;h++){let o=s?s[h]:h;l.copy(this.faceNormals[o]),n.vmult(l,l);let u=this.testSepAxis(l,e,t,n,i,r);if(!1===u)return!1;u<f&&(f=u,a.copy(l))}}if(e.uniqueAxes)for(let s=0;s!==e.uniqueAxes.length;s++){r.vmult(e.uniqueAxes[s],h);let o=this.testSepAxis(h,e,t,n,i,r);if(!1===o)return!1;o<f&&(f=o,a.copy(h))}else{let s=o?o.length:e.faces.length;for(let l=0;l<s;l++){let s=o?o[l]:l;h.copy(e.faceNormals[s]),r.vmult(h,h);let u=this.testSepAxis(h,e,t,n,i,r);if(!1===u)return!1;u<f&&(f=u,a.copy(h))}}for(let s=0;s!==this.uniqueEdges.length;s++){n.vmult(this.uniqueEdges[s],c);for(let s=0;s!==e.uniqueEdges.length;s++)if(r.vmult(e.uniqueEdges[s],d),c.cross(d,p),!p.almostZero()){p.normalize();let s=this.testSepAxis(p,e,t,n,i,r);if(!1===s)return!1;s<f&&(f=s,a.copy(p))}}return i.vsub(t,u),u.dot(a)>0&&a.negate(a),!0}testSepAxis(e,t,n,i,r,a){sV.project(this,e,n,i,sG),sV.project(t,e,r,a,sW);let s=sG[0],o=sG[1],l=sW[0],h=sW[1];if(s<h||l<o)return!1;let u=s-h,c=l-o;return u<c?u:c}calculateLocalInertia(e,t){let n=new sA,i=new sA;this.computeLocalAABB(i,n);let r=n.x-i.x,a=n.y-i.y,s=n.z-i.z;t.x=1/12*e*(2*a*2*a+2*s*2*s),t.y=1/12*e*(2*r*2*r+2*s*2*s),t.z=1/12*e*(2*a*2*a+2*r*2*r)}getPlaneConstantOfFace(e){let t=this.faces[e],n=this.faceNormals[e],i=this.vertices[t[0]];return-n.dot(i)}clipFaceAgainstHull(e,t,n,i,r,a,s){let o=new sA,l=new sA,h=new sA,u=new sA,c=new sA,d=new sA,p=new sA,f=new sA,m=[],g=-1,v=Number.MAX_VALUE;for(let t=0;t<this.faces.length;t++){o.copy(this.faceNormals[t]),n.vmult(o,o);let i=o.dot(e);i<v&&(v=i,g=t)}if(g<0)return;let _=this.faces[g];_.connectedFaces=[];for(let e=0;e<this.faces.length;e++)for(let t=0;t<this.faces[e].length;t++)-1!==_.indexOf(this.faces[e][t])&&e!==g&&-1===_.connectedFaces.indexOf(e)&&_.connectedFaces.push(e);let y=_.length;for(let e=0;e<y;e++){let r=this.vertices[_[e]],a=this.vertices[_[(e+1)%y]];r.vsub(a,l),h.copy(l),n.vmult(h,h),t.vadd(h,h),u.copy(this.faceNormals[g]),n.vmult(u,u),t.vadd(u,u),h.cross(u,c),c.negate(c),d.copy(r),n.vmult(d,d),t.vadd(d,d);let s=_.connectedFaces[e];p.copy(this.faceNormals[s]);let o=this.getPlaneConstantOfFace(s);f.copy(p),n.vmult(f,f);let v=o-f.dot(t);for(this.clipFaceAgainstPlane(i,m,f,v);i.length;)i.shift();for(;m.length;)i.push(m.shift())}p.copy(this.faceNormals[g]);let x=this.getPlaneConstantOfFace(g);f.copy(p),n.vmult(f,f);let b=x-f.dot(t);for(let e=0;e<i.length;e++){let t=f.dot(i[e])+b;if(t<=r&&(console.log(`clamped: depth=${t} to minDist=${r}`),t=r),t<=a){let n=i[e];if(t<=1e-6){let e={point:n,normal:f,depth:t};s.push(e)}}}}clipFaceAgainstPlane(e,t,n,i){let r,a,s=e.length;if(s<2)return t;let o=e[e.length-1],l=e[0];r=n.dot(o)+i;for(let h=0;h<s;h++){if(l=e[h],a=n.dot(l)+i,r<0)if(a<0){let e=new sA;e.copy(l),t.push(e)}else{let e=new sA;o.lerp(l,r/(r-a),e),t.push(e)}else if(a<0){let e=new sA;o.lerp(l,r/(r-a),e),t.push(e),t.push(l)}o=l,r=a}return t}computeWorldVertices(e,t){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new sA);let n=this.vertices,i=this.worldVertices;for(let r=0;r!==this.vertices.length;r++)t.vmult(n[r],i[r]),e.vadd(i[r],i[r]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(e,t){let n=this.vertices;e.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),t.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let i=0;i<this.vertices.length;i++){let r=n[i];r.x<e.x?e.x=r.x:r.x>t.x&&(t.x=r.x),r.y<e.y?e.y=r.y:r.y>t.y&&(t.y=r.y),r.z<e.z?e.z=r.z:r.z>t.z&&(t.z=r.z)}}computeWorldFaceNormals(e){let t=this.faceNormals.length;for(;this.worldFaceNormals.length<t;)this.worldFaceNormals.push(new sA);let n=this.faceNormals,i=this.worldFaceNormals;for(let r=0;r!==t;r++)e.vmult(n[r],i[r]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let e=0,t=this.vertices;for(let n=0;n!==t.length;n++){let i=t[n].lengthSquared();i>e&&(e=i)}this.boundingSphereRadius=Math.sqrt(e)}calculateWorldAABB(e,t,n,i){let r,a,s,o,l,h,u=this.vertices,c=new sA;for(let n=0;n<u.length;n++)c.copy(u[n]),t.vmult(c,c),e.vadd(c,c),(void 0===r||c.x<r)&&(r=c.x),(void 0===o||c.x>o)&&(o=c.x),(void 0===a||c.y<a)&&(a=c.y),(void 0===l||c.y>l)&&(l=c.y),(void 0===s||c.z<s)&&(s=c.z),(void 0===h||c.z>h)&&(h=c.z);n.set(r,a,s),i.set(o,l,h)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(e){void 0===e&&(e=new sA);let t=this.vertices;for(let n=0;n<t.length;n++)e.vadd(t[n],e);return e.scale(1/t.length,e),e}transformAllPoints(e,t){let n=this.vertices.length,i=this.vertices;if(t){for(let e=0;e<n;e++){let n=i[e];t.vmult(n,n)}for(let e=0;e<this.faceNormals.length;e++){let n=this.faceNormals[e];t.vmult(n,n)}}if(e)for(let t=0;t<n;t++){let n=i[t];n.vadd(e,n)}}pointIsInside(e){let t=this.vertices,n=this.faces,i=this.faceNormals,r=new sA;this.getAveragePointLocal(r);for(let a=0;a<this.faces.length;a++){let s=i[a],o=t[n[a][0]],l=new sA;e.vsub(o,l);let h=s.dot(l),u=new sA;r.vsub(o,u);let c=s.dot(u);if(h<0&&c>0||h>0&&c<0)return!1}return -1}static project(e,t,n,i,r){let a=e.vertices.length,s=0,o=0,l=e.vertices;sX.setZero(),sk.vectorToLocalFrame(n,i,t,sj),sk.pointToLocalFrame(n,i,sX,sX);let h=sX.dot(sj);o=s=l[0].dot(sj);for(let e=1;e<a;e++){let t=l[e].dot(sj);t>s&&(s=t),t<o&&(o=t)}if((o-=h)>(s-=h)){let e=o;o=s,s=e}r[0]=s,r[1]=o}}const sG=[],sW=[];new sA;const sj=new sA,sX=new sA;class sq extends sz{constructor(e){super({type:sz.types.BOX}),this.halfExtents=e,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){let e=this.halfExtents.x,t=this.halfExtents.y,n=this.halfExtents.z,i=new sV({vertices:[new sA(-e,-t,-n),new sA(e,-t,-n),new sA(e,t,-n),new sA(-e,t,-n),new sA(-e,-t,n),new sA(e,-t,n),new sA(e,t,n),new sA(-e,t,n)],faces:[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],axes:[new sA(0,0,1),new sA(0,1,0),new sA(1,0,0)]});this.convexPolyhedronRepresentation=i,i.material=this.material}calculateLocalInertia(e,t){return void 0===t&&(t=new sA),sq.calculateInertia(this.halfExtents,e,t),t}static calculateInertia(e,t,n){n.x=1/12*t*(2*e.y*2*e.y+2*e.z*2*e.z),n.y=1/12*t*(2*e.x*2*e.x+2*e.z*2*e.z),n.z=1/12*t*(2*e.y*2*e.y+2*e.x*2*e.x)}getSideNormals(e,t){let n=this.halfExtents;if(e[0].set(n.x,0,0),e[1].set(0,n.y,0),e[2].set(0,0,n.z),e[3].set(-n.x,0,0),e[4].set(0,-n.y,0),e[5].set(0,0,-n.z),void 0!==t)for(let n=0;n!==e.length;n++)t.vmult(e[n],e[n]);return e}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(e,t,n){let i=this.halfExtents,r=[[i.x,i.y,i.z],[-i.x,i.y,i.z],[-i.x,-i.y,i.z],[-i.x,-i.y,-i.z],[i.x,-i.y,-i.z],[i.x,i.y,-i.z],[-i.x,i.y,-i.z],[i.x,-i.y,i.z]];for(let i=0;i<r.length;i++)sY.set(r[i][0],r[i][1],r[i][2]),t.vmult(sY,sY),e.vadd(sY,sY),n(sY.x,sY.y,sY.z)}calculateWorldAABB(e,t,n,i){let r=this.halfExtents;sK[0].set(r.x,r.y,r.z),sK[1].set(-r.x,r.y,r.z),sK[2].set(-r.x,-r.y,r.z),sK[3].set(-r.x,-r.y,-r.z),sK[4].set(r.x,-r.y,-r.z),sK[5].set(r.x,r.y,-r.z),sK[6].set(-r.x,r.y,-r.z),sK[7].set(r.x,-r.y,r.z);let a=sK[0];t.vmult(a,a),e.vadd(a,a),i.copy(a),n.copy(a);for(let r=1;r<8;r++){let a=sK[r];t.vmult(a,a),e.vadd(a,a);let s=a.x,o=a.y,l=a.z;s>i.x&&(i.x=s),o>i.y&&(i.y=o),l>i.z&&(i.z=l),s<n.x&&(n.x=s),o<n.y&&(n.y=o),l<n.z&&(n.z=l)}}}const sY=new sA,sK=[new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA];class sZ extends sU{constructor(e){void 0===e&&(e={}),super(),this.id=sZ.idCounter++,this.index=-1,this.world=null,this.vlambda=new sA,this.collisionFilterGroup="number"==typeof e.collisionFilterGroup?e.collisionFilterGroup:1,this.collisionFilterMask="number"==typeof e.collisionFilterMask?e.collisionFilterMask:-1,this.collisionResponse="boolean"!=typeof e.collisionResponse||e.collisionResponse,this.position=new sA,this.previousPosition=new sA,this.interpolatedPosition=new sA,this.initPosition=new sA,e.position&&(this.position.copy(e.position),this.previousPosition.copy(e.position),this.interpolatedPosition.copy(e.position),this.initPosition.copy(e.position)),this.velocity=new sA,e.velocity&&this.velocity.copy(e.velocity),this.initVelocity=new sA,this.force=new sA;let t="number"==typeof e.mass?e.mass:0;this.mass=t,this.invMass=t>0?1/t:0,this.material=e.material||null,this.linearDamping="number"==typeof e.linearDamping?e.linearDamping:.01,this.type=t<=0?sZ.STATIC:sZ.DYNAMIC,typeof e.type==typeof sZ.STATIC&&(this.type=e.type),this.allowSleep=void 0===e.allowSleep||e.allowSleep,this.sleepState=sZ.AWAKE,this.sleepSpeedLimit=void 0!==e.sleepSpeedLimit?e.sleepSpeedLimit:.1,this.sleepTimeLimit=void 0!==e.sleepTimeLimit?e.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new sA,this.quaternion=new sO,this.initQuaternion=new sO,this.previousQuaternion=new sO,this.interpolatedQuaternion=new sO,e.quaternion&&(this.quaternion.copy(e.quaternion),this.initQuaternion.copy(e.quaternion),this.previousQuaternion.copy(e.quaternion),this.interpolatedQuaternion.copy(e.quaternion)),this.angularVelocity=new sA,e.angularVelocity&&this.angularVelocity.copy(e.angularVelocity),this.initAngularVelocity=new sA,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new sA,this.invInertia=new sA,this.invInertiaWorld=new sT,this.invMassSolve=0,this.invInertiaSolve=new sA,this.invInertiaWorldSolve=new sT,this.fixedRotation=void 0!==e.fixedRotation&&e.fixedRotation,this.angularDamping=void 0!==e.angularDamping?e.angularDamping:.01,this.linearFactor=new sA(1,1,1),e.linearFactor&&this.linearFactor.copy(e.linearFactor),this.angularFactor=new sA(1,1,1),e.angularFactor&&this.angularFactor.copy(e.angularFactor),this.aabb=new sL,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new sA,this.isTrigger=!!e.isTrigger,e.shape&&this.addShape(e.shape),this.updateMassProperties()}wakeUp(){let e=this.sleepState;this.sleepState=sZ.AWAKE,this.wakeUpAfterNarrowphase=!1,e===sZ.SLEEPING&&this.dispatchEvent(sZ.wakeupEvent)}sleep(){this.sleepState=sZ.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(e){if(this.allowSleep){let t=this.sleepState,n=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),i=this.sleepSpeedLimit**2;t===sZ.AWAKE&&n<i?(this.sleepState=sZ.SLEEPY,this.timeLastSleepy=e,this.dispatchEvent(sZ.sleepyEvent)):t===sZ.SLEEPY&&n>i?this.wakeUp():t===sZ.SLEEPY&&e-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(sZ.sleepEvent))}}updateSolveMassProperties(){this.sleepState===sZ.SLEEPING||this.type===sZ.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(e,t){return void 0===t&&(t=new sA),e.vsub(this.position,t),this.quaternion.conjugate().vmult(t,t),t}vectorToLocalFrame(e,t){return void 0===t&&(t=new sA),this.quaternion.conjugate().vmult(e,t),t}pointToWorldFrame(e,t){return void 0===t&&(t=new sA),this.quaternion.vmult(e,t),t.vadd(this.position,t),t}vectorToWorldFrame(e,t){return void 0===t&&(t=new sA),this.quaternion.vmult(e,t),t}addShape(e,t,n){let i=new sA,r=new sO;return t&&i.copy(t),n&&r.copy(n),this.shapes.push(e),this.shapeOffsets.push(i),this.shapeOrientations.push(r),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,e.body=this,this}removeShape(e){let t=this.shapes.indexOf(e);return -1===t?console.warn("Shape does not belong to the body"):(this.shapes.splice(t,1),this.shapeOffsets.splice(t,1),this.shapeOrientations.splice(t,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,e.body=null),this}updateBoundingRadius(){let e=this.shapes,t=this.shapeOffsets,n=e.length,i=0;for(let r=0;r!==n;r++){let n=e[r];n.updateBoundingSphereRadius();let a=t[r].length(),s=n.boundingSphereRadius;a+s>i&&(i=a+s)}this.boundingRadius=i}updateAABB(){let e=this.shapes,t=this.shapeOffsets,n=this.shapeOrientations,i=e.length,r=this.quaternion,a=this.aabb;for(let s=0;s!==i;s++){let i=e[s];r.vmult(t[s],sJ),sJ.vadd(this.position,sJ),r.mult(n[s],s$),i.calculateWorldAABB(sJ,s$,sQ.lowerBound,sQ.upperBound),0===s?a.copy(sQ):a.extend(sQ)}this.aabbNeedsUpdate=!1}updateInertiaWorld(e){let t=this.invInertia;(t.x!==t.y||t.y!==t.z||e)&&(s0.setRotationFromQuaternion(this.quaternion),s0.transpose(s1),s0.scale(t,s0),s0.mmult(s1,this.invInertiaWorld))}applyForce(e,t){void 0===t&&(t=new sA),this.type===sZ.DYNAMIC&&(this.sleepState===sZ.SLEEPING&&this.wakeUp(),t.cross(e,s2),this.force.vadd(e,this.force),this.torque.vadd(s2,this.torque))}applyLocalForce(e,t){void 0===t&&(t=new sA),this.type===sZ.DYNAMIC&&(this.vectorToWorldFrame(e,s3),this.vectorToWorldFrame(t,s4),this.applyForce(s3,s4))}applyTorque(e){this.type===sZ.DYNAMIC&&(this.sleepState===sZ.SLEEPING&&this.wakeUp(),this.torque.vadd(e,this.torque))}applyImpulse(e,t){if(void 0===t&&(t=new sA),this.type!==sZ.DYNAMIC)return;this.sleepState===sZ.SLEEPING&&this.wakeUp();let n=t;s5.copy(e),s5.scale(this.invMass,s5),this.velocity.vadd(s5,this.velocity),n.cross(e,s6),this.invInertiaWorld.vmult(s6,s6),this.angularVelocity.vadd(s6,this.angularVelocity)}applyLocalImpulse(e,t){void 0===t&&(t=new sA),this.type===sZ.DYNAMIC&&(this.vectorToWorldFrame(e,s8),this.vectorToWorldFrame(t,s9),this.applyImpulse(s8,s9))}updateMassProperties(){this.invMass=this.mass>0?1/this.mass:0;let e=this.inertia,t=this.fixedRotation;this.updateAABB(),s7.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),sq.calculateInertia(s7,this.mass,e),this.invInertia.set(e.x>0&&!t?1/e.x:0,e.y>0&&!t?1/e.y:0,e.z>0&&!t?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(e,t){let n=new sA;return e.vsub(this.position,n),this.angularVelocity.cross(n,t),this.velocity.vadd(t,t),t}integrate(e,t,n){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),this.type!==sZ.DYNAMIC&&this.type!==sZ.KINEMATIC||this.sleepState===sZ.SLEEPING)return;let i=this.velocity,r=this.angularVelocity,a=this.position,s=this.force,o=this.torque,l=this.quaternion,h=this.invMass,u=this.invInertiaWorld,c=this.linearFactor,d=h*e;i.x+=s.x*d*c.x,i.y+=s.y*d*c.y,i.z+=s.z*d*c.z;let p=u.elements,f=this.angularFactor,m=o.x*f.x,g=o.y*f.y,v=o.z*f.z;r.x+=e*(p[0]*m+p[1]*g+p[2]*v),r.y+=e*(p[3]*m+p[4]*g+p[5]*v),r.z+=e*(p[6]*m+p[7]*g+p[8]*v),a.x+=i.x*e,a.y+=i.y*e,a.z+=i.z*e,l.integrate(this.angularVelocity,e,this.angularFactor,l),t&&(n?l.normalizeFast():l.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}sZ.idCounter=0,sZ.COLLIDE_EVENT_NAME="collide",sZ.DYNAMIC=1,sZ.STATIC=2,sZ.KINEMATIC=4,sZ.AWAKE=0,sZ.SLEEPY=1,sZ.SLEEPING=2,sZ.wakeupEvent={type:"wakeup"},sZ.sleepyEvent={type:"sleepy"},sZ.sleepEvent={type:"sleep"};const sJ=new sA,s$=new sO,sQ=new sL,s0=new sT,s1=new sT;new sT;const s2=new sA,s3=new sA,s4=new sA,s5=new sA,s6=new sA,s8=new sA,s9=new sA,s7=new sA;class oe{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(e,t,n){throw Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(e,t){return(e.collisionFilterGroup&t.collisionFilterMask)!=0&&(t.collisionFilterGroup&e.collisionFilterMask)!=0&&((e.type&sZ.STATIC)==0&&e.sleepState!==sZ.SLEEPING||(t.type&sZ.STATIC)==0&&t.sleepState!==sZ.SLEEPING)}intersectionTest(e,t,n,i){this.useBoundingBoxes?this.doBoundingBoxBroadphase(e,t,n,i):this.doBoundingSphereBroadphase(e,t,n,i)}doBoundingSphereBroadphase(e,t,n,i){t.position.vsub(e.position,ot);let r=(e.boundingRadius+t.boundingRadius)**2;ot.lengthSquared()<r&&(n.push(e),i.push(t))}doBoundingBoxBroadphase(e,t,n,i){e.aabbNeedsUpdate&&e.updateAABB(),t.aabbNeedsUpdate&&t.updateAABB(),e.aabb.overlaps(t.aabb)&&(n.push(e),i.push(t))}makePairsUnique(e,t){let n=e.length;for(let i=0;i!==n;i++)oi[i]=e[i],or[i]=t[i];e.length=0,t.length=0;for(let e=0;e!==n;e++){let t=oi[e].id,n=or[e].id,i=t<n?`${t},${n}`:`${n},${t}`;on[i]=e,on.keys.push(i)}for(let n=0;n!==on.keys.length;n++){let n=on.keys.pop(),i=on[n];e.push(oi[i]),t.push(or[i]),delete on[n]}}setWorld(e){}static boundingSphereCheck(e,t){let n=new sA;e.position.vsub(t.position,n);let i=e.shapes[0],r=t.shapes[0];return Math.pow(i.boundingSphereRadius+r.boundingSphereRadius,2)>n.lengthSquared()}aabbQuery(e,t,n){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const ot=new sA;new sA,new sO,new sA;const on={keys:[]},oi=[],or=[];new sA,new sA,new sA;class oa extends oe{constructor(){super()}collisionPairs(e,t,n){let i,r,a=e.bodies,s=a.length;for(let e=0;e!==s;e++)for(let s=0;s!==e;s++)i=a[e],r=a[s],this.needBroadphaseCollision(i,r)&&this.intersectionTest(i,r,t,n)}aabbQuery(e,t,n){void 0===n&&(n=[]);for(let i=0;i<e.bodies.length;i++){let r=e.bodies[i];r.aabbNeedsUpdate&&r.updateAABB(),r.aabb.overlaps(t)&&n.push(r)}return n}}class os{constructor(){this.rayFromWorld=new sA,this.rayToWorld=new sA,this.hitNormalWorld=new sA,this.hitPointWorld=new sA,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(e,t,n,i,r,a,s){this.rayFromWorld.copy(e),this.rayToWorld.copy(t),this.hitNormalWorld.copy(n),this.hitPointWorld.copy(i),this.shape=r,this.body=a,this.distance=s}}t=sz.types.SPHERE,n=sz.types.PLANE,i=sz.types.BOX,r=sz.types.CYLINDER,a=sz.types.CONVEXPOLYHEDRON,s=sz.types.HEIGHTFIELD,o=sz.types.TRIMESH;class oo{get[t](){return this._intersectSphere}get[n](){return this._intersectPlane}get[i](){return this._intersectBox}get[r](){return this._intersectConvex}get[a](){return this._intersectConvex}get[s](){return this._intersectHeightfield}get[o](){return this._intersectTrimesh}constructor(e,t){void 0===e&&(e=new sA),void 0===t&&(t=new sA),this.from=e.clone(),this.to=t.clone(),this.direction=new sA,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=oo.ANY,this.result=new os,this.hasHit=!1,this.callback=e=>{}}intersectWorld(e,t){return this.mode=t.mode||oo.ANY,this.result=t.result||new os,this.skipBackfaces=!!t.skipBackfaces,this.collisionFilterMask=void 0!==t.collisionFilterMask?t.collisionFilterMask:-1,this.collisionFilterGroup=void 0!==t.collisionFilterGroup?t.collisionFilterGroup:-1,this.checkCollisionResponse=void 0===t.checkCollisionResponse||t.checkCollisionResponse,t.from&&this.from.copy(t.from),t.to&&this.to.copy(t.to),this.callback=t.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(ol),oh.length=0,e.broadphase.aabbQuery(e,ol,oh),this.intersectBodies(oh),this.hasHit}intersectBody(e,t){t&&(this.result=t,this.updateDirection());let n=this.checkCollisionResponse;if((!n||e.collisionResponse)&&(this.collisionFilterGroup&e.collisionFilterMask)!=0&&(e.collisionFilterGroup&this.collisionFilterMask)!=0)for(let t=0,i=e.shapes.length;t<i;t++){let i=e.shapes[t];if((!n||i.collisionResponse)&&(e.quaternion.mult(e.shapeOrientations[t],op),e.quaternion.vmult(e.shapeOffsets[t],od),od.vadd(e.position,od),this.intersectShape(i,op,od,e),this.result.shouldStop))break}}intersectBodies(e,t){t&&(this.result=t,this.updateDirection());for(let t=0,n=e.length;!this.result.shouldStop&&t<n;t++)this.intersectBody(e[t])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(e,t,n,i){if(function(e,t,n){n.vsub(e,oD);let i=oD.dot(t);return t.scale(i,oU),oU.vadd(e,oU),n.distanceTo(oU)}(this.from,this.direction,n)>e.boundingSphereRadius)return;let r=this[e.type];r&&r.call(this,e,t,n,i,e)}_intersectBox(e,t,n,i,r){return this._intersectConvex(e.convexPolyhedronRepresentation,t,n,i,r)}_intersectPlane(e,t,n,i,r){let a=this.from,s=this.to,o=this.direction,l=new sA(0,0,1);t.vmult(l,l);let h=new sA;a.vsub(n,h);let u=h.dot(l);if(s.vsub(n,h),u*h.dot(l)>0||a.distanceTo(s)<u)return;let c=l.dot(o);if(Math.abs(c)<this.precision)return;let d=new sA,p=new sA,f=new sA;a.vsub(n,d);let m=-l.dot(d)/c;o.scale(m,p),a.vadd(p,f),this.reportIntersection(l,f,r,i,-1)}getAABB(e){let{lowerBound:t,upperBound:n}=e,i=this.to,r=this.from;t.x=Math.min(i.x,r.x),t.y=Math.min(i.y,r.y),t.z=Math.min(i.z,r.z),n.x=Math.max(i.x,r.x),n.y=Math.max(i.y,r.y),n.z=Math.max(i.z,r.z)}_intersectHeightfield(e,t,n,i,r){let a,s,o,l;e.data,e.elementSize,ox.from.copy(this.from),ox.to.copy(this.to),sk.pointToLocalFrame(n,t,ox.from,ox.from),sk.pointToLocalFrame(n,t,ox.to,ox.to),ox.updateDirection(),a=s=0,o=l=e.data.length-1;let h=new sL;ox.getAABB(h),e.getIndexOfPosition(h.lowerBound.x,h.lowerBound.y,ob,!0),a=Math.max(a,ob[0]),s=Math.max(s,ob[1]),e.getIndexOfPosition(h.upperBound.x,h.upperBound.y,ob,!0),o=Math.min(o,ob[0]+1),l=Math.min(l,ob[1]+1);for(let u=a;u<o;u++)for(let a=s;a<l;a++){if(this.result.shouldStop)return;if(e.getAabbAtIndex(u,a,h),h.overlapsRay(ox)){if(e.getConvexTrianglePillar(u,a,!1),sk.pointToWorldFrame(n,t,e.pillarOffset,oy),this._intersectConvex(e.pillarConvex,t,oy,i,r,o_),this.result.shouldStop)return;e.getConvexTrianglePillar(u,a,!0),sk.pointToWorldFrame(n,t,e.pillarOffset,oy),this._intersectConvex(e.pillarConvex,t,oy,i,r,o_)}}}_intersectSphere(e,t,n,i,r){let a=this.from,s=this.to,o=e.radius,l=(s.x-a.x)**2+(s.y-a.y)**2+(s.z-a.z)**2,h=2*((s.x-a.x)*(a.x-n.x)+(s.y-a.y)*(a.y-n.y)+(s.z-a.z)*(a.z-n.z)),u=h**2-4*l*((a.x-n.x)**2+(a.y-n.y)**2+(a.z-n.z)**2-o**2);if(!(u<0))if(0===u)a.lerp(s,u,oM),oM.vsub(n,oS),oS.normalize(),this.reportIntersection(oS,oM,r,i,-1);else{let e=(-h-Math.sqrt(u))/(2*l),t=(-h+Math.sqrt(u))/(2*l);if(e>=0&&e<=1&&(a.lerp(s,e,oM),oM.vsub(n,oS),oS.normalize(),this.reportIntersection(oS,oM,r,i,-1)),this.result.shouldStop)return;t>=0&&t<=1&&(a.lerp(s,t,oM),oM.vsub(n,oS),oS.normalize(),this.reportIntersection(oS,oM,r,i,-1))}}_intersectConvex(e,t,n,i,r,a){let s=a&&a.faceList||null,o=e.faces,l=e.vertices,h=e.faceNormals,u=this.direction,c=this.from,d=this.to,p=c.distanceTo(d),f=s?s.length:o.length,m=this.result;for(let e=0;!m.shouldStop&&e<f;e++){let a=s?s[e]:e,d=o[a],f=h[a];oT.copy(l[d[0]]),t.vmult(oT,oT),oT.vadd(n,oT),oT.vsub(c,oT),t.vmult(f,oE);let g=u.dot(oE);if(Math.abs(g)<this.precision)continue;let v=oE.dot(oT)/g;if(!(v<0)){u.scale(v,of),of.vadd(c,of),om.copy(l[d[0]]),t.vmult(om,om),n.vadd(om,om);for(let e=1;!m.shouldStop&&e<d.length-1;e++){og.copy(l[d[e]]),ov.copy(l[d[e+1]]),t.vmult(og,og),t.vmult(ov,ov),n.vadd(og,og),n.vadd(ov,ov);let s=of.distanceTo(c);(oo.pointInTriangle(of,om,og,ov)||oo.pointInTriangle(of,og,om,ov))&&!(s>p)&&this.reportIntersection(oE,of,r,i,a)}}}}_intersectTrimesh(e,t,n,i,r,a){let s=e.indices;e.vertices;let o=this.from,l=this.to,h=this.direction;oN.position.copy(n),oN.quaternion.copy(t),sk.vectorToLocalFrame(n,t,h,oA),sk.pointToLocalFrame(n,t,o,oR),sk.pointToLocalFrame(n,t,l,oC),oC.x*=e.scale.x,oC.y*=e.scale.y,oC.z*=e.scale.z,oR.x*=e.scale.x,oR.y*=e.scale.y,oR.z*=e.scale.z,oC.vsub(oR,oA),oA.normalize();let u=oR.distanceSquared(oC);e.tree.rayQuery(this,oN,oI);for(let a=0,o=oI.length;!this.result.shouldStop&&a!==o;a++){let o=oI[a];e.getNormal(o,ow),e.getVertex(s[3*o],om),om.vsub(oR,oT);let l=oA.dot(ow),h=ow.dot(oT)/l;if(h<0)continue;oA.scale(h,of),of.vadd(oR,of),e.getVertex(s[3*o+1],og),e.getVertex(s[3*o+2],ov);let c=of.distanceSquared(oR);(oo.pointInTriangle(of,og,om,ov)||oo.pointInTriangle(of,om,og,ov))&&!(c>u)&&(sk.vectorToWorldFrame(t,ow,oP),sk.pointToWorldFrame(n,t,of,oL),this.reportIntersection(oP,oL,r,i,o))}oI.length=0}reportIntersection(e,t,n,i,r){let a=this.from,s=this.to,o=a.distanceTo(t),l=this.result;if(!(this.skipBackfaces&&e.dot(this.direction)>0))switch(l.hitFaceIndex=void 0!==r?r:-1,this.mode){case oo.ALL:this.hasHit=!0,l.set(a,s,e,t,n,i,o),l.hasHit=!0,this.callback(l);break;case oo.CLOSEST:(o<l.distance||!l.hasHit)&&(this.hasHit=!0,l.hasHit=!0,l.set(a,s,e,t,n,i,o));break;case oo.ANY:this.hasHit=!0,l.hasHit=!0,l.set(a,s,e,t,n,i,o),l.shouldStop=!0}}static pointInTriangle(e,t,n,i){let r,a;i.vsub(t,oD),n.vsub(t,ou),e.vsub(t,oc);let s=oD.dot(oD),o=oD.dot(ou),l=oD.dot(oc),h=ou.dot(ou),u=ou.dot(oc);return(r=h*l-o*u)>=0&&(a=s*u-o*l)>=0&&r+a<s*h-o*o}}oo.CLOSEST=1,oo.ANY=2,oo.ALL=4;const ol=new sL,oh=[],ou=new sA,oc=new sA,od=new sA,op=new sO,of=new sA,om=new sA,og=new sA,ov=new sA;new sA,new os;const o_={faceList:[0]},oy=new sA,ox=new oo,ob=[],oM=new sA,oS=new sA,oE=new sA;new sA,new sA;const oT=new sA,ow=new sA,oA=new sA,oR=new sA,oC=new sA,oP=new sA,oL=new sA;new sL;const oI=[],oN=new sk,oD=new sA,oU=new sA;class oO{static defaults(e,t){for(let n in void 0===e&&(e={}),t)n in e||(e[n]=t[n]);return e}}class oF{constructor(e,t,n){void 0===n&&(n={}),n=oO.defaults(n,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=e,this.bodyB=t,this.id=oF.idCounter++,this.collideConnected=n.collideConnected,n.wakeUpBodies&&(e&&e.wakeUp(),t&&t.wakeUp())}update(){throw Error("method update() not implmemented in this Constraint subclass!")}enable(){let e=this.equations;for(let t=0;t<e.length;t++)e[t].enabled=!0}disable(){let e=this.equations;for(let t=0;t<e.length;t++)e[t].enabled=!1}}oF.idCounter=0;class oB{constructor(){this.spatial=new sA,this.rotational=new sA}multiplyElement(e){return e.spatial.dot(this.spatial)+e.rotational.dot(this.rotational)}multiplyVectors(e,t){return e.dot(this.spatial)+t.dot(this.rotational)}}class oz{constructor(e,t,n,i){void 0===n&&(n=-1e6),void 0===i&&(i=1e6),this.id=oz.idCounter++,this.minForce=n,this.maxForce=i,this.bi=e,this.bj=t,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new oB,this.jacobianElementB=new oB,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(e,t,n){this.a=4/(n*(1+4*t)),this.b=4*t/(1+4*t),this.eps=4/(n*n*e*(1+4*t))}computeB(e,t,n){let i=this.computeGW();return-this.computeGq()*e-i*t-this.computeGiMf()*n}computeGq(){let e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,i=this.bj,r=n.position,a=i.position;return e.spatial.dot(r)+t.spatial.dot(a)}computeGW(){let e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,i=this.bj,r=n.velocity,a=i.velocity,s=n.angularVelocity,o=i.angularVelocity;return e.multiplyVectors(r,s)+t.multiplyVectors(a,o)}computeGWlambda(){let e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,i=this.bj,r=n.vlambda,a=i.vlambda,s=n.wlambda,o=i.wlambda;return e.multiplyVectors(r,s)+t.multiplyVectors(a,o)}computeGiMf(){let e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,i=this.bj,r=n.force,a=n.torque,s=i.force,o=i.torque,l=n.invMassSolve,h=i.invMassSolve;return r.scale(l,ok),s.scale(h,oH),n.invInertiaWorldSolve.vmult(a,oV),i.invInertiaWorldSolve.vmult(o,oG),e.multiplyVectors(ok,oV)+t.multiplyVectors(oH,oG)}computeGiMGt(){let e=this.jacobianElementA,t=this.jacobianElementB,n=this.bi,i=this.bj,r=n.invMassSolve,a=i.invMassSolve,s=n.invInertiaWorldSolve,o=i.invInertiaWorldSolve,l=r+a;return s.vmult(e.rotational,oW),l+=oW.dot(e.rotational),o.vmult(t.rotational,oW),l+=oW.dot(t.rotational)}addToWlambda(e){let t=this.jacobianElementA,n=this.jacobianElementB,i=this.bi,r=this.bj;i.vlambda.addScaledVector(i.invMassSolve*e,t.spatial,i.vlambda),r.vlambda.addScaledVector(r.invMassSolve*e,n.spatial,r.vlambda),i.invInertiaWorldSolve.vmult(t.rotational,oj),i.wlambda.addScaledVector(e,oj,i.wlambda),r.invInertiaWorldSolve.vmult(n.rotational,oj),r.wlambda.addScaledVector(e,oj,r.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}oz.idCounter=0;const ok=new sA,oH=new sA,oV=new sA,oG=new sA,oW=new sA,oj=new sA;class oX extends oz{constructor(e,t,n){void 0===n&&(n=1e6),super(e,t,0,n),this.restitution=0,this.ri=new sA,this.rj=new sA,this.ni=new sA}computeB(e){let t=this.a,n=this.b,i=this.bi,r=this.bj,a=this.ri,s=this.rj,o=i.velocity,l=i.angularVelocity;i.force,i.torque;let h=r.velocity,u=r.angularVelocity;r.force,r.torque;let c=this.jacobianElementA,d=this.jacobianElementB,p=this.ni;a.cross(p,oq),s.cross(p,oY),p.negate(c.spatial),oq.negate(c.rotational),d.spatial.copy(p),d.rotational.copy(oY),oK.copy(r.position),oK.vadd(s,oK),oK.vsub(i.position,oK),oK.vsub(a,oK);let f=p.dot(oK),m=this.restitution+1,g=m*h.dot(p)-m*o.dot(p)+u.dot(oY)-l.dot(oq);return-f*t-g*n-e*this.computeGiMf()}getImpactVelocityAlongNormal(){return this.bi.position.vadd(this.ri,o$),this.bj.position.vadd(this.rj,oQ),this.bi.getVelocityAtWorldPoint(o$,oZ),this.bj.getVelocityAtWorldPoint(oQ,oJ),oZ.vsub(oJ,o0),this.ni.dot(o0)}}const oq=new sA,oY=new sA,oK=new sA,oZ=new sA,oJ=new sA,o$=new sA,oQ=new sA,o0=new sA;new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA;class o1 extends oz{constructor(e,t,n){super(e,t,-n,n),this.ri=new sA,this.rj=new sA,this.t=new sA}computeB(e){this.a;let t=this.b;this.bi,this.bj;let n=this.ri,i=this.rj,r=this.t;n.cross(r,o2),i.cross(r,o3);let a=this.jacobianElementA,s=this.jacobianElementB;r.negate(a.spatial),o2.negate(a.rotational),s.spatial.copy(r),s.rotational.copy(o3);let o=this.computeGW();return-o*t-e*this.computeGiMf()}}const o2=new sA,o3=new sA;class o4{constructor(e,t,n){n=oO.defaults(n,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=o4.idCounter++,this.materials=[e,t],this.friction=n.friction,this.restitution=n.restitution,this.contactEquationStiffness=n.contactEquationStiffness,this.contactEquationRelaxation=n.contactEquationRelaxation,this.frictionEquationStiffness=n.frictionEquationStiffness,this.frictionEquationRelaxation=n.frictionEquationRelaxation}}o4.idCounter=0;class o5{constructor(e){void 0===e&&(e={});let t="";"string"==typeof e&&(t=e,e={}),this.name=t,this.id=o5.idCounter++,this.friction=void 0!==e.friction?e.friction:-1,this.restitution=void 0!==e.restitution?e.restitution:-1}}o5.idCounter=0,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new oo,new sA,new sA,new sA,new sA(1,0,0),new sA(0,1,0),new sA(0,0,1),new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sL,new sA,new sL,new sA,new sA,new sA,new sA,new sA,new sA,new sA,new sL,new sA,new sk,new sL;class o6{constructor(){this.equations=[]}solve(e,t){return 0}addEquation(e){!e.enabled||e.bi.isTrigger||e.bj.isTrigger||this.equations.push(e)}removeEquation(e){let t=this.equations,n=t.indexOf(e);-1!==n&&t.splice(n,1)}removeAllEquations(){this.equations.length=0}}class o8 extends o6{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(e,t){let n,i,r,a,s,o=0,l=this.iterations,h=this.tolerance*this.tolerance,u=this.equations,c=u.length,d=t.bodies,p=d.length;if(0!==c)for(let e=0;e!==p;e++)d[e].updateSolveMassProperties();o7.length=c,le.length=c,o9.length=c;for(let t=0;t!==c;t++){let n=u[t];o9[t]=0,le[t]=n.computeB(e),o7[t]=1/n.computeC()}if(0!==c){for(let e=0;e!==p;e++){let t=d[e],n=t.vlambda,i=t.wlambda;n.set(0,0,0),i.set(0,0,0)}for(o=0;o!==l;o++){a=0;for(let e=0;e!==c;e++){let t=u[e];n=le[e],i=o7[e],s=o9[e],r=i*(n-t.computeGWlambda()-t.eps*s),s+r<t.minForce?r=t.minForce-s:s+r>t.maxForce&&(r=t.maxForce-s),o9[e]+=r,a+=r>0?r:-r,t.addToWlambda(r)}if(a*a<h)break}for(let e=0;e!==p;e++){let t=d[e],n=t.velocity,i=t.angularVelocity;t.vlambda.vmul(t.linearFactor,t.vlambda),n.vadd(t.vlambda,n),t.wlambda.vmul(t.angularFactor,t.wlambda),i.vadd(t.wlambda,i)}let t=u.length,f=1/e;for(;t--;)u[t].multiplier=o9[t]*f}return o}}const o9=[],o7=[],le=[];sZ.STATIC;class lt{constructor(){this.objects=[],this.type=Object}release(){let e=arguments.length;for(let t=0;t!==e;t++)this.objects.push(t<0||arguments.length<=t?void 0:arguments[t]);return this}get(){return 0===this.objects.length?this.constructObject():this.objects.pop()}constructObject(){throw Error("constructObject() not implemented in this Pool subclass yet!")}resize(e){let t=this.objects;for(;t.length>e;)t.pop();for(;t.length<e;)t.push(this.constructObject());return this}}class ln extends lt{constructor(){super(...arguments),this.type=sA}constructObject(){return new sA}}const li={sphereSphere:sz.types.SPHERE,spherePlane:sz.types.SPHERE|sz.types.PLANE,boxBox:sz.types.BOX|sz.types.BOX,sphereBox:sz.types.SPHERE|sz.types.BOX,planeBox:sz.types.PLANE|sz.types.BOX,convexConvex:sz.types.CONVEXPOLYHEDRON,sphereConvex:sz.types.SPHERE|sz.types.CONVEXPOLYHEDRON,planeConvex:sz.types.PLANE|sz.types.CONVEXPOLYHEDRON,boxConvex:sz.types.BOX|sz.types.CONVEXPOLYHEDRON,sphereHeightfield:sz.types.SPHERE|sz.types.HEIGHTFIELD,boxHeightfield:sz.types.BOX|sz.types.HEIGHTFIELD,convexHeightfield:sz.types.CONVEXPOLYHEDRON|sz.types.HEIGHTFIELD,sphereParticle:sz.types.PARTICLE|sz.types.SPHERE,planeParticle:sz.types.PLANE|sz.types.PARTICLE,boxParticle:sz.types.BOX|sz.types.PARTICLE,convexParticle:sz.types.PARTICLE|sz.types.CONVEXPOLYHEDRON,cylinderCylinder:sz.types.CYLINDER,sphereCylinder:sz.types.SPHERE|sz.types.CYLINDER,planeCylinder:sz.types.PLANE|sz.types.CYLINDER,boxCylinder:sz.types.BOX|sz.types.CYLINDER,convexCylinder:sz.types.CONVEXPOLYHEDRON|sz.types.CYLINDER,heightfieldCylinder:sz.types.HEIGHTFIELD|sz.types.CYLINDER,particleCylinder:sz.types.PARTICLE|sz.types.CYLINDER,sphereTrimesh:sz.types.SPHERE|sz.types.TRIMESH,planeTrimesh:sz.types.PLANE|sz.types.TRIMESH};class lr{get[li.sphereSphere](){return this.sphereSphere}get[li.spherePlane](){return this.spherePlane}get[li.boxBox](){return this.boxBox}get[li.sphereBox](){return this.sphereBox}get[li.planeBox](){return this.planeBox}get[li.convexConvex](){return this.convexConvex}get[li.sphereConvex](){return this.sphereConvex}get[li.planeConvex](){return this.planeConvex}get[li.boxConvex](){return this.boxConvex}get[li.sphereHeightfield](){return this.sphereHeightfield}get[li.boxHeightfield](){return this.boxHeightfield}get[li.convexHeightfield](){return this.convexHeightfield}get[li.sphereParticle](){return this.sphereParticle}get[li.planeParticle](){return this.planeParticle}get[li.boxParticle](){return this.boxParticle}get[li.convexParticle](){return this.convexParticle}get[li.cylinderCylinder](){return this.convexConvex}get[li.sphereCylinder](){return this.sphereConvex}get[li.planeCylinder](){return this.planeConvex}get[li.boxCylinder](){return this.boxConvex}get[li.convexCylinder](){return this.convexConvex}get[li.heightfieldCylinder](){return this.heightfieldCylinder}get[li.particleCylinder](){return this.particleCylinder}get[li.sphereTrimesh](){return this.sphereTrimesh}get[li.planeTrimesh](){return this.planeTrimesh}constructor(e){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new ln,this.world=e,this.currentContactMaterial=e.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(e,t,n,i,r,a){let s;this.contactPointPool.length?((s=this.contactPointPool.pop()).bi=e,s.bj=t):s=new oX(e,t),s.enabled=e.collisionResponse&&t.collisionResponse&&n.collisionResponse&&i.collisionResponse;let o=this.currentContactMaterial;s.restitution=o.restitution,s.setSpookParams(o.contactEquationStiffness,o.contactEquationRelaxation,this.world.dt);let l=n.material||e.material,h=i.material||t.material;return l&&h&&l.restitution>=0&&h.restitution>=0&&(s.restitution=l.restitution*h.restitution),s.si=r||n,s.sj=a||i,s}createFrictionEquationsFromContact(e,t){let n=e.bi,i=e.bj,r=e.si,a=e.sj,s=this.world,o=this.currentContactMaterial,l=o.friction,h=r.material||n.material,u=a.material||i.material;if(h&&u&&h.friction>=0&&u.friction>=0&&(l=h.friction*u.friction),l>0){let r=l*(s.frictionGravity||s.gravity).length(),a=n.invMass+i.invMass;a>0&&(a=1/a);let h=this.frictionEquationPool,u=h.length?h.pop():new o1(n,i,r*a),c=h.length?h.pop():new o1(n,i,r*a);return u.bi=c.bi=n,u.bj=c.bj=i,u.minForce=c.minForce=-r*a,u.maxForce=c.maxForce=r*a,u.ri.copy(e.ri),u.rj.copy(e.rj),c.ri.copy(e.ri),c.rj.copy(e.rj),e.ni.tangents(u.t,c.t),u.setSpookParams(o.frictionEquationStiffness,o.frictionEquationRelaxation,s.dt),c.setSpookParams(o.frictionEquationStiffness,o.frictionEquationRelaxation,s.dt),u.enabled=c.enabled=e.enabled,t.push(u,c),!0}return!1}createFrictionFromAverage(e){let t=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(t,this.frictionResult)||1===e)return;let n=this.frictionResult[this.frictionResult.length-2],i=this.frictionResult[this.frictionResult.length-1];la.setZero(),ls.setZero(),lo.setZero();let r=t.bi;t.bj;for(let n=0;n!==e;n++)(t=this.result[this.result.length-1-n]).bi!==r?(la.vadd(t.ni,la),ls.vadd(t.ri,ls),lo.vadd(t.rj,lo)):(la.vsub(t.ni,la),ls.vadd(t.rj,ls),lo.vadd(t.ri,lo));let a=1/e;ls.scale(a,n.ri),lo.scale(a,n.rj),i.ri.copy(n.ri),i.rj.copy(n.rj),la.normalize(),la.tangents(n.t,i.t)}getContacts(e,t,n,i,r,a,s){this.contactPointPool=r,this.frictionEquationPool=s,this.result=i,this.frictionResult=a;for(let i=0,r=e.length;i!==r;i++){let r=e[i],a=t[i],s=null;r.material&&a.material&&(s=n.getContactMaterial(r.material,a.material)||null);let o=r.type&sZ.KINEMATIC&&a.type&sZ.STATIC||r.type&sZ.STATIC&&a.type&sZ.KINEMATIC||r.type&sZ.KINEMATIC&&a.type&sZ.KINEMATIC;for(let e=0;e<r.shapes.length;e++){r.quaternion.mult(r.shapeOrientations[e],lu),r.quaternion.vmult(r.shapeOffsets[e],ll),ll.vadd(r.position,ll);let t=r.shapes[e];for(let e=0;e<a.shapes.length;e++){a.quaternion.mult(a.shapeOrientations[e],lc),a.quaternion.vmult(a.shapeOffsets[e],lh),lh.vadd(a.position,lh);let i=a.shapes[e];if(!(t.collisionFilterMask&i.collisionFilterGroup&&i.collisionFilterMask&t.collisionFilterGroup)||ll.distanceTo(lh)>t.boundingSphereRadius+i.boundingSphereRadius)continue;let l=null;t.material&&i.material&&(l=n.getContactMaterial(t.material,i.material)||null),this.currentContactMaterial=l||s||n.defaultContactMaterial;let h=this[t.type|i.type];h&&(t.type<i.type?h.call(this,t,i,ll,lh,lu,lc,r,a,t,i,o):h.call(this,i,t,lh,ll,lc,lu,a,r,t,i,o))&&o&&(n.shapeOverlapKeeper.set(t.id,i.id),n.bodyOverlapKeeper.set(r.id,a.id))}}}}sphereSphere(e,t,n,i,r,a,s,o,l,h,u){if(u)return n.distanceSquared(i)<(e.radius+t.radius)**2;let c=this.createContactEquation(s,o,e,t,l,h);i.vsub(n,c.ni),c.ni.normalize(),c.ri.copy(c.ni),c.rj.copy(c.ni),c.ri.scale(e.radius,c.ri),c.rj.scale(-t.radius,c.rj),c.ri.vadd(n,c.ri),c.ri.vsub(s.position,c.ri),c.rj.vadd(i,c.rj),c.rj.vsub(o.position,c.rj),this.result.push(c),this.createFrictionEquationsFromContact(c,this.frictionResult)}spherePlane(e,t,n,i,r,a,s,o,l,h,u){let c=this.createContactEquation(s,o,e,t,l,h);if(c.ni.set(0,0,1),a.vmult(c.ni,c.ni),c.ni.negate(c.ni),c.ni.normalize(),c.ni.scale(e.radius,c.ri),n.vsub(i,lP),c.ni.scale(c.ni.dot(lP),lL),lP.vsub(lL,c.rj),-lP.dot(c.ni)<=e.radius){if(u)return!0;let e=c.ri,t=c.rj;e.vadd(n,e),e.vsub(s.position,e),t.vadd(i,t),t.vsub(o.position,t),this.result.push(c),this.createFrictionEquationsFromContact(c,this.frictionResult)}}boxBox(e,t,n,i,r,a,s,o,l,h,u){return e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,t.convexPolyhedronRepresentation,n,i,r,a,s,o,e,t,u)}sphereBox(e,t,n,i,r,a,s,o,l,h,u){let c=this.v3pool;n.vsub(i,lU),t.getSideNormals(lz,a);let d=e.radius,p=!1,f=null,m=0,g=0,v=0,_=null;for(let e=0,t=lz.length;e!==t&&!1===p;e++){lO.copy(lz[e]);let t=lO.length();lO.normalize();let n=lU.dot(lO);if(n<t+d&&n>0){lF.copy(lz[(e+1)%3]),lB.copy(lz[(e+2)%3]);let i=lF.length(),r=lB.length();lF.normalize(),lB.normalize();let a=lU.dot(lF),s=lU.dot(lB);if(a<i&&a>-i&&s<r&&s>-r){let e=Math.abs(n-t-d);if((null===_||e<_)&&(_=e,g=a,v=s,f=t,lH.copy(lO),lV.copy(lF),lG.copy(lB),m++,u))return!0}}}if(m){p=!0;let r=this.createContactEquation(s,o,e,t,l,h);lH.scale(-d,r.ri),r.ni.copy(lH),r.ni.negate(r.ni),lH.scale(f,lH),lV.scale(g,lV),lH.vadd(lV,lH),lG.scale(v,lG),lH.vadd(lG,r.rj),r.ri.vadd(n,r.ri),r.ri.vsub(s.position,r.ri),r.rj.vadd(i,r.rj),r.rj.vsub(o.position,r.rj),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult)}let y=c.get();for(let r=0;2!==r&&!p;r++)for(let a=0;2!==a&&!p;a++)for(let c=0;2!==c&&!p;c++)if(y.set(0,0,0),r?y.vadd(lz[0],y):y.vsub(lz[0],y),a?y.vadd(lz[1],y):y.vsub(lz[1],y),c?y.vadd(lz[2],y):y.vsub(lz[2],y),i.vadd(y,lk),lk.vsub(n,lk),lk.lengthSquared()<d*d){if(u)return!0;p=!0;let r=this.createContactEquation(s,o,e,t,l,h);r.ri.copy(lk),r.ri.normalize(),r.ni.copy(r.ri),r.ri.scale(d,r.ri),r.rj.copy(y),r.ri.vadd(n,r.ri),r.ri.vsub(s.position,r.ri),r.rj.vadd(i,r.rj),r.rj.vsub(o.position,r.rj),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult)}c.release(y),y=null;let x=c.get(),b=c.get(),M=c.get(),S=c.get(),E=c.get(),T=lz.length;for(let r=0;r!==T&&!p;r++)for(let a=0;a!==T&&!p;a++)if(r%3!=a%3){lz[a].cross(lz[r],x),x.normalize(),lz[r].vadd(lz[a],b),M.copy(n),M.vsub(b,M),M.vsub(i,M);let c=M.dot(x);x.scale(c,S);let f=0;for(;f===r%3||f===a%3;)f++;E.copy(n),E.vsub(S,E),E.vsub(b,E),E.vsub(i,E);let m=Math.abs(c),g=E.length();if(m<lz[f].length()&&g<d){if(u)return!0;p=!0;let r=this.createContactEquation(s,o,e,t,l,h);b.vadd(S,r.rj),r.rj.copy(r.rj),E.negate(r.ni),r.ni.normalize(),r.ri.copy(r.rj),r.ri.vadd(i,r.ri),r.ri.vsub(n,r.ri),r.ri.normalize(),r.ri.scale(d,r.ri),r.ri.vadd(n,r.ri),r.ri.vsub(s.position,r.ri),r.rj.vadd(i,r.rj),r.rj.vsub(o.position,r.rj),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult)}}c.release(x,b,M,S,E)}planeBox(e,t,n,i,r,a,s,o,l,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,t.convexPolyhedronRepresentation.id=t.id,this.planeConvex(e,t.convexPolyhedronRepresentation,n,i,r,a,s,o,e,t,u)}convexConvex(e,t,n,i,r,a,s,o,l,h,u,c,d){if(!(n.distanceTo(i)>e.boundingSphereRadius+t.boundingSphereRadius)&&e.findSeparatingAxis(t,n,r,i,a,l4,c,d)){let c=[];e.clipAgainstHull(n,r,t,i,a,l4,-100,100,c);let d=0;for(let r=0;r!==c.length;r++){if(u)return!0;let a=this.createContactEquation(s,o,e,t,l,h),p=a.ri,f=a.rj;l4.negate(a.ni),c[r].normal.negate(l5),l5.scale(c[r].depth,l5),c[r].point.vadd(l5,p),f.copy(c[r].point),p.vsub(n,p),f.vsub(i,f),p.vadd(n,p),p.vsub(s.position,p),f.vadd(i,f),f.vsub(o.position,f),this.result.push(a),d++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(a,this.frictionResult)}this.enableFrictionReduction&&d&&this.createFrictionFromAverage(d)}}sphereConvex(e,t,n,i,r,a,s,o,l,h,u){let c=this.v3pool;n.vsub(i,lW);let d=t.faceNormals,p=t.faces,f=t.vertices,m=e.radius,g=!1;for(let r=0;r!==f.length;r++){let c=f[r];if(a.vmult(c,lY),i.vadd(lY,lY),lY.vsub(n,lq),lq.lengthSquared()<m*m){if(u)return!0;g=!0;let r=this.createContactEquation(s,o,e,t,l,h);r.ri.copy(lq),r.ri.normalize(),r.ni.copy(r.ri),r.ri.scale(m,r.ri),lY.vsub(i,r.rj),r.ri.vadd(n,r.ri),r.ri.vsub(s.position,r.ri),r.rj.vadd(i,r.rj),r.rj.vsub(o.position,r.rj),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult);return}}for(let r=0,v=p.length;r!==v&&!1===g;r++){let v=d[r],_=p[r];a.vmult(v,lK),a.vmult(f[_[0]],lZ),lZ.vadd(i,lZ),lK.scale(-m,lJ),n.vadd(lJ,lJ),lJ.vsub(lZ,l$);let y=l$.dot(lK);if(n.vsub(lZ,lQ),y<0&&lQ.dot(lK)>0){let r=[];for(let e=0,t=_.length;e!==t;e++){let t=c.get();a.vmult(f[_[e]],t),i.vadd(t,t),r.push(t)}if(function(e,t,n){let i=null,r=e.length;for(let a=0;a!==r;a++){let s=e[a];e[(a+1)%r].vsub(s,lI),lI.cross(t,lN),n.vsub(s,lD);let o=lN.dot(lD);if(null!==i&&(!(o>0)||!0!==i)&&(!(o<=0)||!1!==i))return!1;null===i&&(i=o>0)}return!0}(r,lK,n)){if(u)return!0;g=!0;let a=this.createContactEquation(s,o,e,t,l,h);lK.scale(-m,a.ri),lK.negate(a.ni);let d=c.get();lK.scale(-y,d);let p=c.get();lK.scale(-m,p),n.vsub(i,a.rj),a.rj.vadd(p,a.rj),a.rj.vadd(d,a.rj),a.rj.vadd(i,a.rj),a.rj.vsub(o.position,a.rj),a.ri.vadd(n,a.ri),a.ri.vsub(s.position,a.ri),c.release(d),c.release(p),this.result.push(a),this.createFrictionEquationsFromContact(a,this.frictionResult);for(let e=0,t=r.length;e!==t;e++)c.release(r[e]);return}for(let d=0;d!==_.length;d++){let p=c.get(),g=c.get();a.vmult(f[_[(d+1)%_.length]],p),a.vmult(f[_[(d+2)%_.length]],g),i.vadd(p,p),i.vadd(g,g),g.vsub(p,lj),lj.unit(lX);let v=c.get(),y=c.get();n.vsub(p,y);let x=y.dot(lX);lX.scale(x,v),v.vadd(p,v);let b=c.get();if(v.vsub(n,b),x>0&&x*x<lj.lengthSquared()&&b.lengthSquared()<m*m){if(u)return!0;let a=this.createContactEquation(s,o,e,t,l,h);v.vsub(i,a.rj),v.vsub(n,a.ni),a.ni.normalize(),a.ni.scale(m,a.ri),a.rj.vadd(i,a.rj),a.rj.vsub(o.position,a.rj),a.ri.vadd(n,a.ri),a.ri.vsub(s.position,a.ri),this.result.push(a),this.createFrictionEquationsFromContact(a,this.frictionResult);for(let e=0,t=r.length;e!==t;e++)c.release(r[e]);c.release(p),c.release(g),c.release(v),c.release(b),c.release(y);return}c.release(p),c.release(g),c.release(v),c.release(b),c.release(y)}for(let e=0,t=r.length;e!==t;e++)c.release(r[e])}}}planeConvex(e,t,n,i,r,a,s,o,l,h,u){l1.set(0,0,1),r.vmult(l1,l1);let c=0;for(let r=0;r!==t.vertices.length;r++)if(l0.copy(t.vertices[r]),a.vmult(l0,l0),i.vadd(l0,l0),l0.vsub(n,l2),0>=l1.dot(l2)){if(u)return!0;let r=this.createContactEquation(s,o,e,t,l,h);l1.scale(l1.dot(l2),l3),l0.vsub(l3,l3),l3.vsub(n,r.ri),r.ni.copy(l1),l0.vsub(i,r.rj),r.ri.vadd(n,r.ri),r.ri.vsub(s.position,r.ri),r.rj.vadd(i,r.rj),r.rj.vsub(o.position,r.rj),this.result.push(r),c++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(r,this.frictionResult)}this.enableFrictionReduction&&c&&this.createFrictionFromAverage(c)}boxConvex(e,t,n,i,r,a,s,o,l,h,u){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,t,n,i,r,a,s,o,e,t,u)}sphereHeightfield(e,t,n,i,r,a,s,o,l,h,u){let c=t.data,d=e.radius,p=t.elementSize;sk.pointToLocalFrame(i,a,n,hl);let f=Math.floor((hl.x-d)/p)-1,m=Math.ceil((hl.x+d)/p)+1,g=Math.floor((hl.y-d)/p)-1,v=Math.ceil((hl.y+d)/p)+1;if(m<0||v<0||f>c.length||g>c[0].length)return;f<0&&(f=0),m<0&&(m=0),g<0&&(g=0),v<0&&(v=0),f>=c.length&&(f=c.length-1),m>=c.length&&(m=c.length-1),v>=c[0].length&&(v=c[0].length-1),g>=c[0].length&&(g=c[0].length-1);let _=[];t.getRectMinMax(f,g,m,v,_);let y=_[0],x=_[1];if(hl.z-d>x||hl.z+d<y)return;let b=this.result;for(let l=f;l<m;l++)for(let h=g;h<v;h++){let c=b.length,d=!1;if(t.getConvexTrianglePillar(l,h,!1),sk.pointToWorldFrame(i,a,t.pillarOffset,hh),n.distanceTo(hh)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(d=this.sphereConvex(e,t.pillarConvex,n,hh,r,a,s,o,e,t,u)),u&&d||(t.getConvexTrianglePillar(l,h,!0),sk.pointToWorldFrame(i,a,t.pillarOffset,hh),n.distanceTo(hh)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(d=this.sphereConvex(e,t.pillarConvex,n,hh,r,a,s,o,e,t,u)),u&&d))return!0;if(b.length-c>2)return}}boxHeightfield(e,t,n,i,r,a,s,o,l,h,u){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexHeightfield(e.convexPolyhedronRepresentation,t,n,i,r,a,s,o,e,t,u)}convexHeightfield(e,t,n,i,r,a,s,o,l,h,u){let c=t.data,d=t.elementSize,p=e.boundingSphereRadius;sk.pointToLocalFrame(i,a,n,ha);let f=Math.floor((ha.x-p)/d)-1,m=Math.ceil((ha.x+p)/d)+1,g=Math.floor((ha.y-p)/d)-1,v=Math.ceil((ha.y+p)/d)+1;if(m<0||v<0||f>c.length||g>c[0].length)return;f<0&&(f=0),m<0&&(m=0),g<0&&(g=0),v<0&&(v=0),f>=c.length&&(f=c.length-1),m>=c.length&&(m=c.length-1),v>=c[0].length&&(v=c[0].length-1),g>=c[0].length&&(g=c[0].length-1);let _=[];t.getRectMinMax(f,g,m,v,_);let y=_[0],x=_[1];if(!(ha.z-p>x)&&!(ha.z+p<y))for(let l=f;l<m;l++)for(let h=g;h<v;h++){let c=!1;if(t.getConvexTrianglePillar(l,h,!1),sk.pointToWorldFrame(i,a,t.pillarOffset,hs),n.distanceTo(hs)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(c=this.convexConvex(e,t.pillarConvex,n,hs,r,a,s,o,null,null,u,ho,null)),u&&c||(t.getConvexTrianglePillar(l,h,!0),sk.pointToWorldFrame(i,a,t.pillarOffset,hs),n.distanceTo(hs)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(c=this.convexConvex(e,t.pillarConvex,n,hs,r,a,s,o,null,null,u,ho,null)),u&&c))return!0}}sphereParticle(e,t,n,i,r,a,s,o,l,h,u){if(l7.set(0,0,1),i.vsub(n,l7),l7.lengthSquared()<=e.radius*e.radius){if(u)return!0;let n=this.createContactEquation(o,s,t,e,l,h);l7.normalize(),n.rj.copy(l7),n.rj.scale(e.radius,n.rj),n.ni.copy(l7),n.ni.negate(n.ni),n.ri.set(0,0,0),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}}planeParticle(e,t,n,i,r,a,s,o,l,h,u){if(l6.set(0,0,1),s.quaternion.vmult(l6,l6),i.vsub(s.position,l8),0>=l6.dot(l8)){if(u)return!0;let n=this.createContactEquation(o,s,t,e,l,h);n.ni.copy(l6),n.ni.negate(n.ni),n.ri.set(0,0,0),l6.scale(l6.dot(i),l9),i.vsub(l9,l9),n.rj.copy(l9),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}}boxParticle(e,t,n,i,r,a,s,o,l,h,u){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexParticle(e.convexPolyhedronRepresentation,t,n,i,r,a,s,o,e,t,u)}convexParticle(e,t,n,i,r,a,s,o,l,h,u){let c=-1,d=null;if(ht.copy(i),ht.vsub(n,ht),r.conjugate(he),he.vmult(ht,ht),e.pointIsInside(ht)){e.worldVerticesNeedsUpdate&&e.computeWorldVertices(n,r),e.worldFaceNormalsNeedsUpdate&&e.computeWorldFaceNormals(r);for(let t=0,n=e.faces.length;t!==n;t++){let n=[e.worldVertices[e.faces[t][0]]],r=e.worldFaceNormals[t];i.vsub(n[0],hi);let a=-r.dot(hi);if(null===d||Math.abs(a)<Math.abs(d)){if(u)return!0;d=a,c=t,hn.copy(r)}}if(-1!==c){let r=this.createContactEquation(o,s,t,e,l,h);hn.scale(d,hr),hr.vadd(i,hr),hr.vsub(n,hr),r.rj.copy(hr),hn.negate(r.ni),r.ri.set(0,0,0);let a=r.ri,u=r.rj;a.vadd(i,a),a.vsub(o.position,a),u.vadd(n,u),u.vsub(s.position,u),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(e,t,n,i,r,a,s,o,l,h,u){return this.convexHeightfield(t,e,i,n,a,r,o,s,l,h,u)}particleCylinder(e,t,n,i,r,a,s,o,l,h,u){return this.convexParticle(t,e,i,n,a,r,o,s,l,h,u)}sphereTrimesh(e,t,n,i,r,a,s,o,l,h,u){sk.pointToLocalFrame(i,a,n,lS);let c=e.radius;lR.lowerBound.set(lS.x-c,lS.y-c,lS.z-c),lR.upperBound.set(lS.x+c,lS.y+c,lS.z+c),t.getTrianglesInAABB(lR,lC);let d=e.radius*e.radius;for(let r=0;r<lC.length;r++)for(let c=0;c<3;c++)if(t.getVertex(t.indices[3*lC[r]+c],lv),lv.vsub(lS,lg),lg.lengthSquared()<=d){if(l_.copy(lv),sk.pointToWorldFrame(i,a,l_,lv),lv.vsub(n,lg),u)return!0;let r=this.createContactEquation(s,o,e,t,l,h);r.ni.copy(lg),r.ni.normalize(),r.ri.copy(r.ni),r.ri.scale(e.radius,r.ri),r.ri.vadd(n,r.ri),r.ri.vsub(s.position,r.ri),r.rj.copy(lv),r.rj.vsub(o.position,r.rj),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult)}for(let r=0;r<lC.length;r++)for(let c=0;c<3;c++){t.getVertex(t.indices[3*lC[r]+c],ly),t.getVertex(t.indices[3*lC[r]+(c+1)%3],lx),lx.vsub(ly,lb),lS.vsub(lx,lE);let d=lE.dot(lb);lS.vsub(ly,lE);let p=lE.dot(lb);if(p>0&&d<0&&(lS.vsub(ly,lE),lM.copy(lb),lM.normalize(),p=lE.dot(lM),lM.scale(p,lE),lE.vadd(ly,lE),lE.distanceTo(lS)<e.radius)){if(u)return!0;let r=this.createContactEquation(s,o,e,t,l,h);lE.vsub(lS,r.ni),r.ni.normalize(),r.ni.scale(e.radius,r.ri),r.ri.vadd(n,r.ri),r.ri.vsub(s.position,r.ri),sk.pointToWorldFrame(i,a,lE,lE),lE.vsub(o.position,r.rj),sk.vectorToWorldFrame(a,r.ni,r.ni),sk.vectorToWorldFrame(a,r.ri,r.ri),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult)}}for(let r=0,c=lC.length;r!==c;r++){t.getTriangleVertices(lC[r],lT,lw,lA),t.getNormal(lC[r],lm),lS.vsub(lT,lE);let c=lE.dot(lm);if(lm.scale(c,lE),lS.vsub(lE,lE),c=lE.distanceTo(lS),oo.pointInTriangle(lE,lT,lw,lA)&&c<e.radius){if(u)return!0;let r=this.createContactEquation(s,o,e,t,l,h);lE.vsub(lS,r.ni),r.ni.normalize(),r.ni.scale(e.radius,r.ri),r.ri.vadd(n,r.ri),r.ri.vsub(s.position,r.ri),sk.pointToWorldFrame(i,a,lE,lE),lE.vsub(o.position,r.rj),sk.vectorToWorldFrame(a,r.ni,r.ni),sk.vectorToWorldFrame(a,r.ri,r.ri),this.result.push(r),this.createFrictionEquationsFromContact(r,this.frictionResult)}}lC.length=0}planeTrimesh(e,t,n,i,r,a,s,o,l,h,u){let c=new sA;ld.set(0,0,1),r.vmult(ld,ld);for(let r=0;r<t.vertices.length/3;r++){t.getVertex(r,c);let d=new sA;if(d.copy(c),sk.pointToWorldFrame(i,a,d,c),c.vsub(n,lp),0>=ld.dot(lp)){if(u)return!0;let n=this.createContactEquation(s,o,e,t,l,h);n.ni.copy(ld),ld.scale(lp.dot(ld),lf),c.vsub(lf,lf),n.ri.copy(lf),n.ri.vsub(s.position,n.ri),n.rj.copy(c),n.rj.vsub(o.position,n.rj),this.result.push(n),this.createFrictionEquationsFromContact(n,this.frictionResult)}}}}const la=new sA,ls=new sA,lo=new sA,ll=new sA,lh=new sA,lu=new sO,lc=new sO,ld=new sA,lp=new sA,lf=new sA,lm=new sA,lg=new sA;new sA;const lv=new sA,l_=new sA,ly=new sA,lx=new sA,lb=new sA,lM=new sA,lS=new sA,lE=new sA,lT=new sA,lw=new sA,lA=new sA,lR=new sL,lC=[],lP=new sA,lL=new sA,lI=new sA,lN=new sA,lD=new sA,lU=new sA,lO=new sA,lF=new sA,lB=new sA,lz=[new sA,new sA,new sA,new sA,new sA,new sA],lk=new sA,lH=new sA,lV=new sA,lG=new sA,lW=new sA,lj=new sA,lX=new sA,lq=new sA,lY=new sA,lK=new sA,lZ=new sA,lJ=new sA,l$=new sA,lQ=new sA;new sA,new sA;const l0=new sA,l1=new sA,l2=new sA,l3=new sA,l4=new sA,l5=new sA,l6=new sA,l8=new sA,l9=new sA,l7=new sA,he=new sO,ht=new sA;new sA;const hn=new sA,hi=new sA,hr=new sA,ha=new sA,hs=new sA,ho=[0],hl=new sA,hh=new sA;class hu{constructor(){this.current=[],this.previous=[]}getKey(e,t){if(t<e){let n=t;t=e,e=n}return e<<16|t}set(e,t){let n=this.getKey(e,t),i=this.current,r=0;for(;n>i[r];)r++;if(n!==i[r]){for(let e=i.length-1;e>=r;e--)i[e+1]=i[e];i[r]=n}}tick(){let e=this.current;this.current=this.previous,this.previous=e,this.current.length=0}getDiff(e,t){let n=this.current,i=this.previous,r=n.length,a=i.length,s=0;for(let t=0;t<r;t++){let r=n[t];for(;r>i[s];)s++;r===i[s]||hc(e,r)}s=0;for(let e=0;e<a;e++){let r=i[e];for(;r>n[s];)s++;n[s]===r||hc(t,r)}}}function hc(e,t){e.push((0xffff0000&t)>>16,65535&t)}const hd=(e,t)=>e<t?`${e}-${t}`:`${t}-${e}`;class hp{constructor(){this.data={keys:[]}}get(e,t){let n=hd(e,t);return this.data[n]}set(e,t,n){let i=hd(e,t);this.get(e,t)||this.data.keys.push(i),this.data[i]=n}delete(e,t){let n=hd(e,t),i=this.data.keys.indexOf(n);-1!==i&&this.data.keys.splice(i,1),delete this.data[n]}reset(){let e=this.data,t=e.keys;for(;t.length>0;){let n=t.pop();delete e[n]}}}class hf extends sU{constructor(e){void 0===e&&(e={}),super(),this.dt=-1,this.allowSleep=!!e.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=void 0!==e.quatNormalizeSkip?e.quatNormalizeSkip:0,this.quatNormalizeFast=void 0!==e.quatNormalizeFast&&e.quatNormalizeFast,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new sA,e.gravity&&this.gravity.copy(e.gravity),e.frictionGravity&&(this.frictionGravity=new sA,this.frictionGravity.copy(e.frictionGravity)),this.broadphase=void 0!==e.broadphase?e.broadphase:new oa,this.bodies=[],this.hasActiveBodies=!1,this.solver=void 0!==e.solver?e.solver:new o8,this.constraints=[],this.narrowphase=new lr(this),this.collisionMatrix=new sD,this.collisionMatrixPrevious=new sD,this.bodyOverlapKeeper=new hu,this.shapeOverlapKeeper=new hu,this.contactmaterials=[],this.contactMaterialTable=new hp,this.defaultMaterial=new o5("default"),this.defaultContactMaterial=new o4(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(e,t){return this.contactMaterialTable.get(e.id,t.id)}collisionMatrixTick(){let e=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=e,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(e){this.constraints.push(e)}removeConstraint(e){let t=this.constraints.indexOf(e);-1!==t&&this.constraints.splice(t,1)}rayTest(e,t,n){n instanceof os?this.raycastClosest(e,t,{skipBackfaces:!0},n):this.raycastAll(e,t,{skipBackfaces:!0},n)}raycastAll(e,t,n,i){return void 0===n&&(n={}),n.mode=oo.ALL,n.from=e,n.to=t,n.callback=i,hm.intersectWorld(this,n)}raycastAny(e,t,n,i){return void 0===n&&(n={}),n.mode=oo.ANY,n.from=e,n.to=t,n.result=i,hm.intersectWorld(this,n)}raycastClosest(e,t,n,i){return void 0===n&&(n={}),n.mode=oo.CLOSEST,n.from=e,n.to=t,n.result=i,hm.intersectWorld(this,n)}addBody(e){this.bodies.includes(e)||(e.index=this.bodies.length,this.bodies.push(e),e.world=this,e.initPosition.copy(e.position),e.initVelocity.copy(e.velocity),e.timeLastSleepy=this.time,e instanceof sZ&&(e.initAngularVelocity.copy(e.angularVelocity),e.initQuaternion.copy(e.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=e,this.idToBodyMap[e.id]=e,this.dispatchEvent(this.addBodyEvent))}removeBody(e){e.world=null;let t=this.bodies.length-1,n=this.bodies,i=n.indexOf(e);if(-1!==i){n.splice(i,1);for(let e=0;e!==n.length;e++)n[e].index=e;this.collisionMatrix.setNumObjects(t),this.removeBodyEvent.body=e,delete this.idToBodyMap[e.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(e){return this.idToBodyMap[e]}getShapeById(e){let t=this.bodies;for(let n=0;n<t.length;n++){let i=t[n].shapes;for(let t=0;t<i.length;t++){let n=i[t];if(n.id===e)return n}}return null}addContactMaterial(e){this.contactmaterials.push(e),this.contactMaterialTable.set(e.materials[0].id,e.materials[1].id,e)}removeContactMaterial(e){let t=this.contactmaterials.indexOf(e);-1!==t&&(this.contactmaterials.splice(t,1),this.contactMaterialTable.delete(e.materials[0].id,e.materials[1].id))}fixedStep(e,t){void 0===e&&(e=1/60),void 0===t&&(t=10);let n=hg.now()/1e3;if(this.lastCallTime){let i=n-this.lastCallTime;this.step(e,i,t)}else this.step(e,void 0,t);this.lastCallTime=n}step(e,t,n){if(void 0===n&&(n=10),void 0===t)this.internalStep(e),this.time+=e;else{this.accumulator+=t;let i=hg.now(),r=0;for(;this.accumulator>=e&&r<n&&(this.internalStep(e),this.accumulator-=e,r++,!(hg.now()-i>1e3*e)););this.accumulator=this.accumulator%e;let a=this.accumulator/e;for(let e=0;e!==this.bodies.length;e++){let t=this.bodies[e];t.previousPosition.lerp(t.position,a,t.interpolatedPosition),t.previousQuaternion.slerp(t.quaternion,a,t.interpolatedQuaternion),t.previousQuaternion.normalize()}this.time+=t}}internalStep(e){this.dt=e;let t=this.contacts,n=this.bodies.length,i=this.bodies,r=this.solver,a=this.gravity,s=this.doProfiling,o=this.profile,l=sZ.DYNAMIC,h=-1/0,u=this.constraints;a.length();let c=a.x,d=a.y,p=a.z,f=0;for(s&&(h=hg.now()),f=0;f!==n;f++){let e=i[f];if(e.type===l){let t=e.force,n=e.mass;t.x+=n*c,t.y+=n*d,t.z+=n*p}}for(let e=0,t=this.subsystems.length;e!==t;e++)this.subsystems[e].update();s&&(h=hg.now()),hM.length=0,hS.length=0,this.broadphase.collisionPairs(this,hM,hS),s&&(o.broadphase=hg.now()-h);let m=u.length;for(f=0;f!==m;f++){let e=u[f];if(!e.collideConnected)for(let t=hM.length-1;t>=0;t-=1)(e.bodyA===hM[t]&&e.bodyB===hS[t]||e.bodyB===hM[t]&&e.bodyA===hS[t])&&(hM.splice(t,1),hS.splice(t,1))}this.collisionMatrixTick(),s&&(h=hg.now());let g=t.length;for(f=0;f!==g;f++)hx.push(t[f]);t.length=0;let v=this.frictionEquations.length;for(f=0;f!==v;f++)hb.push(this.frictionEquations[f]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(hM,hS,this,t,hx,this.frictionEquations,hb),s&&(o.narrowphase=hg.now()-h),s&&(h=hg.now()),f=0;f<this.frictionEquations.length;f++)r.addEquation(this.frictionEquations[f]);let _=t.length;for(let e=0;e!==_;e++){let n=t[e],i=n.bi,a=n.bj,s=n.si,o=n.sj;(i.material&&a.material&&this.getContactMaterial(i.material,a.material)||this.defaultContactMaterial).friction,i.material&&a.material&&(i.material.friction>=0&&a.material.friction>=0&&(i.material.friction,a.material.friction),i.material.restitution>=0&&a.material.restitution>=0&&(n.restitution=i.material.restitution*a.material.restitution)),r.addEquation(n),i.allowSleep&&i.type===sZ.DYNAMIC&&i.sleepState===sZ.SLEEPING&&a.sleepState===sZ.AWAKE&&a.type!==sZ.STATIC&&a.velocity.lengthSquared()+a.angularVelocity.lengthSquared()>=2*a.sleepSpeedLimit**2&&(i.wakeUpAfterNarrowphase=!0),a.allowSleep&&a.type===sZ.DYNAMIC&&a.sleepState===sZ.SLEEPING&&i.sleepState===sZ.AWAKE&&i.type!==sZ.STATIC&&i.velocity.lengthSquared()+i.angularVelocity.lengthSquared()>=2*i.sleepSpeedLimit**2&&(a.wakeUpAfterNarrowphase=!0),this.collisionMatrix.set(i,a,!0),this.collisionMatrixPrevious.get(i,a)||(hy.body=a,hy.contact=n,i.dispatchEvent(hy),hy.body=i,a.dispatchEvent(hy)),this.bodyOverlapKeeper.set(i.id,a.id),this.shapeOverlapKeeper.set(s.id,o.id)}for(this.emitContactEvents(),s&&(o.makeContactConstraints=hg.now()-h,h=hg.now()),f=0;f!==n;f++){let e=i[f];e.wakeUpAfterNarrowphase&&(e.wakeUp(),e.wakeUpAfterNarrowphase=!1)}for(f=0,m=u.length;f!==m;f++){let e=u[f];e.update();for(let t=0,n=e.equations.length;t!==n;t++){let n=e.equations[t];r.addEquation(n)}}r.solve(e,this),s&&(o.solve=hg.now()-h),r.removeAllEquations();let y=Math.pow;for(f=0;f!==n;f++){let t=i[f];if(t.type&l){let n=y(1-t.linearDamping,e),i=t.velocity;i.scale(n,i);let r=t.angularVelocity;if(r){let n=y(1-t.angularDamping,e);r.scale(n,r)}}}this.dispatchEvent(h_),s&&(h=hg.now());let x=this.stepnumber%(this.quatNormalizeSkip+1)==0,b=this.quatNormalizeFast;for(f=0;f!==n;f++)i[f].integrate(e,x,b);this.clearForces(),this.broadphase.dirty=!0,s&&(o.integrate=hg.now()-h),this.stepnumber+=1,this.dispatchEvent(hv);let M=!0;if(this.allowSleep)for(f=0,M=!1;f!==n;f++){let e=i[f];e.sleepTick(this.time),e.sleepState!==sZ.SLEEPING&&(M=!0)}this.hasActiveBodies=M}emitContactEvents(){let e=this.hasAnyEventListener("beginContact"),t=this.hasAnyEventListener("endContact");if((e||t)&&this.bodyOverlapKeeper.getDiff(hE,hT),e){for(let e=0,t=hE.length;e<t;e+=2)hw.bodyA=this.getBodyById(hE[e]),hw.bodyB=this.getBodyById(hE[e+1]),this.dispatchEvent(hw);hw.bodyA=hw.bodyB=null}if(t){for(let e=0,t=hT.length;e<t;e+=2)hA.bodyA=this.getBodyById(hT[e]),hA.bodyB=this.getBodyById(hT[e+1]),this.dispatchEvent(hA);hA.bodyA=hA.bodyB=null}hE.length=hT.length=0;let n=this.hasAnyEventListener("beginShapeContact"),i=this.hasAnyEventListener("endShapeContact");if((n||i)&&this.shapeOverlapKeeper.getDiff(hE,hT),n){for(let e=0,t=hE.length;e<t;e+=2){let t=this.getShapeById(hE[e]),n=this.getShapeById(hE[e+1]);hR.shapeA=t,hR.shapeB=n,t&&(hR.bodyA=t.body),n&&(hR.bodyB=n.body),this.dispatchEvent(hR)}hR.bodyA=hR.bodyB=hR.shapeA=hR.shapeB=null}if(i){for(let e=0,t=hT.length;e<t;e+=2){let t=this.getShapeById(hT[e]),n=this.getShapeById(hT[e+1]);hC.shapeA=t,hC.shapeB=n,t&&(hC.bodyA=t.body),n&&(hC.bodyB=n.body),this.dispatchEvent(hC)}hC.bodyA=hC.bodyB=hC.shapeA=hC.shapeB=null}}clearForces(){let e=this.bodies,t=e.length;for(let n=0;n!==t;n++){let t=e[n];t.force,t.torque,t.force.set(0,0,0),t.torque.set(0,0,0)}}}new sL;const hm=new oo,hg=globalThis.performance||{};if(!hg.now){let e=Date.now();hg.timing&&hg.timing.navigationStart&&(e=hg.timing.navigationStart),hg.now=()=>Date.now()-e}new sA;const hv={type:"postStep"},h_={type:"preStep"},hy={type:sZ.COLLIDE_EVENT_NAME,body:null,contact:null},hx=[],hb=[],hM=[],hS=[],hE=[],hT=[],hw={type:"beginContact",bodyA:null,bodyB:null},hA={type:"endContact",bodyA:null,bodyB:null},hR={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},hC={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null};var hP=f("kEUo3"),hL=f("5fUTz");const hI={type:"change"},hN={type:"start"},hD={type:"end"},hU=new eC,hO=new nR,hF=Math.cos(70*E),hB=new I,hz=2*Math.PI;class hk extends rh{constructor(e,t=null){super(e,t),this.state=-1,this.target=new I,this.cursor=new I,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:0,MIDDLE:1,RIGHT:2},this.touches={ONE:0,TWO:2},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new I,this._lastQuaternion=new L,this._lastTargetPosition=new I,this._quat=new L().setFromUnitVectors(e.up,new I(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new ro,this._sphericalDelta=new ro,this._scale=1,this._panOffset=new I,this._rotateStart=new P,this._rotateEnd=new P,this._rotateDelta=new P,this._panStart=new P,this._panEnd=new P,this._panDelta=new P,this._dollyStart=new P,this._dollyEnd=new P,this._dollyDelta=new P,this._dollyDirection=new I,this._mouse=new P,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=hV.bind(this),this._onPointerDown=hH.bind(this),this._onPointerUp=hG.bind(this),this._onContextMenu=hZ.bind(this),this._onMouseWheel=hX.bind(this),this._onKeyDown=hq.bind(this),this._onTouchStart=hY.bind(this),this._onTouchMove=hK.bind(this),this._onMouseDown=hW.bind(this),this._onMouseMove=hj.bind(this),this._interceptControlDown=hJ.bind(this),this._interceptControlUp=h$.bind(this),null!==this.domElement&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){null!==this._domElementKeyEvents&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(hI),this.update(),this.state=-1}update(e=null){let t=this.object.position;hB.copy(t).sub(this.target),hB.applyQuaternion(this._quat),this._spherical.setFromVector3(hB),this.autoRotate&&-1===this.state&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,i=this.maxAzimuthAngle;isFinite(n)&&isFinite(i)&&(n<-Math.PI?n+=hz:n>Math.PI&&(n-=hz),i<-Math.PI?i+=hz:i>Math.PI&&(i-=hz),n<=i?this._spherical.theta=Math.max(n,Math.min(i,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(n+i)/2?Math.max(n,this._spherical.theta):Math.min(i,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),!0===this.enableDamping?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{let e=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=e!=this._spherical.radius}if(hB.setFromSpherical(this._spherical),hB.applyQuaternion(this._quatInverse),t.copy(this.target).add(hB),this.object.lookAt(this.target),!0===this.enableDamping?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let e=null;if(this.object.isPerspectiveCamera){let t=hB.length();e=this._clampDistance(t*this._scale);let n=t-e;this.object.position.addScaledVector(this._dollyDirection,n),this.object.updateMatrixWorld(),r=!!n}else if(this.object.isOrthographicCamera){let t=new I(this._mouse.x,this._mouse.y,0);t.unproject(this.object);let n=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=n!==this.object.zoom;let i=new I(this._mouse.x,this._mouse.y,0);i.unproject(this.object),this.object.position.sub(i).add(t),this.object.updateMatrixWorld(),e=hB.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;null!==e&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(e).add(this.object.position):(hU.origin.copy(this.object.position),hU.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(hU.direction))<hF?this.object.lookAt(this.target):(hO.setFromNormalAndCoplanarPoint(this.object.up,this.target),hU.intersectPlane(hO,this.target))))}else if(this.object.isOrthographicCamera){let e=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),e!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,!!(r||this._lastPosition.distanceToSquared(this.object.position)>1e-6||8*(1-this._lastQuaternion.dot(this.object.quaternion))>1e-6||this._lastTargetPosition.distanceToSquared(this.target)>1e-6)&&(this.dispatchEvent(hI),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0)}_getAutoRotationAngle(e){return null!==e?hz/60*this.autoRotateSpeed*e:hz/60/60*this.autoRotateSpeed}_getZoomScale(e){let t=Math.abs(.01*e);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){hB.setFromMatrixColumn(t,0),hB.multiplyScalar(-e),this._panOffset.add(hB)}_panUp(e,t){!0===this.screenSpacePanning?hB.setFromMatrixColumn(t,1):(hB.setFromMatrixColumn(t,0),hB.crossVectors(this.object.up,hB)),hB.multiplyScalar(e),this._panOffset.add(hB)}_pan(e,t){let n=this.domElement;if(this.object.isPerspectiveCamera){let i=this.object.position;hB.copy(i).sub(this.target);let r=hB.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*r/n.clientHeight,this.object.matrix),this._panUp(2*t*r/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;let n=this.domElement.getBoundingClientRect(),i=e-n.left,r=t-n.top,a=n.width,s=n.height;this._mouse.x=i/a*2-1,this._mouse.y=-(r/s*2)+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);let t=this.domElement;this._rotateLeft(hz*this._rotateDelta.x/t.clientHeight),this._rotateUp(hz*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(hz*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-hz*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(hz*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-hz*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(1===this._pointers.length)this._rotateStart.set(e.pageX,e.pageY);else{let t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._rotateStart.set(n,i)}}_handleTouchStartPan(e){if(1===this._pointers.length)this._panStart.set(e.pageX,e.pageY);else{let t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._panStart.set(n,i)}}_handleTouchStartDolly(e){let t=this._getSecondPointerPosition(e),n=e.pageX-t.x,i=e.pageY-t.y,r=Math.sqrt(n*n+i*i);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(1==this._pointers.length)this._rotateEnd.set(e.pageX,e.pageY);else{let t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._rotateEnd.set(n,i)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);let t=this.domElement;this._rotateLeft(hz*this._rotateDelta.x/t.clientHeight),this._rotateUp(hz*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(1===this._pointers.length)this._panEnd.set(e.pageX,e.pageY);else{let t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._panEnd.set(n,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){let t=this._getSecondPointerPosition(e),n=e.pageX-t.x,i=e.pageY-t.y,r=Math.sqrt(n*n+i*i);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);let a=(e.pageX+t.x)*.5,s=(e.pageY+t.y)*.5;this._updateZoomParameters(a,s)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return void this._pointers.splice(t,1)}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];void 0===t&&(t=new P,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){let t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){let t=e.deltaMode,n={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100}return e.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}}function hH(e){!1!==this.enabled&&(0===this._pointers.length&&(this.domElement.setPointerCapture(e.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._isTrackingPointer(e)||(this._addPointer(e),"touch"===e.pointerType?this._onTouchStart(e):this._onMouseDown(e)))}function hV(e){!1!==this.enabled&&("touch"===e.pointerType?this._onTouchMove(e):this._onMouseMove(e))}function hG(e){switch(this._removePointer(e),this._pointers.length){case 0:this.domElement.releasePointerCapture(e.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(hD),this.state=-1;break;case 1:let t=this._pointers[0],n=this._pointerPositions[t];this._onTouchStart({pointerId:t,pageX:n.x,pageY:n.y})}}function hW(e){let t;switch(e.button){case 0:t=this.mouseButtons.LEFT;break;case 1:t=this.mouseButtons.MIDDLE;break;case 2:t=this.mouseButtons.RIGHT;break;default:t=-1}switch(t){case 1:if(!1===this.enableZoom)return;this._handleMouseDownDolly(e),this.state=1;break;case 0:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===this.enablePan)return;this._handleMouseDownPan(e),this.state=2}else{if(!1===this.enableRotate)return;this._handleMouseDownRotate(e),this.state=0}break;case 2:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===this.enableRotate)return;this._handleMouseDownRotate(e),this.state=0}else{if(!1===this.enablePan)return;this._handleMouseDownPan(e),this.state=2}break;default:this.state=-1}-1!==this.state&&this.dispatchEvent(hN)}function hj(e){switch(this.state){case 0:if(!1===this.enableRotate)return;this._handleMouseMoveRotate(e);break;case 1:if(!1===this.enableZoom)return;this._handleMouseMoveDolly(e);break;case 2:if(!1===this.enablePan)return;this._handleMouseMovePan(e)}}function hX(e){!1!==this.enabled&&!1!==this.enableZoom&&-1===this.state&&(e.preventDefault(),this.dispatchEvent(hN),this._handleMouseWheel(this._customWheelEvent(e)),this.dispatchEvent(hD))}function hq(e){!1!==this.enabled&&this._handleKeyDown(e)}function hY(e){switch(this._trackPointer(e),this._pointers.length){case 1:switch(this.touches.ONE){case 0:if(!1===this.enableRotate)return;this._handleTouchStartRotate(e),this.state=3;break;case 1:if(!1===this.enablePan)return;this._handleTouchStartPan(e),this.state=4;break;default:this.state=-1}break;case 2:switch(this.touches.TWO){case 2:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchStartDollyPan(e),this.state=5;break;case 3:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchStartDollyRotate(e),this.state=6;break;default:this.state=-1}break;default:this.state=-1}-1!==this.state&&this.dispatchEvent(hN)}function hK(e){switch(this._trackPointer(e),this.state){case 3:if(!1===this.enableRotate)return;this._handleTouchMoveRotate(e),this.update();break;case 4:if(!1===this.enablePan)return;this._handleTouchMovePan(e),this.update();break;case 5:if(!1===this.enableZoom&&!1===this.enablePan)return;this._handleTouchMoveDollyPan(e),this.update();break;case 6:if(!1===this.enableZoom&&!1===this.enableRotate)return;this._handleTouchMoveDollyRotate(e),this.update();break;default:this.state=-1}}function hZ(e){!1!==this.enabled&&e.preventDefault()}function hJ(e){"Control"===e.key&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function h$(e){"Control"===e.key&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function hQ(e,t){if(0===t)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),e;if(2!==t&&1!==t)return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",t),e;{let n=e.getIndex();if(null===n){let t=[],i=e.getAttribute("position");if(void 0===i)return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),e;for(let e=0;e<i.count;e++)t.push(e);e.setIndex(t),n=e.getIndex()}let i=n.count-2,r=[];if(2===t)for(let e=1;e<=i;e++)r.push(n.getX(0)),r.push(n.getX(e)),r.push(n.getX(e+1));else for(let e=0;e<i;e++)e%2==0?(r.push(n.getX(e)),r.push(n.getX(e+1)),r.push(n.getX(e+2))):(r.push(n.getX(e+2)),r.push(n.getX(e+1)),r.push(n.getX(e)));r.length/3!==i&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");let a=e.clone();return a.setIndex(r),a.clearGroups(),a}}class h0 extends iL{constructor(e){super(e),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(e){return new h6(e)}),this.register(function(e){return new h8(e)}),this.register(function(e){return new us(e)}),this.register(function(e){return new uo(e)}),this.register(function(e){return new ul(e)}),this.register(function(e){return new h7(e)}),this.register(function(e){return new ue(e)}),this.register(function(e){return new ut(e)}),this.register(function(e){return new un(e)}),this.register(function(e){return new h5(e)}),this.register(function(e){return new ui(e)}),this.register(function(e){return new h9(e)}),this.register(function(e){return new ua(e)}),this.register(function(e){return new ur(e)}),this.register(function(e){return new h3(e)}),this.register(function(e){return new uh(e)}),this.register(function(e){return new uu(e)})}load(e,t,n,i){let r,a=this;if(""!==this.resourcePath)r=this.resourcePath;else if(""!==this.path){let t=iQ.extractUrlBase(e);r=iQ.resolveURL(t,this.path)}else r=iQ.extractUrlBase(e);this.manager.itemStart(e);let s=function(t){i?i(t):console.error(t),a.manager.itemError(e),a.manager.itemEnd(e)},o=new iD(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(n){try{a.parse(n,r,function(n){t(n),a.manager.itemEnd(e)},s)}catch(e){s(e)}},n,s)}setDRACOLoader(e){return this.dracoLoader=e,this}setKTX2Loader(e){return this.ktx2Loader=e,this}setMeshoptDecoder(e){return this.meshoptDecoder=e,this}register(e){return -1===this.pluginCallbacks.indexOf(e)&&this.pluginCallbacks.push(e),this}unregister(e){return -1!==this.pluginCallbacks.indexOf(e)&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,n,i){let r,a={},s={},o=new TextDecoder;if("string"==typeof e)r=JSON.parse(e);else if(e instanceof ArrayBuffer)if(o.decode(new Uint8Array(e,0,4))===uc){try{a[h2.KHR_BINARY_GLTF]=new ud(e)}catch(e){i&&i(e);return}r=JSON.parse(a[h2.KHR_BINARY_GLTF].content)}else r=JSON.parse(o.decode(e));else r=e;if(void 0===r.asset||r.asset.version[0]<2){i&&i(Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));return}let l=new uI(r,{path:t||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});l.fileLoader.setRequestHeader(this.requestHeader);for(let e=0;e<this.pluginCallbacks.length;e++){let t=this.pluginCallbacks[e](l);t.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),s[t.name]=t,a[t.name]=!0}if(r.extensionsUsed)for(let e=0;e<r.extensionsUsed.length;++e){let t=r.extensionsUsed[e],n=r.extensionsRequired||[];switch(t){case h2.KHR_MATERIALS_UNLIT:a[t]=new h4;break;case h2.KHR_DRACO_MESH_COMPRESSION:a[t]=new up(r,this.dracoLoader);break;case h2.KHR_TEXTURE_TRANSFORM:a[t]=new uf;break;case h2.KHR_MESH_QUANTIZATION:a[t]=new um;break;default:n.indexOf(t)>=0&&void 0===s[t]&&console.warn('THREE.GLTFLoader: Unknown extension "'+t+'".')}}l.setExtensions(a),l.setPlugins(s),l.parse(n,i)}parseAsync(e,t){let n=this;return new Promise(function(i,r){n.parse(e,t,i,r)})}}function h1(){let e={};return{get:function(t){return e[t]},add:function(t,n){e[t]=n},remove:function(t){delete e[t]},removeAll:function(){e={}}}}const h2={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class h3{constructor(e){this.parser=e,this.name=h2.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){let e=this.parser,t=this.parser.json.nodes||[];for(let n=0,i=t.length;n<i;n++){let i=t[n];i.extensions&&i.extensions[this.name]&&void 0!==i.extensions[this.name].light&&e._addNodeRef(this.cache,i.extensions[this.name].light)}}_loadLight(e){let t,n=this.parser,i="light:"+e,r=n.cache.get(i);if(r)return r;let a=n.json,s=((a.extensions&&a.extensions[this.name]||{}).lights||[])[e],o=new td(0xffffff);void 0!==s.color&&o.setRGB(s.color[0],s.color[1],s.color[2],_);let l=void 0!==s.range?s.range:0;switch(s.type){case"directional":(t=new i$(o)).target.position.set(0,0,-1),t.add(t.target);break;case"point":(t=new iK(o)).distance=l;break;case"spot":(t=new iW(o)).distance=l,s.spot=s.spot||{},s.spot.innerConeAngle=void 0!==s.spot.innerConeAngle?s.spot.innerConeAngle:0,s.spot.outerConeAngle=void 0!==s.spot.outerConeAngle?s.spot.outerConeAngle:Math.PI/4,t.angle=s.spot.outerConeAngle,t.penumbra=1-s.spot.innerConeAngle/s.spot.outerConeAngle,t.target.position.set(0,0,-1),t.add(t.target);break;default:throw Error("THREE.GLTFLoader: Unexpected light type: "+s.type)}return t.position.set(0,0,0),uR(t,s),void 0!==s.intensity&&(t.intensity=s.intensity),t.name=n.createUniqueName(s.name||"light_"+e),r=Promise.resolve(t),n.cache.add(i,r),r}getDependency(e,t){if("light"===e)return this._loadLight(t)}createNodeAttachment(e){let t=this,n=this.parser,i=n.json.nodes[e],r=(i.extensions&&i.extensions[this.name]||{}).light;return void 0===r?null:this._loadLight(r).then(function(e){return n._getNodeRef(t.cache,r,e)})}}class h4{constructor(){this.name=h2.KHR_MATERIALS_UNLIT}getMaterialType(){return tg}extendParams(e,t,n){let i=[];e.color=new td(1,1,1),e.opacity=1;let r=t.pbrMetallicRoughness;if(r){if(Array.isArray(r.baseColorFactor)){let t=r.baseColorFactor;e.color.setRGB(t[0],t[1],t[2],_),e.opacity=t[3]}void 0!==r.baseColorTexture&&i.push(n.assignTexture(e,"map",r.baseColorTexture,v))}return Promise.all(i)}}class h5{constructor(e){this.parser=e,this.name=h2.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(e,t){let n=this.parser.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();let i=n.extensions[this.name].emissiveStrength;return void 0!==i&&(t.emissiveIntensity=i),Promise.resolve()}}class h6{constructor(e){this.parser=e,this.name=h2.KHR_MATERIALS_CLEARCOAT}getMaterialType(e){let t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?ih:null}extendMaterialParams(e,t){let n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();let r=[],a=i.extensions[this.name];if(void 0!==a.clearcoatFactor&&(t.clearcoat=a.clearcoatFactor),void 0!==a.clearcoatTexture&&r.push(n.assignTexture(t,"clearcoatMap",a.clearcoatTexture)),void 0!==a.clearcoatRoughnessFactor&&(t.clearcoatRoughness=a.clearcoatRoughnessFactor),void 0!==a.clearcoatRoughnessTexture&&r.push(n.assignTexture(t,"clearcoatRoughnessMap",a.clearcoatRoughnessTexture)),void 0!==a.clearcoatNormalTexture&&(r.push(n.assignTexture(t,"clearcoatNormalMap",a.clearcoatNormalTexture)),void 0!==a.clearcoatNormalTexture.scale)){let e=a.clearcoatNormalTexture.scale;t.clearcoatNormalScale=new P(e,e)}return Promise.all(r)}}class h8{constructor(e){this.parser=e,this.name=h2.KHR_MATERIALS_DISPERSION}getMaterialType(e){let t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?ih:null}extendMaterialParams(e,t){let n=this.parser.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();let i=n.extensions[this.name];return t.dispersion=void 0!==i.dispersion?i.dispersion:0,Promise.resolve()}}class h9{constructor(e){this.parser=e,this.name=h2.KHR_MATERIALS_IRIDESCENCE}getMaterialType(e){let t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?ih:null}extendMaterialParams(e,t){let n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();let r=[],a=i.extensions[this.name];return void 0!==a.iridescenceFactor&&(t.iridescence=a.iridescenceFactor),void 0!==a.iridescenceTexture&&r.push(n.assignTexture(t,"iridescenceMap",a.iridescenceTexture)),void 0!==a.iridescenceIor&&(t.iridescenceIOR=a.iridescenceIor),void 0===t.iridescenceThicknessRange&&(t.iridescenceThicknessRange=[100,400]),void 0!==a.iridescenceThicknessMinimum&&(t.iridescenceThicknessRange[0]=a.iridescenceThicknessMinimum),void 0!==a.iridescenceThicknessMaximum&&(t.iridescenceThicknessRange[1]=a.iridescenceThicknessMaximum),void 0!==a.iridescenceThicknessTexture&&r.push(n.assignTexture(t,"iridescenceThicknessMap",a.iridescenceThicknessTexture)),Promise.all(r)}}class h7{constructor(e){this.parser=e,this.name=h2.KHR_MATERIALS_SHEEN}getMaterialType(e){let t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?ih:null}extendMaterialParams(e,t){let n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();let r=[];t.sheenColor=new td(0,0,0),t.sheenRoughness=0,t.sheen=1;let a=i.extensions[this.name];if(void 0!==a.sheenColorFactor){let e=a.sheenColorFactor;t.sheenColor.setRGB(e[0],e[1],e[2],_)}return void 0!==a.sheenRoughnessFactor&&(t.sheenRoughness=a.sheenRoughnessFactor),void 0!==a.sheenColorTexture&&r.push(n.assignTexture(t,"sheenColorMap",a.sheenColorTexture,v)),void 0!==a.sheenRoughnessTexture&&r.push(n.assignTexture(t,"sheenRoughnessMap",a.sheenRoughnessTexture)),Promise.all(r)}}class ue{constructor(e){this.parser=e,this.name=h2.KHR_MATERIALS_TRANSMISSION}getMaterialType(e){let t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?ih:null}extendMaterialParams(e,t){let n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();let r=[],a=i.extensions[this.name];return void 0!==a.transmissionFactor&&(t.transmission=a.transmissionFactor),void 0!==a.transmissionTexture&&r.push(n.assignTexture(t,"transmissionMap",a.transmissionTexture)),Promise.all(r)}}class ut{constructor(e){this.parser=e,this.name=h2.KHR_MATERIALS_VOLUME}getMaterialType(e){let t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?ih:null}extendMaterialParams(e,t){let n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();let r=[],a=i.extensions[this.name];t.thickness=void 0!==a.thicknessFactor?a.thicknessFactor:0,void 0!==a.thicknessTexture&&r.push(n.assignTexture(t,"thicknessMap",a.thicknessTexture)),t.attenuationDistance=a.attenuationDistance||1/0;let s=a.attenuationColor||[1,1,1];return t.attenuationColor=new td().setRGB(s[0],s[1],s[2],_),Promise.all(r)}}class un{constructor(e){this.parser=e,this.name=h2.KHR_MATERIALS_IOR}getMaterialType(e){let t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?ih:null}extendMaterialParams(e,t){let n=this.parser.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();let i=n.extensions[this.name];return t.ior=void 0!==i.ior?i.ior:1.5,Promise.resolve()}}class ui{constructor(e){this.parser=e,this.name=h2.KHR_MATERIALS_SPECULAR}getMaterialType(e){let t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?ih:null}extendMaterialParams(e,t){let n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();let r=[],a=i.extensions[this.name];t.specularIntensity=void 0!==a.specularFactor?a.specularFactor:1,void 0!==a.specularTexture&&r.push(n.assignTexture(t,"specularIntensityMap",a.specularTexture));let s=a.specularColorFactor||[1,1,1];return t.specularColor=new td().setRGB(s[0],s[1],s[2],_),void 0!==a.specularColorTexture&&r.push(n.assignTexture(t,"specularColorMap",a.specularColorTexture,v)),Promise.all(r)}}class ur{constructor(e){this.parser=e,this.name=h2.EXT_MATERIALS_BUMP}getMaterialType(e){let t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?ih:null}extendMaterialParams(e,t){let n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();let r=[],a=i.extensions[this.name];return t.bumpScale=void 0!==a.bumpFactor?a.bumpFactor:1,void 0!==a.bumpTexture&&r.push(n.assignTexture(t,"bumpMap",a.bumpTexture)),Promise.all(r)}}class ua{constructor(e){this.parser=e,this.name=h2.KHR_MATERIALS_ANISOTROPY}getMaterialType(e){let t=this.parser.json.materials[e];return t.extensions&&t.extensions[this.name]?ih:null}extendMaterialParams(e,t){let n=this.parser,i=n.json.materials[e];if(!i.extensions||!i.extensions[this.name])return Promise.resolve();let r=[],a=i.extensions[this.name];return void 0!==a.anisotropyStrength&&(t.anisotropy=a.anisotropyStrength),void 0!==a.anisotropyRotation&&(t.anisotropyRotation=a.anisotropyRotation),void 0!==a.anisotropyTexture&&r.push(n.assignTexture(t,"anisotropyMap",a.anisotropyTexture)),Promise.all(r)}}class us{constructor(e){this.parser=e,this.name=h2.KHR_TEXTURE_BASISU}loadTexture(e){let t=this.parser,n=t.json,i=n.textures[e];if(!i.extensions||!i.extensions[this.name])return null;let r=i.extensions[this.name],a=t.options.ktx2Loader;if(!a)if(!(n.extensionsRequired&&n.extensionsRequired.indexOf(this.name)>=0))return null;else throw Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return t.loadTextureImage(e,r.source,a)}}class uo{constructor(e){this.parser=e,this.name=h2.EXT_TEXTURE_WEBP}loadTexture(e){let t=this.name,n=this.parser,i=n.json,r=i.textures[e];if(!r.extensions||!r.extensions[t])return null;let a=r.extensions[t],s=i.images[a.source],o=n.textureLoader;if(s.uri){let e=n.options.manager.getHandler(s.uri);null!==e&&(o=e)}return n.loadTextureImage(e,a.source,o)}}class ul{constructor(e){this.parser=e,this.name=h2.EXT_TEXTURE_AVIF}loadTexture(e){let t=this.name,n=this.parser,i=n.json,r=i.textures[e];if(!r.extensions||!r.extensions[t])return null;let a=r.extensions[t],s=i.images[a.source],o=n.textureLoader;if(s.uri){let e=n.options.manager.getHandler(s.uri);null!==e&&(o=e)}return n.loadTextureImage(e,a.source,o)}}class uh{constructor(e){this.name=h2.EXT_MESHOPT_COMPRESSION,this.parser=e}loadBufferView(e){let t=this.parser.json,n=t.bufferViews[e];if(!n.extensions||!n.extensions[this.name])return null;{let e=n.extensions[this.name],i=this.parser.getDependency("buffer",e.buffer),r=this.parser.options.meshoptDecoder;if(!r||!r.supported)if(!(t.extensionsRequired&&t.extensionsRequired.indexOf(this.name)>=0))return null;else throw Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return i.then(function(t){let n=e.byteOffset||0,i=e.byteLength||0,a=e.count,s=e.byteStride,o=new Uint8Array(t,n,i);return r.decodeGltfBufferAsync?r.decodeGltfBufferAsync(a,s,o,e.mode,e.filter).then(function(e){return e.buffer}):r.ready.then(function(){let t=new ArrayBuffer(a*s);return r.decodeGltfBuffer(new Uint8Array(t),a,s,o,e.mode,e.filter),t})})}}}class uu{constructor(e){this.name=h2.EXT_MESH_GPU_INSTANCING,this.parser=e}createNodeMesh(e){let t=this.parser.json,n=t.nodes[e];if(!n.extensions||!n.extensions[this.name]||void 0===n.mesh)return null;for(let e of t.meshes[n.mesh].primitives)if(e.mode!==uy.TRIANGLES&&e.mode!==uy.TRIANGLE_STRIP&&e.mode!==uy.TRIANGLE_FAN&&void 0!==e.mode)return null;let i=n.extensions[this.name].attributes,r=[],a={};for(let e in i)r.push(this.parser.getDependency("accessor",i[e]).then(t=>(a[e]=t,a[e])));return r.length<1?null:(r.push(this.parser.createNodeMesh(e)),Promise.all(r).then(e=>{let t=e.pop(),n=t.isGroup?t.children:[t],i=e[0].count,r=[];for(let e of n){let t=new eP,n=new I,s=new L,o=new I(1,1,1),l=new nE(e.geometry,e.material,i);for(let e=0;e<i;e++)a.TRANSLATION&&n.fromBufferAttribute(a.TRANSLATION,e),a.ROTATION&&s.fromBufferAttribute(a.ROTATION,e),a.SCALE&&o.fromBufferAttribute(a.SCALE,e),l.setMatrixAt(e,t.compose(n,s,o));for(let t in a)if("_COLOR_0"===t){let e=a[t];l.instanceColor=new ng(e.array,e.itemSize,e.normalized)}else"TRANSLATION"!==t&&"ROTATION"!==t&&"SCALE"!==t&&e.geometry.setAttribute(t,a[t]);e3.prototype.copy.call(l,e),this.parser.assignFinalMaterial(l),r.push(l)}return t.isGroup?(t.clear(),t.add(...r),t):r[0]}))}}const uc="glTF";class ud{constructor(e){this.name=h2.KHR_BINARY_GLTF,this.content=null,this.body=null;let t=new DataView(e,0,12),n=new TextDecoder;if(this.header={magic:n.decode(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==uc)throw Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw Error("THREE.GLTFLoader: Legacy binary file detected.");let i=this.header.length-12,r=new DataView(e,12),a=0;for(;a<i;){let t=r.getUint32(a,!0);a+=4;let i=r.getUint32(a,!0);if(a+=4,0x4e4f534a===i){let i=new Uint8Array(e,12+a,t);this.content=n.decode(i)}else if(5130562===i){let n=12+a;this.body=e.slice(n,n+t)}a+=t}if(null===this.content)throw Error("THREE.GLTFLoader: JSON content not found.")}}class up{constructor(e,t){if(!t)throw Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=h2.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,this.dracoLoader.preload()}decodePrimitive(e,t){let n=this.json,i=this.dracoLoader,r=e.extensions[this.name].bufferView,a=e.extensions[this.name].attributes,s={},o={},l={};for(let e in a)s[uE[e]||e.toLowerCase()]=a[e];for(let t in e.attributes){let i=uE[t]||t.toLowerCase();if(void 0!==a[t]){let r=n.accessors[e.attributes[t]],a=ux[r.componentType];l[i]=a.name,o[i]=!0===r.normalized}}return t.getDependency("bufferView",r).then(function(e){return new Promise(function(t,n){i.decodeDracoFile(e,function(e){for(let t in e.attributes){let n=e.attributes[t],i=o[t];void 0!==i&&(n.normalized=i)}t(e)},s,l,_,n)})})}}class uf{constructor(){this.name=h2.KHR_TEXTURE_TRANSFORM}extendTexture(e,t){return(void 0===t.texCoord||t.texCoord===e.channel)&&void 0===t.offset&&void 0===t.rotation&&void 0===t.scale||(e=e.clone(),void 0!==t.texCoord&&(e.channel=t.texCoord),void 0!==t.offset&&e.offset.fromArray(t.offset),void 0!==t.rotation&&(e.rotation=t.rotation),void 0!==t.scale&&e.repeat.fromArray(t.scale),e.needsUpdate=!0),e}}class um{constructor(){this.name=h2.KHR_MESH_QUANTIZATION}}class ug extends ig{constructor(e,t,n,i){super(e,t,n,i)}copySampleValue_(e){let t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i*3+i;for(let e=0;e!==i;e++)t[e]=n[r+e];return t}interpolate_(e,t,n,i){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=2*s,l=3*s,h=i-t,u=(n-t)/h,c=u*u,d=c*u,p=e*l,f=p-l,m=-2*d+3*c,g=d-c,v=1-m,_=g-c+u;for(let e=0;e!==s;e++){let t=a[f+e+s],n=a[f+e+o]*h,i=a[p+e+s],l=a[p+e]*h;r[e]=v*t+_*n+m*i+g*l}return r}}const uv=new L;class u_ extends ug{interpolate_(e,t,n,i){let r=super.interpolate_(e,t,n,i);return uv.fromArray(r).normalize().toArray(r),r}}const uy={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},ux={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},ub={9728:1003,9729:1006,9984:1004,9985:1007,9986:1005,9987:1008},uM={33071:1001,33648:1002,10497:1e3},uS={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},uE={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},uT={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},uw={CUBICSPLINE:void 0,LINEAR:2301,STEP:2300};function uA(e,t,n){for(let i in n.extensions)void 0===e[i]&&(t.userData.gltfExtensions=t.userData.gltfExtensions||{},t.userData.gltfExtensions[i]=n.extensions[i])}function uR(e,t){void 0!==t.extras&&("object"==typeof t.extras?Object.assign(e.userData,t.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+t.extras))}function uC(e){let t="",n=Object.keys(e).sort();for(let i=0,r=n.length;i<r;i++)t+=n[i]+":"+e[n[i]]+";";return t}function uP(e){switch(e){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}const uL=new eP;class uI{constructor(e={},t={}){this.json=e,this.extensions={},this.plugins={},this.options=t,this.cache=new h1,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let n=!1,i=-1,r=!1,a=-1;if("undefined"!=typeof navigator){let e=navigator.userAgent;n=!0===/^((?!chrome|android).)*safari/i.test(e);let t=e.match(/Version\/(\d+)/);i=n&&t?parseInt(t[1],10):-1,a=(r=e.indexOf("Firefox")>-1)?e.match(/Firefox\/([0-9]+)\./)[1]:-1}"undefined"==typeof createImageBitmap||n&&i<17||r&&a<98?this.textureLoader=new iF(this.options.manager):this.textureLoader=new i1(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new iD(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),"use-credentials"===this.options.crossOrigin&&this.fileLoader.setWithCredentials(!0)}setExtensions(e){this.extensions=e}setPlugins(e){this.plugins=e}parse(e,t){let n=this,i=this.json,r=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(e){return e._markDefs&&e._markDefs()}),Promise.all(this._invokeAll(function(e){return e.beforeRoot&&e.beforeRoot()})).then(function(){return Promise.all([n.getDependencies("scene"),n.getDependencies("animation"),n.getDependencies("camera")])}).then(function(t){let a={scene:t[0][i.scene||0],scenes:t[0],animations:t[1],cameras:t[2],asset:i.asset,parser:n,userData:{}};return uA(r,a,i),uR(a,i),Promise.all(n._invokeAll(function(e){return e.afterRoot&&e.afterRoot(a)})).then(function(){for(let e of a.scenes)e.updateMatrixWorld();e(a)})}).catch(t)}_markDefs(){let e=this.json.nodes||[],t=this.json.skins||[],n=this.json.meshes||[];for(let n=0,i=t.length;n<i;n++){let i=t[n].joints;for(let t=0,n=i.length;t<n;t++)e[i[t]].isBone=!0}for(let t=0,i=e.length;t<i;t++){let i=e[t];void 0!==i.mesh&&(this._addNodeRef(this.meshCache,i.mesh),void 0!==i.skin&&(n[i.mesh].isSkinnedMesh=!0)),void 0!==i.camera&&this._addNodeRef(this.cameraCache,i.camera)}}_addNodeRef(e,t){void 0!==t&&(void 0===e.refs[t]&&(e.refs[t]=e.uses[t]=0),e.refs[t]++)}_getNodeRef(e,t,n){if(e.refs[t]<=1)return n;let i=n.clone(),r=(e,t)=>{let n=this.associations.get(e);for(let[i,a]of(null!=n&&this.associations.set(t,n),e.children.entries()))r(a,t.children[i])};return r(n,i),i.name+="_instance_"+e.uses[t]++,i}_invokeOne(e){let t=Object.values(this.plugins);t.push(this);for(let n=0;n<t.length;n++){let i=e(t[n]);if(i)return i}return null}_invokeAll(e){let t=Object.values(this.plugins);t.unshift(this);let n=[];for(let i=0;i<t.length;i++){let r=e(t[i]);r&&n.push(r)}return n}getDependency(e,t){let n=e+":"+t,i=this.cache.get(n);if(!i){switch(e){case"scene":i=this.loadScene(t);break;case"node":i=this._invokeOne(function(e){return e.loadNode&&e.loadNode(t)});break;case"mesh":i=this._invokeOne(function(e){return e.loadMesh&&e.loadMesh(t)});break;case"accessor":i=this.loadAccessor(t);break;case"bufferView":i=this._invokeOne(function(e){return e.loadBufferView&&e.loadBufferView(t)});break;case"buffer":i=this.loadBuffer(t);break;case"material":i=this._invokeOne(function(e){return e.loadMaterial&&e.loadMaterial(t)});break;case"texture":i=this._invokeOne(function(e){return e.loadTexture&&e.loadTexture(t)});break;case"skin":i=this.loadSkin(t);break;case"animation":i=this._invokeOne(function(e){return e.loadAnimation&&e.loadAnimation(t)});break;case"camera":i=this.loadCamera(t);break;default:if(!(i=this._invokeOne(function(n){return n!=this&&n.getDependency&&n.getDependency(e,t)})))throw Error("Unknown type: "+e)}this.cache.add(n,i)}return i}getDependencies(e){let t=this.cache.get(e);if(!t){let n=this;t=Promise.all((this.json[e+("mesh"===e?"es":"s")]||[]).map(function(t,i){return n.getDependency(e,i)})),this.cache.add(e,t)}return t}loadBuffer(e){let t=this.json.buffers[e],n=this.fileLoader;if(t.type&&"arraybuffer"!==t.type)throw Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(void 0===t.uri&&0===e)return Promise.resolve(this.extensions[h2.KHR_BINARY_GLTF].body);let i=this.options;return new Promise(function(e,r){n.load(iQ.resolveURL(t.uri,i.path),e,void 0,function(){r(Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))})})}loadBufferView(e){let t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then(function(e){let n=t.byteLength||0,i=t.byteOffset||0;return e.slice(i,i+n)})}loadAccessor(e){let t=this,n=this.json,i=this.json.accessors[e];if(void 0===i.bufferView&&void 0===i.sparse){let e=uS[i.type],t=ux[i.componentType],n=!0===i.normalized;return Promise.resolve(new tx(new t(i.count*e),e,n))}let r=[];return void 0!==i.bufferView?r.push(this.getDependency("bufferView",i.bufferView)):r.push(null),void 0!==i.sparse&&(r.push(this.getDependency("bufferView",i.sparse.indices.bufferView)),r.push(this.getDependency("bufferView",i.sparse.values.bufferView))),Promise.all(r).then(function(e){let r,a=e[0],s=uS[i.type],o=ux[i.componentType],l=o.BYTES_PER_ELEMENT,h=l*s,u=i.byteOffset||0,c=void 0!==i.bufferView?n.bufferViews[i.bufferView].byteStride:void 0,d=!0===i.normalized;if(c&&c!==h){let e=Math.floor(u/c),n="InterleavedBuffer:"+i.bufferView+":"+i.componentType+":"+e+":"+i.count,h=t.cache.get(n);h||(h=new t9(new o(a,e*c,i.count*c/l),c/l),t.cache.add(n,h)),r=new ne(h,s,u%c/l,d)}else r=new tx(null===a?new o(i.count*s):new o(a,u,i.count*s),s,d);if(void 0!==i.sparse){let t=uS.SCALAR,n=ux[i.sparse.indices.componentType],l=i.sparse.indices.byteOffset||0,h=i.sparse.values.byteOffset||0,u=new n(e[1],l,i.sparse.count*t),c=new o(e[2],h,i.sparse.count*s);null!==a&&(r=new tx(r.array.slice(),r.itemSize,r.normalized)),r.normalized=!1;for(let e=0,t=u.length;e<t;e++){let t=u[e];if(r.setX(t,c[e*s]),s>=2&&r.setY(t,c[e*s+1]),s>=3&&r.setZ(t,c[e*s+2]),s>=4&&r.setW(t,c[e*s+3]),s>=5)throw Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}r.normalized=d}return r})}loadTexture(e){let t=this.json,n=this.options,i=t.textures[e].source,r=t.images[i],a=this.textureLoader;if(r.uri){let e=n.manager.getHandler(r.uri);null!==e&&(a=e)}return this.loadTextureImage(e,i,a)}loadTextureImage(e,t,n){let i=this,r=this.json,a=r.textures[e],s=r.images[t],o=(s.uri||s.bufferView)+":"+a.sampler;if(this.textureCache[o])return this.textureCache[o];let l=this.loadImageSource(t,n).then(function(t){t.flipY=!1,t.name=a.name||s.name||"",""===t.name&&"string"==typeof s.uri&&!1===s.uri.startsWith("data:image/")&&(t.name=s.uri);let n=(r.samplers||{})[a.sampler]||{};return t.magFilter=ub[n.magFilter]||1006,t.minFilter=ub[n.minFilter]||1008,t.wrapS=uM[n.wrapS]||1e3,t.wrapT=uM[n.wrapT]||1e3,t.generateMipmaps=!t.isCompressedTexture&&1003!==t.minFilter&&1006!==t.minFilter,i.associations.set(t,{textures:e}),t}).catch(function(){return null});return this.textureCache[o]=l,l}loadImageSource(e,t){let n=this.json,i=this.options;if(void 0!==this.sourceCache[e])return this.sourceCache[e].then(e=>e.clone());let r=n.images[e],a=self.URL||self.webkitURL,s=r.uri||"",o=!1;if(void 0!==r.bufferView)s=this.getDependency("bufferView",r.bufferView).then(function(e){o=!0;let t=new Blob([e],{type:r.mimeType});return s=a.createObjectURL(t)});else if(void 0===r.uri)throw Error("THREE.GLTFLoader: Image "+e+" is missing URI and bufferView");let l=Promise.resolve(s).then(function(e){return new Promise(function(n,r){let a=n;!0===t.isImageBitmapLoader&&(a=function(e){let t=new $(e);t.needsUpdate=!0,n(t)}),t.load(iQ.resolveURL(e,i.path),a,void 0,r)})}).then(function(e){var t;return!0===o&&a.revokeObjectURL(s),uR(e,r),e.userData.mimeType=r.mimeType||((t=r.uri).search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/)?"image/jpeg":t.search(/\.webp($|\?)/i)>0||0===t.search(/^data\:image\/webp/)?"image/webp":t.search(/\.ktx2($|\?)/i)>0||0===t.search(/^data\:image\/ktx2/)?"image/ktx2":"image/png"),e}).catch(function(e){throw console.error("THREE.GLTFLoader: Couldn't load texture",s),e});return this.sourceCache[e]=l,l}assignTexture(e,t,n,i){let r=this;return this.getDependency("texture",n.index).then(function(a){if(!a)return null;if(void 0!==n.texCoord&&n.texCoord>0&&((a=a.clone()).channel=n.texCoord),r.extensions[h2.KHR_TEXTURE_TRANSFORM]){let e=void 0!==n.extensions?n.extensions[h2.KHR_TEXTURE_TRANSFORM]:void 0;if(e){let t=r.associations.get(a);a=r.extensions[h2.KHR_TEXTURE_TRANSFORM].extendTexture(a,e),r.associations.set(a,t)}}return void 0!==i&&(a.colorSpace=i),e[t]=a,a})}assignFinalMaterial(e){let t=e.geometry,n=e.material,i=void 0===t.attributes.tangent,r=void 0!==t.attributes.color,a=void 0===t.attributes.normal;if(e.isPoints){let e="PointsMaterial:"+n.uuid,t=this.cache.get(e);t||(t=new nq,tm.prototype.copy.call(t,n),t.color.copy(n.color),t.map=n.map,t.sizeAttenuation=!1,this.cache.add(e,t)),n=t}else if(e.isLine){let e="LineBasicMaterial:"+n.uuid,t=this.cache.get(e);t||(t=new nN,tm.prototype.copy.call(t,n),t.color.copy(n.color),t.map=n.map,this.cache.add(e,t)),n=t}if(i||r||a){let e="ClonedMaterial:"+n.uuid+":";i&&(e+="derivative-tangents:"),r&&(e+="vertex-colors:"),a&&(e+="flat-shading:");let t=this.cache.get(e);t||(t=n.clone(),r&&(t.vertexColors=!0),a&&(t.flatShading=!0),i&&(t.normalScale&&(t.normalScale.y*=-1),t.clearcoatNormalScale&&(t.clearcoatNormalScale.y*=-1)),this.cache.add(e,t),this.associations.set(t,this.associations.get(n))),n=t}e.material=n}getMaterialType(){return il}loadMaterial(e){let t,n=this,i=this.json,r=this.extensions,a=i.materials[e],s={},o=a.extensions||{},l=[];if(o[h2.KHR_MATERIALS_UNLIT]){let e=r[h2.KHR_MATERIALS_UNLIT];t=e.getMaterialType(),l.push(e.extendParams(s,a,n))}else{let i=a.pbrMetallicRoughness||{};if(s.color=new td(1,1,1),s.opacity=1,Array.isArray(i.baseColorFactor)){let e=i.baseColorFactor;s.color.setRGB(e[0],e[1],e[2],_),s.opacity=e[3]}void 0!==i.baseColorTexture&&l.push(n.assignTexture(s,"map",i.baseColorTexture,v)),s.metalness=void 0!==i.metallicFactor?i.metallicFactor:1,s.roughness=void 0!==i.roughnessFactor?i.roughnessFactor:1,void 0!==i.metallicRoughnessTexture&&(l.push(n.assignTexture(s,"metalnessMap",i.metallicRoughnessTexture)),l.push(n.assignTexture(s,"roughnessMap",i.metallicRoughnessTexture))),t=this._invokeOne(function(t){return t.getMaterialType&&t.getMaterialType(e)}),l.push(Promise.all(this._invokeAll(function(t){return t.extendMaterialParams&&t.extendMaterialParams(e,s)})))}!0===a.doubleSided&&(s.side=2);let h=a.alphaMode||"OPAQUE";if("BLEND"===h?(s.transparent=!0,s.depthWrite=!1):(s.transparent=!1,"MASK"===h&&(s.alphaTest=void 0!==a.alphaCutoff?a.alphaCutoff:.5)),void 0!==a.normalTexture&&t!==tg&&(l.push(n.assignTexture(s,"normalMap",a.normalTexture)),s.normalScale=new P(1,1),void 0!==a.normalTexture.scale)){let e=a.normalTexture.scale;s.normalScale.set(e,e)}if(void 0!==a.occlusionTexture&&t!==tg&&(l.push(n.assignTexture(s,"aoMap",a.occlusionTexture)),void 0!==a.occlusionTexture.strength&&(s.aoMapIntensity=a.occlusionTexture.strength)),void 0!==a.emissiveFactor&&t!==tg){let e=a.emissiveFactor;s.emissive=new td().setRGB(e[0],e[1],e[2],_)}return void 0!==a.emissiveTexture&&t!==tg&&l.push(n.assignTexture(s,"emissiveMap",a.emissiveTexture,v)),Promise.all(l).then(function(){let i=new t(s);return a.name&&(i.name=a.name),uR(i,a),n.associations.set(i,{materials:e}),a.extensions&&uA(r,i,a),i})}createUniqueName(e){let t=rn.sanitizeNodeName(e||"");return t in this.nodeNamesUsed?t+"_"+ ++this.nodeNamesUsed[t]:(this.nodeNamesUsed[t]=0,t)}loadGeometries(e){let t=this,n=this.extensions,i=this.primitiveCache,r=[];for(let a=0,s=e.length;a<s;a++){let s=e[a],o=function(e){let t,n=e.extensions&&e.extensions[h2.KHR_DRACO_MESH_COMPRESSION];if(t=n?"draco:"+n.bufferView+":"+n.indices+":"+uC(n.attributes):e.indices+":"+uC(e.attributes)+":"+e.mode,void 0!==e.targets)for(let n=0,i=e.targets.length;n<i;n++)t+=":"+uC(e.targets[n]);return t}(s),l=i[o];if(l)r.push(l.promise);else{let e;e=s.extensions&&s.extensions[h2.KHR_DRACO_MESH_COMPRESSION]?function(e){return n[h2.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(e,t).then(function(n){return uN(n,e,t)})}(s):uN(new tL,s,t),i[o]={primitive:s,promise:e},r.push(e)}}return Promise.all(r)}loadMesh(e){let t=this,n=this.json,i=this.extensions,r=n.meshes[e],a=r.primitives,s=[];for(let e=0,t=a.length;e<t;e++){var o;let t=void 0===a[e].material?(void 0===(o=this.cache).DefaultMaterial&&(o.DefaultMaterial=new il({color:0xffffff,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:0})),o.DefaultMaterial):this.getDependency("material",a[e].material);s.push(t)}return s.push(t.loadGeometries(a)),Promise.all(s).then(function(n){let s=n.slice(0,n.length-1),o=n[n.length-1],l=[];for(let n=0,h=o.length;n<h;n++){let h,u=o[n],c=a[n],d=s[n];if(c.mode===uy.TRIANGLES||c.mode===uy.TRIANGLE_STRIP||c.mode===uy.TRIANGLE_FAN||void 0===c.mode)!0===(h=!0===r.isSkinnedMesh?new nu(u,d):new tG(u,d)).isSkinnedMesh&&h.normalizeSkinWeights(),c.mode===uy.TRIANGLE_STRIP?h.geometry=hQ(h.geometry,1):c.mode===uy.TRIANGLE_FAN&&(h.geometry=hQ(h.geometry,2));else if(c.mode===uy.LINES)h=new nj(u,d);else if(c.mode===uy.LINE_STRIP)h=new nH(u,d);else if(c.mode===uy.LINE_LOOP)h=new nX(u,d);else if(c.mode===uy.POINTS)h=new n$(u,d);else throw Error("THREE.GLTFLoader: Primitive mode unsupported: "+c.mode);Object.keys(h.geometry.morphAttributes).length>0&&function(e,t){if(e.updateMorphTargets(),void 0!==t.weights)for(let n=0,i=t.weights.length;n<i;n++)e.morphTargetInfluences[n]=t.weights[n];if(t.extras&&Array.isArray(t.extras.targetNames)){let n=t.extras.targetNames;if(e.morphTargetInfluences.length===n.length){e.morphTargetDictionary={};for(let t=0,i=n.length;t<i;t++)e.morphTargetDictionary[n[t]]=t}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}(h,r),h.name=t.createUniqueName(r.name||"mesh_"+e),uR(h,r),c.extensions&&uA(i,h,c),t.assignFinalMaterial(h),l.push(h)}for(let n=0,i=l.length;n<i;n++)t.associations.set(l[n],{meshes:e,primitives:n});if(1===l.length)return r.extensions&&uA(i,l[0],r),l[0];let h=new t4;r.extensions&&uA(i,h,r),t.associations.set(h,{meshes:e});for(let e=0,t=l.length;e<t;e++)h.add(l[e]);return h})}loadCamera(e){let t,n=this.json.cameras[e],i=n[n.type];return i?("perspective"===n.type?t=new t0(i.yfov*T,i.aspectRatio||1,i.znear||1,i.zfar||2e6):"orthographic"===n.type&&(t=new iZ(-i.xmag,i.xmag,i.ymag,-i.ymag,i.znear,i.zfar)),n.name&&(t.name=this.createUniqueName(n.name)),uR(t,n),Promise.resolve(t)):void console.warn("THREE.GLTFLoader: Missing camera parameters.")}loadSkin(e){let t=this.json.skins[e],n=[];for(let e=0,i=t.joints.length;e<i;e++)n.push(this._loadNodeShallow(t.joints[e]));return void 0!==t.inverseBindMatrices?n.push(this.getDependency("accessor",t.inverseBindMatrices)):n.push(null),Promise.all(n).then(function(e){let n=e.pop(),i=[],r=[];for(let a=0,s=e.length;a<s;a++){let s=e[a];if(s){i.push(s);let e=new eP;null!==n&&e.fromArray(n.array,16*a),r.push(e)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',t.joints[a])}return new nm(i,r)})}loadAnimation(e){let t=this.json,n=this,i=t.animations[e],r=i.name?i.name:"animation_"+e,a=[],s=[],o=[],l=[],h=[];for(let e=0,t=i.channels.length;e<t;e++){let t=i.channels[e],n=i.samplers[t.sampler],r=t.target,u=r.node,c=void 0!==i.parameters?i.parameters[n.input]:n.input,d=void 0!==i.parameters?i.parameters[n.output]:n.output;void 0!==r.node&&(a.push(this.getDependency("node",u)),s.push(this.getDependency("accessor",c)),o.push(this.getDependency("accessor",d)),l.push(n),h.push(r))}return Promise.all([Promise.all(a),Promise.all(s),Promise.all(o),Promise.all(l),Promise.all(h)]).then(function(e){let t=e[0],i=e[1],a=e[2],s=e[3],o=e[4],l=[];for(let e=0,r=t.length;e<r;e++){let r=t[e],h=i[e],u=a[e],c=s[e],d=o[e];if(void 0===r)continue;r.updateMatrix&&r.updateMatrix();let p=n._createAnimationTracks(r,h,u,c,d);if(p)for(let e=0;e<p.length;e++)l.push(p[e])}return new iR(r,void 0,l)})}createNodeMesh(e){let t=this.json,n=this,i=t.nodes[e];return void 0===i.mesh?null:n.getDependency("mesh",i.mesh).then(function(e){let t=n._getNodeRef(n.meshCache,i.mesh,e);return void 0!==i.weights&&t.traverse(function(e){if(e.isMesh)for(let t=0,n=i.weights.length;t<n;t++)e.morphTargetInfluences[t]=i.weights[t]}),t})}loadNode(e){let t=this.json.nodes[e],n=this._loadNodeShallow(e),i=[],r=t.children||[];for(let e=0,t=r.length;e<t;e++)i.push(this.getDependency("node",r[e]));let a=void 0===t.skin?Promise.resolve(null):this.getDependency("skin",t.skin);return Promise.all([n,Promise.all(i),a]).then(function(e){let t=e[0],n=e[1],i=e[2];null!==i&&t.traverse(function(e){e.isSkinnedMesh&&e.bind(i,uL)});for(let e=0,i=n.length;e<i;e++)t.add(n[e]);return t})}_loadNodeShallow(e){let t=this.json,n=this.extensions,i=this;if(void 0!==this.nodeCache[e])return this.nodeCache[e];let r=t.nodes[e],a=r.name?i.createUniqueName(r.name):"",s=[],o=i._invokeOne(function(t){return t.createNodeMesh&&t.createNodeMesh(e)});return o&&s.push(o),void 0!==r.camera&&s.push(i.getDependency("camera",r.camera).then(function(e){return i._getNodeRef(i.cameraCache,r.camera,e)})),i._invokeAll(function(t){return t.createNodeAttachment&&t.createNodeAttachment(e)}).forEach(function(e){s.push(e)}),this.nodeCache[e]=Promise.all(s).then(function(t){let s;if((s=!0===r.isBone?new nc:t.length>1?new t4:1===t.length?t[0]:new e3)!==t[0])for(let e=0,n=t.length;e<n;e++)s.add(t[e]);if(r.name&&(s.userData.name=r.name,s.name=a),uR(s,r),r.extensions&&uA(n,s,r),void 0!==r.matrix){let e=new eP;e.fromArray(r.matrix),s.applyMatrix4(e)}else void 0!==r.translation&&s.position.fromArray(r.translation),void 0!==r.rotation&&s.quaternion.fromArray(r.rotation),void 0!==r.scale&&s.scale.fromArray(r.scale);if(i.associations.has(s)){if(void 0!==r.mesh&&i.meshCache.refs[r.mesh]>1){let e=i.associations.get(s);i.associations.set(s,{...e})}}else i.associations.set(s,{});return i.associations.get(s).nodes=e,s}),this.nodeCache[e]}loadScene(e){let t=this.extensions,n=this.json.scenes[e],i=this,r=new t4;n.name&&(r.name=i.createUniqueName(n.name)),uR(r,n),n.extensions&&uA(t,r,n);let a=n.nodes||[],s=[];for(let e=0,t=a.length;e<t;e++)s.push(i.getDependency("node",a[e]));return Promise.all(s).then(function(e){for(let t=0,n=e.length;t<n;t++)r.add(e[t]);return i.associations=(e=>{let t=new Map;for(let[e,n]of i.associations)(e instanceof tm||e instanceof $)&&t.set(e,n);return e.traverse(e=>{let n=i.associations.get(e);null!=n&&t.set(e,n)}),t})(r),r})}_createAnimationTracks(e,t,n,i,r){let a,s=[],o=e.name?e.name:e.uuid,l=[];switch(uT[r.path]===uT.weights?e.traverse(function(e){e.morphTargetInfluences&&l.push(e.name?e.name:e.uuid)}):l.push(o),uT[r.path]){case uT.weights:a=iS;break;case uT.rotation:a=iT;break;case uT.translation:case uT.scale:a=iA;break;default:a=1===n.itemSize?iS:iA}let h=void 0!==i.interpolation?uw[i.interpolation]:2301,u=this._getArrayFromAccessor(n);for(let e=0,n=l.length;e<n;e++){let n=new a(l[e]+"."+uT[r.path],t.array,u,h);"CUBICSPLINE"===i.interpolation&&this._createCubicSplineTrackInterpolant(n),s.push(n)}return s}_getArrayFromAccessor(e){let t=e.array;if(e.normalized){let e=uP(t.constructor),n=new Float32Array(t.length);for(let i=0,r=t.length;i<r;i++)n[i]=t[i]*e;t=n}return t}_createCubicSplineTrackInterpolant(e){e.createInterpolant=function(e){return new(this instanceof iT?u_:ug)(this.times,this.values,this.getValueSize()/3,e)},e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function uN(e,t,n){let i=t.attributes,r=[];for(let t in i){let a=uE[t]||t.toLowerCase();a in e.attributes||r.push(function(t,i){return n.getDependency("accessor",t).then(function(t){e.setAttribute(i,t)})}(i[t],a))}if(void 0!==t.indices&&!e.index){let i=n.getDependency("accessor",t.indices).then(function(t){e.setIndex(t)});r.push(i)}return G.workingColorSpace!==_&&"COLOR_0"in i&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${G.workingColorSpace}" not supported.`),uR(e,t),!function(e,t,n){let i=t.attributes,r=new ei;if(void 0===i.POSITION)return;{let e=n.json.accessors[i.POSITION],t=e.min,a=e.max;if(void 0===t||void 0===a)return console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");if(r.set(new I(t[0],t[1],t[2]),new I(a[0],a[1],a[2])),e.normalized){let t=uP(ux[e.componentType]);r.min.multiplyScalar(t),r.max.multiplyScalar(t)}}let a=t.targets;if(void 0!==a){let e=new I,t=new I;for(let i=0,r=a.length;i<r;i++){let r=a[i];if(void 0!==r.POSITION){let i=n.json.accessors[r.POSITION],a=i.min,s=i.max;if(void 0!==a&&void 0!==s){if(t.setX(Math.max(Math.abs(a[0]),Math.abs(s[0]))),t.setY(Math.max(Math.abs(a[1]),Math.abs(s[1]))),t.setZ(Math.max(Math.abs(a[2]),Math.abs(s[2]))),i.normalized){let e=uP(ux[i.componentType]);t.multiplyScalar(e)}e.max(t)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}r.expandByVector(e)}e.boundingBox=r;let s=new eb;r.getCenter(s.center),s.radius=r.min.distanceTo(r.max)/2,e.boundingSphere=s}(e,t,n),Promise.all(r).then(function(){return void 0!==t.targets?function(e,t,n){let i=!1,r=!1,a=!1;for(let e=0,n=t.length;e<n;e++){let n=t[e];if(void 0!==n.POSITION&&(i=!0),void 0!==n.NORMAL&&(r=!0),void 0!==n.COLOR_0&&(a=!0),i&&r&&a)break}if(!i&&!r&&!a)return Promise.resolve(e);let s=[],o=[],l=[];for(let h=0,u=t.length;h<u;h++){let u=t[h];if(i){let t=void 0!==u.POSITION?n.getDependency("accessor",u.POSITION):e.attributes.position;s.push(t)}if(r){let t=void 0!==u.NORMAL?n.getDependency("accessor",u.NORMAL):e.attributes.normal;o.push(t)}if(a){let t=void 0!==u.COLOR_0?n.getDependency("accessor",u.COLOR_0):e.attributes.color;l.push(t)}}return Promise.all([Promise.all(s),Promise.all(o),Promise.all(l)]).then(function(t){let n=t[0],s=t[1],o=t[2];return i&&(e.morphAttributes.position=n),r&&(e.morphAttributes.normal=s),a&&(e.morphAttributes.color=o),e.morphTargetsRelative=!0,e})}(e,t.targets,n):e})}const uD=new Map([["sofa",4.5],["chair",1.5],["table",3],["decoration",1],["wardrope",3],["lowwardrope",3],["bed",4]]);document.querySelector(".room__container").innerHTML=`
  
  <div class="room__playground">
    <canvas class="playground"></canvas>
  </div>
`,new class{constructor({canvas:e,button:t,container:n}){this.canvas=e,this.button=t,this.furnitureList=hL.default,this.glb=null,this.walls=[],this.container=n,this.width=this.container.clientWidth,this.height=this.container.clientHeight,this.scene=new t8,this.camera=new t0(50,this.width/this.height,.1,100),this.camera.position.set(14,12,14),this.renderer=new sE({antialias:!0,canvas:this.canvas}),this.renderer.setSize(this.width,this.height),this.controls=new hk(this.camera,this.renderer.domElement),this.raycaster=new rr,this.plane=new nR,this.pointer=new P,this.intersectPoint=new I,this.gridSize=1,this.bounds={xMin:-5,xMax:5,zMin:-5,zMax:5},this.dragging={furniture:null,offset:new I},this.loader=new h0,this.world=new hf,this.world.gravity.set(0,0,0),this.spawnedFurniture=[]}init(){this._setupScene(),this._setupPhysics(),this._setupes(),this._animate()}_setupScene(){this.scene.background=new td(5987163);let e=new i$(0xffffff,1);e.position.set(5,10,5),this.scene.add(e);let t=new tG(new tj(10,.1,10),new il({color:4473924}));t.position.y=-.05,this.scene.add(t);let n=new tj(10,8,.1),i=new tj(.1,8,10),r=new il({color:0xffffff}),a=new tG(n,r),s=new tG(i,r),o=new sq(new sA(10,8,.1)),l=new sZ({mass:0}),h=new sZ({mass:0});l.addShape(o),h.addShape(o),a.position.set(0,3.9,-5.05),s.position.set(-5.05,3.9,0),h.position.copy(s),l.position.copy(a),this.world.addBody(l),this.world.addBody(h),this.walls.push(l,h),this.scene.add(a,s);let u=new rl(10,10,0xe6e6e6ff);this.scene.add(u),this.floorMesh=t,window.addEventListener("resize",this._onResize.bind(this))}_setupPhysics(){let e=new sq(new sA(10,.1,10)),t=new sZ({mass:0});t.addShape(e),t.position.set(0,-.05,0),this.world.addBody(t);let n=new sq(new sA(10,8,.05)),i=new sZ({mass:0}),r=new sZ({mass:0});i.addShape(n),r.addShape(n),i.position.set(0,3.9,-5.05),r.position.set(-5.05,3.9,0),r.quaternion.setFromEuler(0,Math.PI/2,0),this.world.addBody(i,r),this.floorBody=t}_setupes(){this.button&&this.button.addEventListener("click",e=>this.spawnFurniture(e)),this.canvas.addEventListener("pointerdown",this._onPointerDown.bind(this)),window.addEventListener("pointermove",h(hP).throttle(this._onPointerMove.bind(this),50)),window.addEventListener("pointerup",this._onPointerUp.bind(this)),window.addEventListener("contextmenu",this._rotateFurniture.bind(this))}_rotateFurniture(e){e.preventDefault();let t=this.dragging.furniture;if(!t)return;void 0===t.rotationStep&&(t.rotationStep=0),t.rotationStep=(t.rotationStep+1)%4;let n=90*t.rotationStep*E;t.mesh.rotation.y=n,t.mesh.quaternion.setFromEuler(t.mesh.rotation),t.body.angularVelocity.setZero(),t.body.angularDamping=1,t.body.quaternion.copy(t.mesh.quaternion);let i=t.size;[i.x,i.z]=[i.z,i.x],t.body.shapes=[],t.body.shapeOffsets=[],t.body.shapeOrientations=[];let r=new sq(new sA(i.x/2,i.y/2,i.z/2));t.body.addShape(r),t.mesh.position.copy(t.body.position)}isDescendant(e,t){if(e===t)return!0;let n=e.parent;for(;n;){if(n===t)return!0;n=n.parent}return!1}_onPointerDown(e){let t=this.canvas.getBoundingClientRect();this.pointer.x=(e.clientX-t.left)/t.width*2-1,this.pointer.y=-(2*((e.clientY-t.top)/t.height))+1,this.raycaster.setFromCamera(this.pointer,this.camera);let n=this.spawnedFurniture.map(e=>e.mesh),i=this.raycaster.intersectObjects(n);if(i.length>0){if(this.dragging.furniture=this.spawnedFurniture.find(e=>this.isDescendant(i[0].object,e.mesh)),"декорація"===this.dragging.furniture.category.toLowerCase()){let e=new ei().setFromObject(this.dragging.furniture.mesh);this.dragging.furniture.mesh.position.y-=e.min.y,this.dragging.furniture.body.position.copy(this.dragging.furniture.mesh.position)}this.controls.enabled=!1,this.raycaster.ray.intersectPlane(this.plane,this.intersectPoint),this.dragging.offset.copy(this.dragging.furniture.body.position)}this.plane.setFromNormalAndCoplanarPoint(new I(0,1,0),this.floorMesh.position)}_onPointerMove(e){if(!this.dragging.furniture)return;let t=this.canvas.getBoundingClientRect();if(this.pointer.x=(e.clientX-t.left)/t.width*2-1,this.pointer.y=-(2*((e.clientY-t.top)/t.height))+1,this.raycaster.setFromCamera(this.pointer,this.camera),this.raycaster.ray.intersectPlane(this.plane,this.intersectPoint)){let e=this.intersectPoint.clone().sub(this.dragging.offset),t=this.dragging.furniture.size.x/2,n=this.dragging.furniture.size.z/2;e.x=Math.max(this.bounds.xMin+t,Math.min(this.bounds.xMax-t,e.x)),e.z=Math.max(this.bounds.zMin+n,Math.min(this.bounds.zMax-n,e.z));let i=this.dragging.furniture.body,r=i.position.clone();i.position.x=e.x,i.position.y=e.y;let a=!1;if(this.spawnedFurniture.forEach(e=>{e.body!==i&&"Декорація"!==this.dragging.furniture.category&&"Декорація"!==e.category&&this.aabbIntersect(i,e.body,{ignoreY:!0})&&(a=!0)}),this.walls.forEach(e=>{this.aabbIntersect(i,e,{ignoreY:!0})&&(a=!0)}),a)return void i.position.copy(r);this.dragging.furniture.mesh.position.copy(e),this.dragging.furniture.body.position.copy(e),i.position.set(e.x,r.y,e.z),i.velocity.setZero()}}_onPointerUp(){this.dragging.furniture&&(this.controls.enabled=!0,this.dragging.furniture.body.velocity.setZero(),this.dragging.furniture.body.angularVelocity.setZero(),"Декорація"===this.dragging.furniture.category&&this.snapOnTop(this.dragging.furniture),this.dragging.furniture=null)}snapOnTop(e){let t=e.body,n=this.spawnedFurniture.filter(n=>n!==e&&"Декорація"!==n.category&&this.aabbIntersect(t,n.body,{ignoreY:!0}));if(0===n.length)return;let i=null,r=1/0;if(n.forEach(n=>{let a=n.body.position.y+(n.size.y-.05),s=t.position.y-(e.size.y-.05);console.log(n);let o=s-a;o<=0&&Math.abs(o)<r&&(r=Math.abs(o),i=n)}),i){if(console.log(i),"wardrope"===i.type){let n=i.body.position.y+(i.size.y-.05)+(e.size.y-.05);t.position.y=n,e.mesh.position.y=n;return}let n=i.body.position.y+i.size.y/2-.05+e.size.y/2-.05;t.position.y=n,e.mesh.position.y=n}}aabbIntersect(e,t,n={}){let i=e.shapes[0],r=t.shapes[0],a={min:new sA,max:new sA},s={min:new sA,max:new sA};i.calculateWorldAABB(e.position,e.quaternion,a.min,a.max),r.calculateWorldAABB(t.position,t.quaternion,s.min,s.max);let o=a.min.x<=s.max.x&&a.max.x>=s.min.x,l=a.min.y<=s.max.y&&a.max.y>=s.min.y,h=a.min.z<=s.max.z&&a.max.z>=s.min.z;return o&&(!!n.ignoreY||l)&&h}normalizePivot(e){let t=new t4;t.add(e);let n=new ei().setFromObject(e),i=new I,r=new I;return n.getCenter(i),r.copy(n.min),e.position.sub(i),e.position.y=-r.y,t}spawnFurniture(e){let t=this.furnitureList.find(t=>t.key===e.target.dataset.spawn),n=t.type;this.loader.load(t.glb,e=>{let i=e.scene,r=this.normalizePivot(i);this.scene.add(r);let a=new ei().setFromObject(r),s=new I;a.getSize(s);let o=uD.get(t.type)/Math.max(s.x,s.y,s.z);r.scale.set(o,o,o);let l=new ei().setFromObject(r),h=new I;l.getSize(h);let u=new sq(new sA(h.x/2,h.y/2,h.z/2)),c=new sZ({mass:0});c.addShape(u),this.world.addBody(c),this.spawnedFurniture.push({mesh:r,body:c,size:h,type:n,category:t.category})})}_animate(){this.clock=new i3;let e=()=>{requestAnimationFrame(e);let t=this.clock.getDelta();this.world.step(1/60,t,3),this.spawnedFurniture.forEach(({mesh:e,body:t})=>{e.position.copy(t.position),e.quaternion.copy(t.quaternion)}),this.controls.update(),this.renderer.render(this.scene,this.camera)};e()}_onResize(){this.width=this.container.clientWidth,this.height=this.container.clientHeight,this.camera.aspect=this.width/this.height,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.width,this.height)}}({canvas:document.querySelector(".playground"),button:document.querySelector("[data-list]"),container:document.querySelector(".room__playground")}).init();
//# sourceMappingURL=RoomCraft.d43e7a70.js.map
